import {
  require_jquery
} from "./chunk-W2TZRSQ2.js";
import {
  __commonJS
} from "./chunk-6NOISVLF.js";

// node_modules/admin-lte/plugins/summernote/summernote-bs4.min.js
var require_summernote_bs4_min = __commonJS({
  "node_modules/admin-lte/plugins/summernote/summernote-bs4.min.js"(exports, module) {
    !function(t, e) {
      if ("object" == typeof exports && "object" == typeof module)
        module.exports = e(require_jquery());
      else if ("function" == typeof define && define.amd)
        define(["jQuery"], e);
      else {
        var n = "object" == typeof exports ? e(require_jquery()) : e(t.jQuery);
        for (var o in n)
          ("object" == typeof exports ? exports : t)[o] = n[o];
      }
    }(self, function(t) {
      return (() => {
        "use strict";
        var e = { 9770: (t2, e2, n2) => {
          var o2 = n2(1145), i2 = n2.n(o2);
          i2().summernote = i2().summernote || { lang: {} }, i2().extend(i2().summernote.lang, { "en-US": { font: { bold: "Bold", italic: "Italic", underline: "Underline", clear: "Remove Font Style", height: "Line Height", name: "Font Family", strikethrough: "Strikethrough", subscript: "Subscript", superscript: "Superscript", size: "Font Size", sizeunit: "Font Size Unit" }, image: { image: "Picture", insert: "Insert Image", resizeFull: "Resize full", resizeHalf: "Resize half", resizeQuarter: "Resize quarter", resizeNone: "Original size", floatLeft: "Float Left", floatRight: "Float Right", floatNone: "Remove float", shapeRounded: "Shape: Rounded", shapeCircle: "Shape: Circle", shapeThumbnail: "Shape: Thumbnail", shapeNone: "Shape: None", dragImageHere: "Drag image or text here", dropImage: "Drop image or Text", selectFromFiles: "Select from files", maximumFileSize: "Maximum file size", maximumFileSizeError: "Maximum file size exceeded.", url: "Image URL", remove: "Remove Image", original: "Original" }, video: { video: "Video", videoLink: "Video Link", insert: "Insert Video", url: "Video URL", providers: "(YouTube, Google Drive, Vimeo, Vine, Instagram, DailyMotion, Youku, Peertube)" }, link: { link: "Link", insert: "Insert Link", unlink: "Unlink", edit: "Edit", textToDisplay: "Text to display", url: "To what URL should this link go?", openInNewWindow: "Open in new window", useProtocol: "Use default protocol" }, table: { table: "Table", addRowAbove: "Add row above", addRowBelow: "Add row below", addColLeft: "Add column left", addColRight: "Add column right", delRow: "Delete row", delCol: "Delete column", delTable: "Delete table" }, hr: { insert: "Insert Horizontal Rule" }, style: { style: "Style", p: "Normal", blockquote: "Quote", pre: "Code", h1: "Header 1", h2: "Header 2", h3: "Header 3", h4: "Header 4", h5: "Header 5", h6: "Header 6" }, lists: { unordered: "Unordered list", ordered: "Ordered list" }, options: { help: "Help", fullscreen: "Full Screen", codeview: "Code View" }, paragraph: { paragraph: "Paragraph", outdent: "Outdent", indent: "Indent", left: "Align left", center: "Align center", right: "Align right", justify: "Justify full" }, color: { recent: "Recent Color", more: "More Color", background: "Background Color", foreground: "Text Color", transparent: "Transparent", setTransparent: "Set transparent", reset: "Reset", resetToDefault: "Reset to default", cpSelect: "Select" }, shortcut: { shortcuts: "Keyboard shortcuts", close: "Close", textFormatting: "Text formatting", action: "Action", paragraphFormatting: "Paragraph formatting", documentStyle: "Document Style", extraKeys: "Extra keys" }, help: { escape: "Escape", insertParagraph: "Insert Paragraph", undo: "Undo the last command", redo: "Redo the last command", tab: "Tab", untab: "Untab", bold: "Set a bold style", italic: "Set a italic style", underline: "Set a underline style", strikethrough: "Set a strikethrough style", removeFormat: "Clean a style", justifyLeft: "Set left align", justifyCenter: "Set center align", justifyRight: "Set right align", justifyFull: "Set full align", insertUnorderedList: "Toggle unordered list", insertOrderedList: "Toggle ordered list", outdent: "Outdent on current paragraph", indent: "Indent on current paragraph", formatPara: "Change current block's format as a paragraph(P tag)", formatH1: "Change current block's format as H1", formatH2: "Change current block's format as H2", formatH3: "Change current block's format as H3", formatH4: "Change current block's format as H4", formatH5: "Change current block's format as H5", formatH6: "Change current block's format as H6", insertHorizontalRule: "Insert horizontal rule", "linkDialog.show": "Show Link Dialog" }, history: { undo: "Undo", redo: "Redo" }, specialChar: { specialChar: "SPECIAL CHARACTERS", select: "Select Special characters" }, output: { noSelection: "No Selection Made!" } } });
        }, 1145: (e2) => {
          e2.exports = t;
        } }, n = {};
        function o(t2) {
          var i2 = n[t2];
          if (void 0 !== i2)
            return i2.exports;
          var r = n[t2] = { exports: {} };
          return e[t2](r, r.exports, o), r.exports;
        }
        o.n = (t2) => {
          var e2 = t2 && t2.__esModule ? () => t2.default : () => t2;
          return o.d(e2, { a: e2 }), e2;
        }, o.d = (t2, e2) => {
          for (var n2 in e2)
            o.o(e2, n2) && !o.o(t2, n2) && Object.defineProperty(t2, n2, { enumerable: true, get: e2[n2] });
        }, o.o = (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), o.r = (t2) => {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        };
        var i = {};
        return (() => {
          o.r(i);
          var t2 = o(1145), e2 = o.n(t2), n2 = (o(9770), ["sans-serif", "serif", "monospace", "cursive", "fantasy"]);
          function r(t3) {
            return -1 === e2().inArray(t3.toLowerCase(), n2) ? "'".concat(t3, "'") : t3;
          }
          var a, s = navigator.userAgent, l = /MSIE|Trident/i.test(s);
          if (l) {
            var c = /MSIE (\d+[.]\d+)/.exec(s);
            c && (a = parseFloat(c[1])), (c = /Trident\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(s)) && (a = parseFloat(c[1]));
          }
          var u = /Edge\/\d+/.test(s), d = "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0, h = l ? "DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted" : "input";
          const f = { isMac: navigator.appVersion.indexOf("Mac") > -1, isMSIE: l, isEdge: u, isFF: !u && /firefox/i.test(s), isPhantom: /PhantomJS/i.test(s), isWebkit: !u && /webkit/i.test(s), isChrome: !u && /chrome/i.test(s), isSafari: !u && /safari/i.test(s) && !/chrome/i.test(s), browserVersion: a, isSupportTouch: d, isFontInstalled: function(t3) {
            var e3 = "Comic Sans MS" === t3 ? "Courier New" : "Comic Sans MS", n3 = "mmmmmmmmmmwwwww", o2 = document.createElement("canvas").getContext("2d");
            o2.font = "200px '" + e3 + "'";
            var i2 = o2.measureText(n3).width;
            return o2.font = "200px " + r(t3) + ', "' + e3 + '"', i2 !== o2.measureText(n3).width;
          }, isW3CRangeSupport: !!document.createRange, inputEventName: h, genericFontFamilies: n2, validFontName: r };
          var p = 0;
          const m = { eq: function(t3) {
            return function(e3) {
              return t3 === e3;
            };
          }, eq2: function(t3, e3) {
            return t3 === e3;
          }, peq2: function(t3) {
            return function(e3, n3) {
              return e3[t3] === n3[t3];
            };
          }, ok: function() {
            return true;
          }, fail: function() {
            return false;
          }, self: function(t3) {
            return t3;
          }, not: function(t3) {
            return function() {
              return !t3.apply(t3, arguments);
            };
          }, and: function(t3, e3) {
            return function(n3) {
              return t3(n3) && e3(n3);
            };
          }, invoke: function(t3, e3) {
            return function() {
              return t3[e3].apply(t3, arguments);
            };
          }, resetUniqueId: function() {
            p = 0;
          }, uniqueId: function(t3) {
            var e3 = ++p + "";
            return t3 ? t3 + e3 : e3;
          }, rect2bnd: function(t3) {
            var n3 = e2()(document);
            return { top: t3.top + n3.scrollTop(), left: t3.left + n3.scrollLeft(), width: t3.right - t3.left, height: t3.bottom - t3.top };
          }, invertObject: function(t3) {
            var e3 = {};
            for (var n3 in t3)
              Object.prototype.hasOwnProperty.call(t3, n3) && (e3[t3[n3]] = n3);
            return e3;
          }, namespaceToCamel: function(t3, e3) {
            return (e3 = e3 || "") + t3.split(".").map(function(t4) {
              return t4.substring(0, 1).toUpperCase() + t4.substring(1);
            }).join("");
          }, debounce: function(t3, e3, n3) {
            var o2;
            return function() {
              var i2 = this, r2 = arguments, a2 = function() {
                o2 = null, n3 || t3.apply(i2, r2);
              }, s2 = n3 && !o2;
              clearTimeout(o2), o2 = setTimeout(a2, e3), s2 && t3.apply(i2, r2);
            };
          }, isValidUrl: function(t3) {
            return /[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/gi.test(t3);
          } };
          function v(t3) {
            return t3[0];
          }
          function g(t3) {
            return t3[t3.length - 1];
          }
          function b(t3) {
            return t3.slice(1);
          }
          function y(t3, e3) {
            if (t3 && t3.length && e3) {
              if (t3.indexOf)
                return -1 !== t3.indexOf(e3);
              if (t3.contains)
                return t3.contains(e3);
            }
            return false;
          }
          const k = { head: v, last: g, initial: function(t3) {
            return t3.slice(0, t3.length - 1);
          }, tail: b, prev: function(t3, e3) {
            if (t3 && t3.length && e3) {
              var n3 = t3.indexOf(e3);
              return -1 === n3 ? null : t3[n3 - 1];
            }
            return null;
          }, next: function(t3, e3) {
            if (t3 && t3.length && e3) {
              var n3 = t3.indexOf(e3);
              return -1 === n3 ? null : t3[n3 + 1];
            }
            return null;
          }, find: function(t3, e3) {
            for (var n3 = 0, o2 = t3.length; n3 < o2; n3++) {
              var i2 = t3[n3];
              if (e3(i2))
                return i2;
            }
          }, contains: y, all: function(t3, e3) {
            for (var n3 = 0, o2 = t3.length; n3 < o2; n3++)
              if (!e3(t3[n3]))
                return false;
            return true;
          }, sum: function(t3, e3) {
            return e3 = e3 || m.self, t3.reduce(function(t4, n3) {
              return t4 + e3(n3);
            }, 0);
          }, from: function(t3) {
            for (var e3 = [], n3 = t3.length, o2 = -1; ++o2 < n3; )
              e3[o2] = t3[o2];
            return e3;
          }, isEmpty: function(t3) {
            return !t3 || !t3.length;
          }, clusterBy: function(t3, e3) {
            return t3.length ? b(t3).reduce(function(t4, n3) {
              var o2 = g(t4);
              return e3(g(o2), n3) ? o2[o2.length] = n3 : t4[t4.length] = [n3], t4;
            }, [[v(t3)]]) : [];
          }, compact: function(t3) {
            for (var e3 = [], n3 = 0, o2 = t3.length; n3 < o2; n3++)
              t3[n3] && e3.push(t3[n3]);
            return e3;
          }, unique: function(t3) {
            for (var e3 = [], n3 = 0, o2 = t3.length; n3 < o2; n3++)
              y(e3, t3[n3]) || e3.push(t3[n3]);
            return e3;
          } };
          var w = String.fromCharCode(160);
          function C(t3) {
            return t3 && e2()(t3).hasClass("note-editable");
          }
          function x(t3) {
            return t3 = t3.toUpperCase(), function(e3) {
              return e3 && e3.nodeName.toUpperCase() === t3;
            };
          }
          function S(t3) {
            return t3 && 3 === t3.nodeType;
          }
          function T(t3) {
            return t3 && /^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(t3.nodeName.toUpperCase());
          }
          function E(t3) {
            return !C(t3) && (t3 && /^DIV|^P|^LI|^H[1-7]/.test(t3.nodeName.toUpperCase()));
          }
          var I = x("PRE"), $ = x("LI");
          var N = x("TABLE"), P = x("DATA");
          function R(t3) {
            return !(H(t3) || L(t3) || A(t3) || E(t3) || N(t3) || D(t3) || P(t3));
          }
          function L(t3) {
            return t3 && /^UL|^OL/.test(t3.nodeName.toUpperCase());
          }
          var A = x("HR");
          function F(t3) {
            return t3 && /^TD|^TH/.test(t3.nodeName.toUpperCase());
          }
          var D = x("BLOCKQUOTE");
          function H(t3) {
            return F(t3) || D(t3) || C(t3);
          }
          var z = x("A");
          var B = x("BODY");
          var M = f.isMSIE && f.browserVersion < 11 ? "&nbsp;" : "<br>";
          function O(t3) {
            return S(t3) ? t3.nodeValue.length : t3 ? t3.childNodes.length : 0;
          }
          function U(t3) {
            var e3 = O(t3);
            return 0 === e3 || (!S(t3) && 1 === e3 && t3.innerHTML === M || !(!k.all(t3.childNodes, S) || "" !== t3.innerHTML));
          }
          function j(t3) {
            T(t3) || O(t3) || (t3.innerHTML = M);
          }
          function W(t3, e3) {
            for (; t3; ) {
              if (e3(t3))
                return t3;
              if (C(t3))
                break;
              t3 = t3.parentNode;
            }
            return null;
          }
          function K(t3, e3) {
            e3 = e3 || m.fail;
            var n3 = [];
            return W(t3, function(t4) {
              return C(t4) || n3.push(t4), e3(t4);
            }), n3;
          }
          function V(t3, e3) {
            e3 = e3 || m.fail;
            for (var n3 = []; t3 && !e3(t3); )
              n3.push(t3), t3 = t3.nextSibling;
            return n3;
          }
          function q(t3, e3) {
            var n3 = e3.nextSibling, o2 = e3.parentNode;
            return n3 ? o2.insertBefore(t3, n3) : o2.appendChild(t3), t3;
          }
          function _(t3, n3) {
            return e2().each(n3, function(e3, n4) {
              t3.appendChild(n4);
            }), t3;
          }
          function G(t3) {
            return 0 === t3.offset;
          }
          function Y(t3) {
            return t3.offset === O(t3.node);
          }
          function Z(t3) {
            return G(t3) || Y(t3);
          }
          function Q(t3, e3) {
            for (; t3 && t3 !== e3; ) {
              if (0 !== J(t3))
                return false;
              t3 = t3.parentNode;
            }
            return true;
          }
          function X(t3, e3) {
            if (!e3)
              return false;
            for (; t3 && t3 !== e3; ) {
              if (J(t3) !== O(t3.parentNode) - 1)
                return false;
              t3 = t3.parentNode;
            }
            return true;
          }
          function J(t3) {
            for (var e3 = 0; t3 = t3.previousSibling; )
              e3 += 1;
            return e3;
          }
          function tt(t3) {
            return !!(t3 && t3.childNodes && t3.childNodes.length);
          }
          function et(t3, e3) {
            var n3, o2;
            if (0 === t3.offset) {
              if (C(t3.node))
                return null;
              n3 = t3.node.parentNode, o2 = J(t3.node);
            } else
              tt(t3.node) ? o2 = O(n3 = t3.node.childNodes[t3.offset - 1]) : (n3 = t3.node, o2 = e3 ? 0 : t3.offset - 1);
            return { node: n3, offset: o2 };
          }
          function nt(t3, e3) {
            var n3, o2;
            if (O(t3.node) === t3.offset) {
              if (C(t3.node))
                return null;
              var i2 = it(t3.node);
              i2 ? (n3 = i2, o2 = 0) : (n3 = t3.node.parentNode, o2 = J(t3.node) + 1);
            } else
              tt(t3.node) ? (n3 = t3.node.childNodes[t3.offset], o2 = 0) : (n3 = t3.node, o2 = e3 ? O(t3.node) : t3.offset + 1);
            return { node: n3, offset: o2 };
          }
          function ot(t3, e3) {
            var n3, o2 = 0;
            if (U(t3.node))
              return null === t3.node ? null : { node: n3 = t3.node.nextSibling, offset: o2 = 0 };
            if (O(t3.node) === t3.offset) {
              if (C(t3.node))
                return null;
              n3 = t3.node.parentNode, o2 = J(t3.node) + 1, C(n3) && (n3 = t3.node.nextSibling, o2 = 0);
            } else if (tt(t3.node)) {
              if (o2 = 0, U(n3 = t3.node.childNodes[t3.offset]))
                return U(t3.node.nextSibling) ? null : { node: t3.node.nextSibling, offset: o2 };
            } else if (n3 = t3.node, o2 = e3 ? O(t3.node) : t3.offset + 1, U(n3))
              return null;
            return { node: n3, offset: o2 };
          }
          function it(t3) {
            if (t3.nextSibling && t3.parent === t3.nextSibling.parent)
              return S(t3.nextSibling) ? t3.nextSibling : it(t3.nextSibling);
          }
          function rt(t3, e3) {
            return t3.node === e3.node && t3.offset === e3.offset;
          }
          function at(t3, e3) {
            var n3 = e3 && e3.isSkipPaddingBlankHTML, o2 = e3 && e3.isNotSplitEdgePoint, i2 = e3 && e3.isDiscardEmptySplits;
            if (i2 && (n3 = true), Z(t3) && (S(t3.node) || o2)) {
              if (G(t3))
                return t3.node;
              if (Y(t3))
                return t3.node.nextSibling;
            }
            if (S(t3.node))
              return t3.node.splitText(t3.offset);
            var r2 = t3.node.childNodes[t3.offset], a2 = q(t3.node.cloneNode(false), t3.node);
            return _(a2, V(r2)), n3 || (j(t3.node), j(a2)), i2 && (U(t3.node) && ct(t3.node), U(a2)) ? (ct(a2), t3.node.nextSibling) : a2;
          }
          function st(t3, e3, n3) {
            var o2 = K(e3.node, m.eq(t3));
            return o2.length ? 1 === o2.length ? at(e3, n3) : o2.reduce(function(t4, o3) {
              return t4 === e3.node && (t4 = at(e3, n3)), at({ node: o3, offset: t4 ? J(t4) : O(o3) }, n3);
            }) : null;
          }
          function lt(t3) {
            return document.createElement(t3);
          }
          function ct(t3, e3) {
            if (t3 && t3.parentNode) {
              if (t3.removeNode)
                return t3.removeNode(e3);
              var n3 = t3.parentNode;
              if (!e3) {
                for (var o2 = [], i2 = 0, r2 = t3.childNodes.length; i2 < r2; i2++)
                  o2.push(t3.childNodes[i2]);
                for (var a2 = 0, s2 = o2.length; a2 < s2; a2++)
                  n3.insertBefore(o2[a2], t3);
              }
              n3.removeChild(t3);
            }
          }
          var ut = x("TEXTAREA");
          function dt(t3, e3) {
            var n3 = ut(t3[0]) ? t3.val() : t3.html();
            return e3 ? n3.replace(/[\n\r]/g, "") : n3;
          }
          const ht = { NBSP_CHAR: w, ZERO_WIDTH_NBSP_CHAR: "\uFEFF", blank: M, emptyPara: "<p>".concat(M, "</p>"), makePredByNodeName: x, isEditable: C, isControlSizing: function(t3) {
            return t3 && e2()(t3).hasClass("note-control-sizing");
          }, isText: S, isElement: function(t3) {
            return t3 && 1 === t3.nodeType;
          }, isVoid: T, isPara: E, isPurePara: function(t3) {
            return E(t3) && !$(t3);
          }, isHeading: function(t3) {
            return t3 && /^H[1-7]/.test(t3.nodeName.toUpperCase());
          }, isInline: R, isBlock: m.not(R), isBodyInline: function(t3) {
            return R(t3) && !W(t3, E);
          }, isBody: B, isParaInline: function(t3) {
            return R(t3) && !!W(t3, E);
          }, isPre: I, isList: L, isTable: N, isData: P, isCell: F, isBlockquote: D, isBodyContainer: H, isAnchor: z, isDiv: x("DIV"), isLi: $, isBR: x("BR"), isSpan: x("SPAN"), isB: x("B"), isU: x("U"), isS: x("S"), isI: x("I"), isImg: x("IMG"), isTextarea: ut, deepestChildIsEmpty: function(t3) {
            do {
              if (null === t3.firstElementChild || "" === t3.firstElementChild.innerHTML)
                break;
            } while (t3 = t3.firstElementChild);
            return U(t3);
          }, isEmpty: U, isEmptyAnchor: m.and(z, U), isClosestSibling: function(t3, e3) {
            return t3.nextSibling === e3 || t3.previousSibling === e3;
          }, withClosestSiblings: function(t3, e3) {
            e3 = e3 || m.ok;
            var n3 = [];
            return t3.previousSibling && e3(t3.previousSibling) && n3.push(t3.previousSibling), n3.push(t3), t3.nextSibling && e3(t3.nextSibling) && n3.push(t3.nextSibling), n3;
          }, nodeLength: O, isLeftEdgePoint: G, isRightEdgePoint: Y, isEdgePoint: Z, isLeftEdgeOf: Q, isRightEdgeOf: X, isLeftEdgePointOf: function(t3, e3) {
            return G(t3) && Q(t3.node, e3);
          }, isRightEdgePointOf: function(t3, e3) {
            return Y(t3) && X(t3.node, e3);
          }, prevPoint: et, nextPoint: nt, nextPointWithEmptyNode: ot, isSamePoint: rt, isVisiblePoint: function(t3) {
            if (S(t3.node) || !tt(t3.node) || U(t3.node))
              return true;
            var e3 = t3.node.childNodes[t3.offset - 1], n3 = t3.node.childNodes[t3.offset];
            return !((e3 && !T(e3) || n3 && !T(n3)) && !N(n3));
          }, prevPointUntil: function(t3, e3) {
            for (; t3; ) {
              if (e3(t3))
                return t3;
              t3 = et(t3);
            }
            return null;
          }, nextPointUntil: function(t3, e3) {
            for (; t3; ) {
              if (e3(t3))
                return t3;
              t3 = nt(t3);
            }
            return null;
          }, isCharPoint: function(t3) {
            if (!S(t3.node))
              return false;
            var e3 = t3.node.nodeValue.charAt(t3.offset - 1);
            return e3 && " " !== e3 && e3 !== w;
          }, isSpacePoint: function(t3) {
            if (!S(t3.node))
              return false;
            var e3 = t3.node.nodeValue.charAt(t3.offset - 1);
            return " " === e3 || e3 === w;
          }, walkPoint: function(t3, e3, n3, o2) {
            for (var i2 = t3; i2 && (n3(i2), !rt(i2, e3)); ) {
              i2 = ot(i2, o2 && t3.node !== i2.node && e3.node !== i2.node);
            }
          }, ancestor: W, singleChildAncestor: function(t3, e3) {
            for (t3 = t3.parentNode; t3 && 1 === O(t3); ) {
              if (e3(t3))
                return t3;
              if (C(t3))
                break;
              t3 = t3.parentNode;
            }
            return null;
          }, listAncestor: K, lastAncestor: function(t3, e3) {
            var n3 = K(t3);
            return k.last(n3.filter(e3));
          }, listNext: V, listPrev: function(t3, e3) {
            e3 = e3 || m.fail;
            for (var n3 = []; t3 && !e3(t3); )
              n3.push(t3), t3 = t3.previousSibling;
            return n3;
          }, listDescendant: function(t3, e3) {
            var n3 = [];
            return e3 = e3 || m.ok, function o2(i2) {
              t3 !== i2 && e3(i2) && n3.push(i2);
              for (var r2 = 0, a2 = i2.childNodes.length; r2 < a2; r2++)
                o2(i2.childNodes[r2]);
            }(t3), n3;
          }, commonAncestor: function(t3, e3) {
            for (var n3 = K(t3), o2 = e3; o2; o2 = o2.parentNode)
              if (n3.indexOf(o2) > -1)
                return o2;
            return null;
          }, wrap: function(t3, n3) {
            var o2 = t3.parentNode, i2 = e2()("<" + n3 + ">")[0];
            return o2.insertBefore(i2, t3), i2.appendChild(t3), i2;
          }, insertAfter: q, appendChildNodes: _, position: J, hasChildren: tt, makeOffsetPath: function(t3, e3) {
            return K(e3, m.eq(t3)).map(J).reverse();
          }, fromOffsetPath: function(t3, e3) {
            for (var n3 = t3, o2 = 0, i2 = e3.length; o2 < i2; o2++)
              n3 = n3.childNodes.length <= e3[o2] ? n3.childNodes[n3.childNodes.length - 1] : n3.childNodes[e3[o2]];
            return n3;
          }, splitTree: st, splitPoint: function(t3, e3) {
            var n3, o2, i2 = e3 ? E : H, r2 = K(t3.node, i2), a2 = k.last(r2) || t3.node;
            i2(a2) ? (n3 = r2[r2.length - 2], o2 = a2) : o2 = (n3 = a2).parentNode;
            var s2 = n3 && st(n3, t3, { isSkipPaddingBlankHTML: e3, isNotSplitEdgePoint: e3 });
            return s2 || o2 !== t3.node || (s2 = t3.node.childNodes[t3.offset]), { rightNode: s2, container: o2 };
          }, create: lt, createText: function(t3) {
            return document.createTextNode(t3);
          }, remove: ct, removeWhile: function(t3, e3) {
            for (; t3 && !C(t3) && e3(t3); ) {
              var n3 = t3.parentNode;
              ct(t3), t3 = n3;
            }
          }, replace: function(t3, e3) {
            if (t3.nodeName.toUpperCase() === e3.toUpperCase())
              return t3;
            var n3 = lt(e3);
            return t3.style.cssText && (n3.style.cssText = t3.style.cssText), _(n3, k.from(t3.childNodes)), q(n3, t3), ct(t3), n3;
          }, html: function(t3, e3) {
            var n3 = dt(t3);
            if (e3) {
              n3 = (n3 = n3.replace(/<(\/?)(\b(?!!)[^>\s]*)(.*?)(\s*\/?>)/g, function(t4, e4, n4) {
                n4 = n4.toUpperCase();
                var o2 = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(n4) && !!e4, i2 = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(n4);
                return t4 + (o2 || i2 ? "\n" : "");
              })).trim();
            }
            return n3;
          }, value: dt, posFromPlaceholder: function(t3) {
            var n3 = e2()(t3), o2 = n3.offset(), i2 = n3.outerHeight(true);
            return { left: o2.left, top: o2.top + i2 };
          }, attachEvents: function(t3, e3) {
            Object.keys(e3).forEach(function(n3) {
              t3.on(n3, e3[n3]);
            });
          }, detachEvents: function(t3, e3) {
            Object.keys(e3).forEach(function(n3) {
              t3.off(n3, e3[n3]);
            });
          }, isCustomStyleTag: function(t3) {
            return t3 && !S(t3) && k.contains(t3.classList, "note-styletag");
          } };
          function ft(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var pt = function() {
            function t3(n4, o3) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.$note = n4, this.memos = {}, this.modules = {}, this.layoutInfo = {}, this.options = e2().extend(true, {}, o3), e2().summernote.ui = e2().summernote.ui_template(this.options), this.ui = e2().summernote.ui, this.initialize();
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "initialize", value: function() {
              return this.layoutInfo = this.ui.createLayout(this.$note), this._initialize(), this.$note.hide(), this;
            } }, { key: "destroy", value: function() {
              this._destroy(), this.$note.removeData("summernote"), this.ui.removeLayout(this.$note, this.layoutInfo);
            } }, { key: "reset", value: function() {
              var t4 = this.isDisabled();
              this.code(ht.emptyPara), this._destroy(), this._initialize(), t4 && this.disable();
            } }, { key: "_initialize", value: function() {
              var t4 = this;
              this.options.id = m.uniqueId(e2().now()), this.options.container = this.options.container || this.layoutInfo.editor;
              var n4 = e2().extend({}, this.options.buttons);
              Object.keys(n4).forEach(function(e3) {
                t4.memo("button." + e3, n4[e3]);
              });
              var o3 = e2().extend({}, this.options.modules, e2().summernote.plugins || {});
              Object.keys(o3).forEach(function(e3) {
                t4.module(e3, o3[e3], true);
              }), Object.keys(this.modules).forEach(function(e3) {
                t4.initializeModule(e3);
              });
            } }, { key: "_destroy", value: function() {
              var t4 = this;
              Object.keys(this.modules).reverse().forEach(function(e3) {
                t4.removeModule(e3);
              }), Object.keys(this.memos).forEach(function(e3) {
                t4.removeMemo(e3);
              }), this.triggerEvent("destroy", this);
            } }, { key: "code", value: function(t4) {
              var e3 = this.invoke("codeview.isActivated");
              if (void 0 === t4)
                return this.invoke("codeview.sync"), e3 ? this.layoutInfo.codable.val() : this.layoutInfo.editable.html();
              e3 ? this.invoke("codeview.sync", t4) : this.layoutInfo.editable.html(t4), this.$note.val(t4), this.triggerEvent("change", t4, this.layoutInfo.editable);
            } }, { key: "isDisabled", value: function() {
              return "false" === this.layoutInfo.editable.attr("contenteditable");
            } }, { key: "enable", value: function() {
              this.layoutInfo.editable.attr("contenteditable", true), this.invoke("toolbar.activate", true), this.triggerEvent("disable", false), this.options.editing = true;
            } }, { key: "disable", value: function() {
              this.invoke("codeview.isActivated") && this.invoke("codeview.deactivate"), this.layoutInfo.editable.attr("contenteditable", false), this.options.editing = false, this.invoke("toolbar.deactivate", true), this.triggerEvent("disable", true);
            } }, { key: "triggerEvent", value: function() {
              var t4 = k.head(arguments), e3 = k.tail(k.from(arguments)), n4 = this.options.callbacks[m.namespaceToCamel(t4, "on")];
              n4 && n4.apply(this.$note[0], e3), this.$note.trigger("summernote." + t4, e3);
            } }, { key: "initializeModule", value: function(t4) {
              var e3 = this.modules[t4];
              e3.shouldInitialize = e3.shouldInitialize || m.ok, e3.shouldInitialize() && (e3.initialize && e3.initialize(), e3.events && ht.attachEvents(this.$note, e3.events));
            } }, { key: "module", value: function(t4, e3, n4) {
              if (1 === arguments.length)
                return this.modules[t4];
              this.modules[t4] = new e3(this), n4 || this.initializeModule(t4);
            } }, { key: "removeModule", value: function(t4) {
              var e3 = this.modules[t4];
              e3.shouldInitialize() && (e3.events && ht.detachEvents(this.$note, e3.events), e3.destroy && e3.destroy()), delete this.modules[t4];
            } }, { key: "memo", value: function(t4, e3) {
              if (1 === arguments.length)
                return this.memos[t4];
              this.memos[t4] = e3;
            } }, { key: "removeMemo", value: function(t4) {
              this.memos[t4] && this.memos[t4].destroy && this.memos[t4].destroy(), delete this.memos[t4];
            } }, { key: "createInvokeHandlerAndUpdateState", value: function(t4, e3) {
              var n4 = this;
              return function(o3) {
                n4.createInvokeHandler(t4, e3)(o3), n4.invoke("buttons.updateCurrentStyle");
              };
            } }, { key: "createInvokeHandler", value: function(t4, n4) {
              var o3 = this;
              return function(i3) {
                i3.preventDefault();
                var r2 = e2()(i3.target);
                o3.invoke(t4, n4 || r2.closest("[data-value]").data("value"), r2);
              };
            } }, { key: "invoke", value: function() {
              var t4 = k.head(arguments), e3 = k.tail(k.from(arguments)), n4 = t4.split("."), o3 = n4.length > 1, i3 = o3 && k.head(n4), r2 = o3 ? k.last(n4) : k.head(n4), a2 = this.modules[i3 || "editor"];
              return !i3 && this[r2] ? this[r2].apply(this, e3) : a2 && a2[r2] && a2.shouldInitialize() ? a2[r2].apply(a2, e3) : void 0;
            } }], o2 && ft(n3.prototype, o2), i2 && ft(n3, i2), t3;
          }();
          function mt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          function vt(t3, e3) {
            var n3, o2, i2 = t3.parentElement(), r2 = document.body.createTextRange(), a2 = k.from(i2.childNodes);
            for (n3 = 0; n3 < a2.length; n3++)
              if (!ht.isText(a2[n3])) {
                if (r2.moveToElementText(a2[n3]), r2.compareEndPoints("StartToStart", t3) >= 0)
                  break;
                o2 = a2[n3];
              }
            if (0 !== n3 && ht.isText(a2[n3 - 1])) {
              var s2 = document.body.createTextRange(), l2 = null;
              s2.moveToElementText(o2 || i2), s2.collapse(!o2), l2 = o2 ? o2.nextSibling : i2.firstChild;
              var c2 = t3.duplicate();
              c2.setEndPoint("StartToStart", s2);
              for (var u2 = c2.text.replace(/[\r\n]/g, "").length; u2 > l2.nodeValue.length && l2.nextSibling; )
                u2 -= l2.nodeValue.length, l2 = l2.nextSibling;
              l2.nodeValue;
              e3 && l2.nextSibling && ht.isText(l2.nextSibling) && u2 === l2.nodeValue.length && (u2 -= l2.nodeValue.length, l2 = l2.nextSibling), i2 = l2, n3 = u2;
            }
            return { cont: i2, offset: n3 };
          }
          function gt(t3) {
            var e3 = document.body.createTextRange(), n3 = function t4(e4, n4) {
              var o2, i2;
              if (ht.isText(e4)) {
                var r2 = ht.listPrev(e4, m.not(ht.isText)), a2 = k.last(r2).previousSibling;
                o2 = a2 || e4.parentNode, n4 += k.sum(k.tail(r2), ht.nodeLength), i2 = !a2;
              } else {
                if (o2 = e4.childNodes[n4] || e4, ht.isText(o2))
                  return t4(o2, 0);
                n4 = 0, i2 = false;
              }
              return { node: o2, collapseToStart: i2, offset: n4 };
            }(t3.node, t3.offset);
            return e3.moveToElementText(n3.node), e3.collapse(n3.collapseToStart), e3.moveStart("character", n3.offset), e3;
          }
          e2().fn.extend({ summernote: function() {
            var t3 = e2().type(k.head(arguments)), n3 = "string" === t3, o2 = "object" === t3, i2 = e2().extend({}, e2().summernote.options, o2 ? k.head(arguments) : {});
            i2.langInfo = e2().extend(true, {}, e2().summernote.lang["en-US"], e2().summernote.lang[i2.lang]), i2.icons = e2().extend(true, {}, e2().summernote.options.icons, i2.icons), i2.tooltip = "auto" === i2.tooltip ? !f.isSupportTouch : i2.tooltip, this.each(function(t4, n4) {
              var o3 = e2()(n4);
              if (!o3.data("summernote")) {
                var r3 = new pt(o3, i2);
                o3.data("summernote", r3), o3.data("summernote").triggerEvent("init", r3.layoutInfo);
              }
            });
            var r2 = this.first();
            if (r2.length) {
              var a2 = r2.data("summernote");
              if (n3)
                return a2.invoke.apply(a2, k.from(arguments));
              i2.focus && a2.invoke("editor.focus");
            }
            return this;
          } });
          var bt = function() {
            function t3(e3, n4, o3, i3) {
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.sc = e3, this.so = n4, this.ec = o3, this.eo = i3, this.isOnEditable = this.makeIsOn(ht.isEditable), this.isOnList = this.makeIsOn(ht.isList), this.isOnAnchor = this.makeIsOn(ht.isAnchor), this.isOnCell = this.makeIsOn(ht.isCell), this.isOnData = this.makeIsOn(ht.isData);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "nativeRange", value: function() {
              if (f.isW3CRangeSupport) {
                var t4 = document.createRange();
                return t4.setStart(this.sc, this.so), t4.setEnd(this.ec, this.eo), t4;
              }
              var e3 = gt({ node: this.sc, offset: this.so });
              return e3.setEndPoint("EndToEnd", gt({ node: this.ec, offset: this.eo })), e3;
            } }, { key: "getPoints", value: function() {
              return { sc: this.sc, so: this.so, ec: this.ec, eo: this.eo };
            } }, { key: "getStartPoint", value: function() {
              return { node: this.sc, offset: this.so };
            } }, { key: "getEndPoint", value: function() {
              return { node: this.ec, offset: this.eo };
            } }, { key: "select", value: function() {
              var t4 = this.nativeRange();
              if (f.isW3CRangeSupport) {
                var e3 = document.getSelection();
                e3.rangeCount > 0 && e3.removeAllRanges(), e3.addRange(t4);
              } else
                t4.select();
              return this;
            } }, { key: "scrollIntoView", value: function(t4) {
              var n4 = e2()(t4).height();
              return t4.scrollTop + n4 < this.sc.offsetTop && (t4.scrollTop += Math.abs(t4.scrollTop + n4 - this.sc.offsetTop)), this;
            } }, { key: "normalize", value: function() {
              var e3 = function(t4, e4) {
                if (!t4)
                  return t4;
                if (ht.isVisiblePoint(t4) && (!ht.isEdgePoint(t4) || ht.isRightEdgePoint(t4) && !e4 || ht.isLeftEdgePoint(t4) && e4 || ht.isRightEdgePoint(t4) && e4 && ht.isVoid(t4.node.nextSibling) || ht.isLeftEdgePoint(t4) && !e4 && ht.isVoid(t4.node.previousSibling) || ht.isBlock(t4.node) && ht.isEmpty(t4.node)))
                  return t4;
                var n5 = ht.ancestor(t4.node, ht.isBlock), o4 = false;
                if (!o4) {
                  var i3 = ht.prevPoint(t4) || { node: null };
                  o4 = (ht.isLeftEdgePointOf(t4, n5) || ht.isVoid(i3.node)) && !e4;
                }
                var r2 = false;
                if (!r2) {
                  var a2 = ht.nextPoint(t4) || { node: null };
                  r2 = (ht.isRightEdgePointOf(t4, n5) || ht.isVoid(a2.node)) && e4;
                }
                if (o4 || r2) {
                  if (ht.isVisiblePoint(t4))
                    return t4;
                  e4 = !e4;
                }
                return (e4 ? ht.nextPointUntil(ht.nextPoint(t4), ht.isVisiblePoint) : ht.prevPointUntil(ht.prevPoint(t4), ht.isVisiblePoint)) || t4;
              }, n4 = e3(this.getEndPoint(), false), o3 = this.isCollapsed() ? n4 : e3(this.getStartPoint(), true);
              return new t3(o3.node, o3.offset, n4.node, n4.offset);
            } }, { key: "nodes", value: function(t4, e3) {
              t4 = t4 || m.ok;
              var n4 = e3 && e3.includeAncestor, o3 = e3 && e3.fullyContains, i3 = this.getStartPoint(), r2 = this.getEndPoint(), a2 = [], s2 = [];
              return ht.walkPoint(i3, r2, function(e4) {
                var i4;
                ht.isEditable(e4.node) || (o3 ? (ht.isLeftEdgePoint(e4) && s2.push(e4.node), ht.isRightEdgePoint(e4) && k.contains(s2, e4.node) && (i4 = e4.node)) : i4 = n4 ? ht.ancestor(e4.node, t4) : e4.node, i4 && t4(i4) && a2.push(i4));
              }, true), k.unique(a2);
            } }, { key: "commonAncestor", value: function() {
              return ht.commonAncestor(this.sc, this.ec);
            } }, { key: "expand", value: function(e3) {
              var n4 = ht.ancestor(this.sc, e3), o3 = ht.ancestor(this.ec, e3);
              if (!n4 && !o3)
                return new t3(this.sc, this.so, this.ec, this.eo);
              var i3 = this.getPoints();
              return n4 && (i3.sc = n4, i3.so = 0), o3 && (i3.ec = o3, i3.eo = ht.nodeLength(o3)), new t3(i3.sc, i3.so, i3.ec, i3.eo);
            } }, { key: "collapse", value: function(e3) {
              return e3 ? new t3(this.sc, this.so, this.sc, this.so) : new t3(this.ec, this.eo, this.ec, this.eo);
            } }, { key: "splitText", value: function() {
              var e3 = this.sc === this.ec, n4 = this.getPoints();
              return ht.isText(this.ec) && !ht.isEdgePoint(this.getEndPoint()) && this.ec.splitText(this.eo), ht.isText(this.sc) && !ht.isEdgePoint(this.getStartPoint()) && (n4.sc = this.sc.splitText(this.so), n4.so = 0, e3 && (n4.ec = n4.sc, n4.eo = this.eo - this.so)), new t3(n4.sc, n4.so, n4.ec, n4.eo);
            } }, { key: "deleteContents", value: function() {
              if (this.isCollapsed())
                return this;
              var n4 = this.splitText(), o3 = n4.nodes(null, { fullyContains: true }), i3 = ht.prevPointUntil(n4.getStartPoint(), function(t4) {
                return !k.contains(o3, t4.node);
              }), r2 = [];
              return e2().each(o3, function(t4, e3) {
                var n5 = e3.parentNode;
                i3.node !== n5 && 1 === ht.nodeLength(n5) && r2.push(n5), ht.remove(e3, false);
              }), e2().each(r2, function(t4, e3) {
                ht.remove(e3, false);
              }), new t3(i3.node, i3.offset, i3.node, i3.offset).normalize();
            } }, { key: "makeIsOn", value: function(t4) {
              return function() {
                var e3 = ht.ancestor(this.sc, t4);
                return !!e3 && e3 === ht.ancestor(this.ec, t4);
              };
            } }, { key: "isLeftEdgeOf", value: function(t4) {
              if (!ht.isLeftEdgePoint(this.getStartPoint()))
                return false;
              var e3 = ht.ancestor(this.sc, t4);
              return e3 && ht.isLeftEdgeOf(this.sc, e3);
            } }, { key: "isCollapsed", value: function() {
              return this.sc === this.ec && this.so === this.eo;
            } }, { key: "wrapBodyInlineWithPara", value: function() {
              if (ht.isBodyContainer(this.sc) && ht.isEmpty(this.sc))
                return this.sc.innerHTML = ht.emptyPara, new t3(this.sc.firstChild, 0, this.sc.firstChild, 0);
              var e3, n4 = this.normalize();
              if (ht.isParaInline(this.sc) || ht.isPara(this.sc))
                return n4;
              if (ht.isInline(n4.sc)) {
                var o3 = ht.listAncestor(n4.sc, m.not(ht.isInline));
                e3 = k.last(o3), ht.isInline(e3) || (e3 = o3[o3.length - 2] || n4.sc.childNodes[n4.so]);
              } else
                e3 = n4.sc.childNodes[n4.so > 0 ? n4.so - 1 : 0];
              if (e3) {
                var i3 = ht.listPrev(e3, ht.isParaInline).reverse();
                if ((i3 = i3.concat(ht.listNext(e3.nextSibling, ht.isParaInline))).length) {
                  var r2 = ht.wrap(k.head(i3), "p");
                  ht.appendChildNodes(r2, k.tail(i3));
                }
              }
              return this.normalize();
            } }, { key: "insertNode", value: function(t4) {
              var e3 = this;
              (ht.isText(t4) || ht.isInline(t4)) && (e3 = this.wrapBodyInlineWithPara().deleteContents());
              var n4 = ht.splitPoint(e3.getStartPoint(), ht.isInline(t4));
              return n4.rightNode ? (n4.rightNode.parentNode.insertBefore(t4, n4.rightNode), ht.isEmpty(n4.rightNode) && ht.isPara(t4) && n4.rightNode.parentNode.removeChild(n4.rightNode)) : n4.container.appendChild(t4), t4;
            } }, { key: "pasteHTML", value: function(t4) {
              t4 = e2().trim(t4);
              var n4 = e2()("<div></div>").html(t4)[0], o3 = k.from(n4.childNodes), i3 = this, r2 = false;
              return i3.so >= 0 && (o3 = o3.reverse(), r2 = true), o3 = o3.map(function(t5) {
                return i3.insertNode(t5);
              }), r2 && (o3 = o3.reverse()), o3;
            } }, { key: "toString", value: function() {
              var t4 = this.nativeRange();
              return f.isW3CRangeSupport ? t4.toString() : t4.text;
            } }, { key: "getWordRange", value: function(e3) {
              var n4 = this.getEndPoint();
              if (!ht.isCharPoint(n4))
                return this;
              var o3 = ht.prevPointUntil(n4, function(t4) {
                return !ht.isCharPoint(t4);
              });
              return e3 && (n4 = ht.nextPointUntil(n4, function(t4) {
                return !ht.isCharPoint(t4);
              })), new t3(o3.node, o3.offset, n4.node, n4.offset);
            } }, { key: "getWordsRange", value: function(e3) {
              var n4 = this.getEndPoint(), o3 = function(t4) {
                return !ht.isCharPoint(t4) && !ht.isSpacePoint(t4);
              };
              if (o3(n4))
                return this;
              var i3 = ht.prevPointUntil(n4, o3);
              return e3 && (n4 = ht.nextPointUntil(n4, o3)), new t3(i3.node, i3.offset, n4.node, n4.offset);
            } }, { key: "getWordsMatchRange", value: function(e3) {
              var n4 = this.getEndPoint(), o3 = ht.prevPointUntil(n4, function(o4) {
                if (!ht.isCharPoint(o4) && !ht.isSpacePoint(o4))
                  return true;
                var i4 = new t3(o4.node, o4.offset, n4.node, n4.offset), r3 = e3.exec(i4.toString());
                return r3 && 0 === r3.index;
              }), i3 = new t3(o3.node, o3.offset, n4.node, n4.offset), r2 = i3.toString(), a2 = e3.exec(r2);
              return a2 && a2[0].length === r2.length ? i3 : null;
            } }, { key: "bookmark", value: function(t4) {
              return { s: { path: ht.makeOffsetPath(t4, this.sc), offset: this.so }, e: { path: ht.makeOffsetPath(t4, this.ec), offset: this.eo } };
            } }, { key: "paraBookmark", value: function(t4) {
              return { s: { path: k.tail(ht.makeOffsetPath(k.head(t4), this.sc)), offset: this.so }, e: { path: k.tail(ht.makeOffsetPath(k.last(t4), this.ec)), offset: this.eo } };
            } }, { key: "getClientRects", value: function() {
              return this.nativeRange().getClientRects();
            } }], o2 && mt(n3.prototype, o2), i2 && mt(n3, i2), t3;
          }();
          const yt = { create: function(t3, e3, n3, o2) {
            if (4 === arguments.length)
              return new bt(t3, e3, n3, o2);
            if (2 === arguments.length)
              return new bt(t3, e3, n3 = t3, o2 = e3);
            var i2 = this.createFromSelection();
            if (!i2 && 1 === arguments.length) {
              var r2 = arguments[0];
              return ht.isEditable(r2) && (r2 = r2.lastChild), this.createFromBodyElement(r2, ht.emptyPara === arguments[0].innerHTML);
            }
            return i2;
          }, createFromBodyElement: function(t3) {
            var e3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = this.createFromNode(t3);
            return n3.collapse(e3);
          }, createFromSelection: function() {
            var t3, e3, n3, o2;
            if (f.isW3CRangeSupport) {
              var i2 = document.getSelection();
              if (!i2 || 0 === i2.rangeCount)
                return null;
              if (ht.isBody(i2.anchorNode))
                return null;
              var r2 = i2.getRangeAt(0);
              t3 = r2.startContainer, e3 = r2.startOffset, n3 = r2.endContainer, o2 = r2.endOffset;
            } else {
              var a2 = document.selection.createRange(), s2 = a2.duplicate();
              s2.collapse(false);
              var l2 = a2;
              l2.collapse(true);
              var c2 = vt(l2, true), u2 = vt(s2, false);
              ht.isText(c2.node) && ht.isLeftEdgePoint(c2) && ht.isTextNode(u2.node) && ht.isRightEdgePoint(u2) && u2.node.nextSibling === c2.node && (c2 = u2), t3 = c2.cont, e3 = c2.offset, n3 = u2.cont, o2 = u2.offset;
            }
            return new bt(t3, e3, n3, o2);
          }, createFromNode: function(t3) {
            var e3 = t3, n3 = 0, o2 = t3, i2 = ht.nodeLength(o2);
            return ht.isVoid(e3) && (n3 = ht.listPrev(e3).length - 1, e3 = e3.parentNode), ht.isBR(o2) ? (i2 = ht.listPrev(o2).length - 1, o2 = o2.parentNode) : ht.isVoid(o2) && (i2 = ht.listPrev(o2).length, o2 = o2.parentNode), this.create(e3, n3, o2, i2);
          }, createFromNodeBefore: function(t3) {
            return this.createFromNode(t3).collapse(true);
          }, createFromNodeAfter: function(t3) {
            return this.createFromNode(t3).collapse();
          }, createFromBookmark: function(t3, e3) {
            var n3 = ht.fromOffsetPath(t3, e3.s.path), o2 = e3.s.offset, i2 = ht.fromOffsetPath(t3, e3.e.path), r2 = e3.e.offset;
            return new bt(n3, o2, i2, r2);
          }, createFromParaBookmark: function(t3, e3) {
            var n3 = t3.s.offset, o2 = t3.e.offset, i2 = ht.fromOffsetPath(k.head(e3), t3.s.path), r2 = ht.fromOffsetPath(k.last(e3), t3.e.path);
            return new bt(i2, n3, r2, o2);
          } };
          var kt = { BACKSPACE: 8, TAB: 9, ENTER: 13, ESCAPE: 27, SPACE: 32, DELETE: 46, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, NUM0: 48, NUM1: 49, NUM2: 50, NUM3: 51, NUM4: 52, NUM5: 53, NUM6: 54, NUM7: 55, NUM8: 56, B: 66, E: 69, I: 73, J: 74, K: 75, L: 76, R: 82, S: 83, U: 85, V: 86, Y: 89, Z: 90, SLASH: 191, LEFTBRACKET: 219, BACKSLASH: 220, RIGHTBRACKET: 221, HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34 };
          const wt = { isEdit: function(t3) {
            return k.contains([kt.BACKSPACE, kt.TAB, kt.ENTER, kt.SPACE, kt.DELETE], t3);
          }, isMove: function(t3) {
            return k.contains([kt.LEFT, kt.UP, kt.RIGHT, kt.DOWN], t3);
          }, isNavigation: function(t3) {
            return k.contains([kt.HOME, kt.END, kt.PAGEUP, kt.PAGEDOWN], t3);
          }, nameFromCode: m.invertObject(kt), code: kt };
          function Ct(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var xt = function() {
            function t3(e4) {
              !function(t4, e5) {
                if (!(t4 instanceof e5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.stack = [], this.stackOffset = -1, this.context = e4, this.$editable = e4.layoutInfo.editable, this.editable = this.$editable[0];
            }
            var e3, n3, o2;
            return e3 = t3, (n3 = [{ key: "makeSnapshot", value: function() {
              var t4 = yt.create(this.editable);
              return { contents: this.$editable.html(), bookmark: t4 && t4.isOnEditable() ? t4.bookmark(this.editable) : { s: { path: [], offset: 0 }, e: { path: [], offset: 0 } } };
            } }, { key: "applySnapshot", value: function(t4) {
              null !== t4.contents && this.$editable.html(t4.contents), null !== t4.bookmark && yt.createFromBookmark(this.editable, t4.bookmark).select();
            } }, { key: "rewind", value: function() {
              this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), this.stackOffset = 0, this.applySnapshot(this.stack[this.stackOffset]);
            } }, { key: "commit", value: function() {
              this.stack = [], this.stackOffset = -1, this.recordUndo();
            } }, { key: "reset", value: function() {
              this.stack = [], this.stackOffset = -1, this.$editable.html(""), this.recordUndo();
            } }, { key: "undo", value: function() {
              this.$editable.html() !== this.stack[this.stackOffset].contents && this.recordUndo(), this.stackOffset > 0 && (this.stackOffset--, this.applySnapshot(this.stack[this.stackOffset]));
            } }, { key: "redo", value: function() {
              this.stack.length - 1 > this.stackOffset && (this.stackOffset++, this.applySnapshot(this.stack[this.stackOffset]));
            } }, { key: "recordUndo", value: function() {
              this.stackOffset++, this.stack.length > this.stackOffset && (this.stack = this.stack.slice(0, this.stackOffset)), this.stack.push(this.makeSnapshot()), this.stack.length > this.context.options.historyLimit && (this.stack.shift(), this.stackOffset -= 1);
            } }]) && Ct(e3.prototype, n3), o2 && Ct(e3, o2), t3;
          }();
          function St(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Tt = function() {
            function t3() {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "jQueryCSS", value: function(t4, n4) {
              var o3 = {};
              return e2().each(n4, function(e3, n5) {
                o3[n5] = t4.css(n5);
              }), o3;
            } }, { key: "fromNode", value: function(t4) {
              var e3 = this.jQueryCSS(t4, ["font-family", "font-size", "text-align", "list-style-type", "line-height"]) || {}, n4 = t4[0].style.fontSize || e3["font-size"];
              return e3["font-size"] = parseInt(n4, 10), e3["font-size-unit"] = n4.match(/[a-z%]+$/), e3;
            } }, { key: "stylePara", value: function(t4, n4) {
              e2().each(t4.nodes(ht.isPara, { includeAncestor: true }), function(t5, o3) {
                e2()(o3).css(n4);
              });
            } }, { key: "styleNodes", value: function(t4, n4) {
              t4 = t4.splitText();
              var o3 = n4 && n4.nodeName || "SPAN", i3 = !(!n4 || !n4.expandClosestSibling), r2 = !(!n4 || !n4.onlyPartialContains);
              if (t4.isCollapsed())
                return [t4.insertNode(ht.create(o3))];
              var a2 = ht.makePredByNodeName(o3), s2 = t4.nodes(ht.isText, { fullyContains: true }).map(function(t5) {
                return ht.singleChildAncestor(t5, a2) || ht.wrap(t5, o3);
              });
              if (i3) {
                if (r2) {
                  var l2 = t4.nodes();
                  a2 = m.and(a2, function(t5) {
                    return k.contains(l2, t5);
                  });
                }
                return s2.map(function(t5) {
                  var n5 = ht.withClosestSiblings(t5, a2), o4 = k.head(n5), i4 = k.tail(n5);
                  return e2().each(i4, function(t6, e3) {
                    ht.appendChildNodes(o4, e3.childNodes), ht.remove(e3);
                  }), k.head(n5);
                });
              }
              return s2;
            } }, { key: "current", value: function(t4) {
              var n4 = e2()(ht.isElement(t4.sc) ? t4.sc : t4.sc.parentNode), o3 = this.fromNode(n4);
              try {
                o3 = e2().extend(o3, { "font-bold": document.queryCommandState("bold") ? "bold" : "normal", "font-italic": document.queryCommandState("italic") ? "italic" : "normal", "font-underline": document.queryCommandState("underline") ? "underline" : "normal", "font-subscript": document.queryCommandState("subscript") ? "subscript" : "normal", "font-superscript": document.queryCommandState("superscript") ? "superscript" : "normal", "font-strikethrough": document.queryCommandState("strikethrough") ? "strikethrough" : "normal", "font-family": document.queryCommandValue("fontname") || o3["font-family"] });
              } catch (t5) {
              }
              if (t4.isOnList()) {
                var i3 = ["circle", "disc", "disc-leading-zero", "square"].indexOf(o3["list-style-type"]) > -1;
                o3["list-style"] = i3 ? "unordered" : "ordered";
              } else
                o3["list-style"] = "none";
              var r2 = ht.ancestor(t4.sc, ht.isPara);
              if (r2 && r2.style["line-height"])
                o3["line-height"] = r2.style.lineHeight;
              else {
                var a2 = parseInt(o3["line-height"], 10) / parseInt(o3["font-size"], 10);
                o3["line-height"] = a2.toFixed(1);
              }
              return o3.anchor = t4.isOnAnchor() && ht.ancestor(t4.sc, ht.isAnchor), o3.ancestors = ht.listAncestor(t4.sc, ht.isEditable), o3.range = t4, o3;
            } }], o2 && St(n3.prototype, o2), i2 && St(n3, i2), t3;
          }();
          function Et(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var It = function() {
            function t3() {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "insertOrderedList", value: function(t4) {
              this.toggleList("OL", t4);
            } }, { key: "insertUnorderedList", value: function(t4) {
              this.toggleList("UL", t4);
            } }, { key: "indent", value: function(t4) {
              var n4 = this, o3 = yt.create(t4).wrapBodyInlineWithPara(), i3 = o3.nodes(ht.isPara, { includeAncestor: true }), r2 = k.clusterBy(i3, m.peq2("parentNode"));
              e2().each(r2, function(t5, o4) {
                var i4 = k.head(o4);
                if (ht.isLi(i4)) {
                  var r3 = n4.findList(i4.previousSibling);
                  r3 ? o4.map(function(t6) {
                    return r3.appendChild(t6);
                  }) : (n4.wrapList(o4, i4.parentNode.nodeName), o4.map(function(t6) {
                    return t6.parentNode;
                  }).map(function(t6) {
                    return n4.appendToPrevious(t6);
                  }));
                } else
                  e2().each(o4, function(t6, n5) {
                    e2()(n5).css("marginLeft", function(t7, e3) {
                      return (parseInt(e3, 10) || 0) + 25;
                    });
                  });
              }), o3.select();
            } }, { key: "outdent", value: function(t4) {
              var n4 = this, o3 = yt.create(t4).wrapBodyInlineWithPara(), i3 = o3.nodes(ht.isPara, { includeAncestor: true }), r2 = k.clusterBy(i3, m.peq2("parentNode"));
              e2().each(r2, function(t5, o4) {
                var i4 = k.head(o4);
                ht.isLi(i4) ? n4.releaseList([o4]) : e2().each(o4, function(t6, n5) {
                  e2()(n5).css("marginLeft", function(t7, e3) {
                    return (e3 = parseInt(e3, 10) || 0) > 25 ? e3 - 25 : "";
                  });
                });
              }), o3.select();
            } }, { key: "toggleList", value: function(t4, n4) {
              var o3 = this, i3 = yt.create(n4).wrapBodyInlineWithPara(), r2 = i3.nodes(ht.isPara, { includeAncestor: true }), a2 = i3.paraBookmark(r2), s2 = k.clusterBy(r2, m.peq2("parentNode"));
              if (k.find(r2, ht.isPurePara)) {
                var l2 = [];
                e2().each(s2, function(e3, n5) {
                  l2 = l2.concat(o3.wrapList(n5, t4));
                }), r2 = l2;
              } else {
                var c2 = i3.nodes(ht.isList, { includeAncestor: true }).filter(function(n5) {
                  return !e2().nodeName(n5, t4);
                });
                c2.length ? e2().each(c2, function(e3, n5) {
                  ht.replace(n5, t4);
                }) : r2 = this.releaseList(s2, true);
              }
              yt.createFromParaBookmark(a2, r2).select();
            } }, { key: "wrapList", value: function(t4, e3) {
              var n4 = k.head(t4), o3 = k.last(t4), i3 = ht.isList(n4.previousSibling) && n4.previousSibling, r2 = ht.isList(o3.nextSibling) && o3.nextSibling, a2 = i3 || ht.insertAfter(ht.create(e3 || "UL"), o3);
              return t4 = t4.map(function(t5) {
                return ht.isPurePara(t5) ? ht.replace(t5, "LI") : t5;
              }), ht.appendChildNodes(a2, t4), r2 && (ht.appendChildNodes(a2, k.from(r2.childNodes)), ht.remove(r2)), t4;
            } }, { key: "releaseList", value: function(t4, n4) {
              var o3 = this, i3 = [];
              return e2().each(t4, function(t5, r2) {
                var a2 = k.head(r2), s2 = k.last(r2), l2 = n4 ? ht.lastAncestor(a2, ht.isList) : a2.parentNode, c2 = l2.parentNode;
                if ("LI" === l2.parentNode.nodeName)
                  r2.map(function(t6) {
                    var e3 = o3.findNextSiblings(t6);
                    c2.nextSibling ? c2.parentNode.insertBefore(t6, c2.nextSibling) : c2.parentNode.appendChild(t6), e3.length && (o3.wrapList(e3, l2.nodeName), t6.appendChild(e3[0].parentNode));
                  }), 0 === l2.children.length && c2.removeChild(l2), 0 === c2.childNodes.length && c2.parentNode.removeChild(c2);
                else {
                  var u2 = l2.childNodes.length > 1 ? ht.splitTree(l2, { node: s2.parentNode, offset: ht.position(s2) + 1 }, { isSkipPaddingBlankHTML: true }) : null, d2 = ht.splitTree(l2, { node: a2.parentNode, offset: ht.position(a2) }, { isSkipPaddingBlankHTML: true });
                  r2 = n4 ? ht.listDescendant(d2, ht.isLi) : k.from(d2.childNodes).filter(ht.isLi), !n4 && ht.isList(l2.parentNode) || (r2 = r2.map(function(t6) {
                    return ht.replace(t6, "P");
                  })), e2().each(k.from(r2).reverse(), function(t6, e3) {
                    ht.insertAfter(e3, l2);
                  });
                  var h2 = k.compact([l2, d2, u2]);
                  e2().each(h2, function(t6, n5) {
                    var o4 = [n5].concat(ht.listDescendant(n5, ht.isList));
                    e2().each(o4.reverse(), function(t7, e3) {
                      ht.nodeLength(e3) || ht.remove(e3, true);
                    });
                  });
                }
                i3 = i3.concat(r2);
              }), i3;
            } }, { key: "appendToPrevious", value: function(t4) {
              return t4.previousSibling ? ht.appendChildNodes(t4.previousSibling, [t4]) : this.wrapList([t4], "LI");
            } }, { key: "findList", value: function(t4) {
              return t4 ? k.find(t4.children, function(t5) {
                return ["OL", "UL"].indexOf(t5.nodeName) > -1;
              }) : null;
            } }, { key: "findNextSiblings", value: function(t4) {
              for (var e3 = []; t4.nextSibling; )
                e3.push(t4.nextSibling), t4 = t4.nextSibling;
              return e3;
            } }], o2 && Et(n3.prototype, o2), i2 && Et(n3, i2), t3;
          }();
          function $t(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Nt = function() {
            function t3(e3) {
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.bullet = new It(), this.options = e3.options;
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "insertTab", value: function(t4, e3) {
              var n4 = ht.createText(new Array(e3 + 1).join(ht.NBSP_CHAR));
              (t4 = t4.deleteContents()).insertNode(n4, true), (t4 = yt.create(n4, e3)).select();
            } }, { key: "insertParagraph", value: function(t4, n4) {
              n4 = (n4 = (n4 = n4 || yt.create(t4)).deleteContents()).wrapBodyInlineWithPara();
              var o3, i3 = ht.ancestor(n4.sc, ht.isPara);
              if (i3) {
                if (ht.isLi(i3) && (ht.isEmpty(i3) || ht.deepestChildIsEmpty(i3)))
                  return void this.bullet.toggleList(i3.parentNode.nodeName);
                var r2 = null;
                if (1 === this.options.blockquoteBreakingLevel ? r2 = ht.ancestor(i3, ht.isBlockquote) : 2 === this.options.blockquoteBreakingLevel && (r2 = ht.lastAncestor(i3, ht.isBlockquote)), r2) {
                  o3 = e2()(ht.emptyPara)[0], ht.isRightEdgePoint(n4.getStartPoint()) && ht.isBR(n4.sc.nextSibling) && e2()(n4.sc.nextSibling).remove();
                  var a2 = ht.splitTree(r2, n4.getStartPoint(), { isDiscardEmptySplits: true });
                  a2 ? a2.parentNode.insertBefore(o3, a2) : ht.insertAfter(o3, r2);
                } else {
                  o3 = ht.splitTree(i3, n4.getStartPoint());
                  var s2 = ht.listDescendant(i3, ht.isEmptyAnchor);
                  s2 = s2.concat(ht.listDescendant(o3, ht.isEmptyAnchor)), e2().each(s2, function(t5, e3) {
                    ht.remove(e3);
                  }), (ht.isHeading(o3) || ht.isPre(o3) || ht.isCustomStyleTag(o3)) && ht.isEmpty(o3) && (o3 = ht.replace(o3, "p"));
                }
              } else {
                var l2 = n4.sc.childNodes[n4.so];
                o3 = e2()(ht.emptyPara)[0], l2 ? n4.sc.insertBefore(o3, l2) : n4.sc.appendChild(o3);
              }
              yt.create(o3, 0).normalize().select().scrollIntoView(t4);
            } }], o2 && $t(n3.prototype, o2), i2 && $t(n3, i2), t3;
          }();
          function Pt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Rt = function t3(e3, n3, o2, i2) {
            var r2 = { colPos: 0, rowPos: 0 }, a2 = [], s2 = [];
            function l2(t4, e4, n4, o3, i3, r3, s3) {
              var l3 = { baseRow: n4, baseCell: o3, isRowSpan: i3, isColSpan: r3, isVirtual: s3 };
              a2[t4] || (a2[t4] = []), a2[t4][e4] = l3;
            }
            function c2(t4, e4, n4, o3) {
              return { baseCell: t4.baseCell, action: e4, virtualTable: { rowIndex: n4, cellIndex: o3 } };
            }
            function u2(t4, e4) {
              if (!a2[t4])
                return e4;
              if (!a2[t4][e4])
                return e4;
              for (var n4 = e4; a2[t4][n4]; )
                if (n4++, !a2[t4][n4])
                  return n4;
            }
            function d2(t4, e4) {
              var n4 = u2(t4.rowIndex, e4.cellIndex), o3 = e4.colSpan > 1, i3 = e4.rowSpan > 1, a3 = t4.rowIndex === r2.rowPos && e4.cellIndex === r2.colPos;
              l2(t4.rowIndex, n4, t4, e4, i3, o3, false);
              var s3 = e4.attributes.rowSpan ? parseInt(e4.attributes.rowSpan.value, 10) : 0;
              if (s3 > 1)
                for (var c3 = 1; c3 < s3; c3++) {
                  var d3 = t4.rowIndex + c3;
                  h2(d3, n4, e4, a3), l2(d3, n4, t4, e4, true, o3, true);
                }
              var f3 = e4.attributes.colSpan ? parseInt(e4.attributes.colSpan.value, 10) : 0;
              if (f3 > 1)
                for (var p3 = 1; p3 < f3; p3++) {
                  var m2 = u2(t4.rowIndex, n4 + p3);
                  h2(t4.rowIndex, m2, e4, a3), l2(t4.rowIndex, m2, t4, e4, i3, true, true);
                }
            }
            function h2(t4, e4, n4, o3) {
              t4 === r2.rowPos && r2.colPos >= n4.cellIndex && n4.cellIndex <= e4 && !o3 && r2.colPos++;
            }
            function f2(e4) {
              switch (n3) {
                case t3.where.Column:
                  if (e4.isColSpan)
                    return t3.resultAction.SubtractSpanCount;
                  break;
                case t3.where.Row:
                  if (!e4.isVirtual && e4.isRowSpan)
                    return t3.resultAction.AddCell;
                  if (e4.isRowSpan)
                    return t3.resultAction.SubtractSpanCount;
              }
              return t3.resultAction.RemoveCell;
            }
            function p2(e4) {
              switch (n3) {
                case t3.where.Column:
                  if (e4.isColSpan)
                    return t3.resultAction.SumSpanCount;
                  if (e4.isRowSpan && e4.isVirtual)
                    return t3.resultAction.Ignore;
                  break;
                case t3.where.Row:
                  if (e4.isRowSpan)
                    return t3.resultAction.SumSpanCount;
                  if (e4.isColSpan && e4.isVirtual)
                    return t3.resultAction.Ignore;
              }
              return t3.resultAction.AddCell;
            }
            this.getActionList = function() {
              for (var e4 = n3 === t3.where.Row ? r2.rowPos : -1, i3 = n3 === t3.where.Column ? r2.colPos : -1, l3 = 0, u3 = true; u3; ) {
                var d3 = e4 >= 0 ? e4 : l3, h3 = i3 >= 0 ? i3 : l3, m2 = a2[d3];
                if (!m2)
                  return u3 = false, s2;
                var v2 = m2[h3];
                if (!v2)
                  return u3 = false, s2;
                var g2 = t3.resultAction.Ignore;
                switch (o2) {
                  case t3.requestAction.Add:
                    g2 = p2(v2);
                    break;
                  case t3.requestAction.Delete:
                    g2 = f2(v2);
                }
                s2.push(c2(v2, g2, d3, h3)), l3++;
              }
              return s2;
            }, e3 && e3.tagName && ("td" === e3.tagName.toLowerCase() || "th" === e3.tagName.toLowerCase()) && (r2.colPos = e3.cellIndex, e3.parentElement && e3.parentElement.tagName && "tr" === e3.parentElement.tagName.toLowerCase() && (r2.rowPos = e3.parentElement.rowIndex)), function() {
              for (var t4 = i2.rows, e4 = 0; e4 < t4.length; e4++)
                for (var n4 = t4[e4].cells, o3 = 0; o3 < n4.length; o3++)
                  d2(t4[e4], n4[o3]);
            }();
          };
          Rt.where = { Row: 0, Column: 1 }, Rt.requestAction = { Add: 0, Delete: 1 }, Rt.resultAction = { Ignore: 0, SubtractSpanCount: 1, RemoveCell: 2, AddCell: 3, SumSpanCount: 4 };
          var Lt = function() {
            function t3() {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "tab", value: function(t4, e3) {
              var n4 = ht.ancestor(t4.commonAncestor(), ht.isCell), o3 = ht.ancestor(n4, ht.isTable), i3 = ht.listDescendant(o3, ht.isCell), r2 = k[e3 ? "prev" : "next"](i3, n4);
              r2 && yt.create(r2, 0).select();
            } }, { key: "addRow", value: function(t4, n4) {
              for (var o3 = ht.ancestor(t4.commonAncestor(), ht.isCell), i3 = e2()(o3).closest("tr"), r2 = this.recoverAttributes(i3), a2 = e2()("<tr" + r2 + "></tr>"), s2 = new Rt(o3, Rt.where.Row, Rt.requestAction.Add, e2()(i3).closest("table")[0]).getActionList(), l2 = 0; l2 < s2.length; l2++) {
                var c2 = s2[l2], u2 = this.recoverAttributes(c2.baseCell);
                switch (c2.action) {
                  case Rt.resultAction.AddCell:
                    a2.append("<td" + u2 + ">" + ht.blank + "</td>");
                    break;
                  case Rt.resultAction.SumSpanCount:
                    if ("top" === n4 && (c2.baseCell.parent ? c2.baseCell.closest("tr").rowIndex : 0) <= i3[0].rowIndex) {
                      var d2 = e2()("<div></div>").append(e2()("<td" + u2 + ">" + ht.blank + "</td>").removeAttr("rowspan")).html();
                      a2.append(d2);
                      break;
                    }
                    var h2 = parseInt(c2.baseCell.rowSpan, 10);
                    h2++, c2.baseCell.setAttribute("rowSpan", h2);
                }
              }
              if ("top" === n4)
                i3.before(a2);
              else {
                if (o3.rowSpan > 1) {
                  var f2 = i3[0].rowIndex + (o3.rowSpan - 2);
                  return void e2()(e2()(i3).parent().find("tr")[f2]).after(e2()(a2));
                }
                i3.after(a2);
              }
            } }, { key: "addCol", value: function(t4, n4) {
              var o3 = ht.ancestor(t4.commonAncestor(), ht.isCell), i3 = e2()(o3).closest("tr");
              e2()(i3).siblings().push(i3);
              for (var r2 = new Rt(o3, Rt.where.Column, Rt.requestAction.Add, e2()(i3).closest("table")[0]).getActionList(), a2 = 0; a2 < r2.length; a2++) {
                var s2 = r2[a2], l2 = this.recoverAttributes(s2.baseCell);
                switch (s2.action) {
                  case Rt.resultAction.AddCell:
                    "right" === n4 ? e2()(s2.baseCell).after("<td" + l2 + ">" + ht.blank + "</td>") : e2()(s2.baseCell).before("<td" + l2 + ">" + ht.blank + "</td>");
                    break;
                  case Rt.resultAction.SumSpanCount:
                    if ("right" === n4) {
                      var c2 = parseInt(s2.baseCell.colSpan, 10);
                      c2++, s2.baseCell.setAttribute("colSpan", c2);
                    } else
                      e2()(s2.baseCell).before("<td" + l2 + ">" + ht.blank + "</td>");
                }
              }
            } }, { key: "recoverAttributes", value: function(t4) {
              var e3 = "";
              if (!t4)
                return e3;
              for (var n4 = t4.attributes || [], o3 = 0; o3 < n4.length; o3++)
                "id" !== n4[o3].name.toLowerCase() && n4[o3].specified && (e3 += " " + n4[o3].name + "='" + n4[o3].value + "'");
              return e3;
            } }, { key: "deleteRow", value: function(t4) {
              for (var n4 = ht.ancestor(t4.commonAncestor(), ht.isCell), o3 = e2()(n4).closest("tr"), i3 = o3.children("td, th").index(e2()(n4)), r2 = o3[0].rowIndex, a2 = new Rt(n4, Rt.where.Row, Rt.requestAction.Delete, e2()(o3).closest("table")[0]).getActionList(), s2 = 0; s2 < a2.length; s2++)
                if (a2[s2]) {
                  var l2 = a2[s2].baseCell, c2 = a2[s2].virtualTable, u2 = l2.rowSpan && l2.rowSpan > 1, d2 = u2 ? parseInt(l2.rowSpan, 10) : 0;
                  switch (a2[s2].action) {
                    case Rt.resultAction.Ignore:
                      continue;
                    case Rt.resultAction.AddCell:
                      var h2 = o3.next("tr")[0];
                      if (!h2)
                        continue;
                      var f2 = o3[0].cells[i3];
                      u2 && (d2 > 2 ? (d2--, h2.insertBefore(f2, h2.cells[i3]), h2.cells[i3].setAttribute("rowSpan", d2), h2.cells[i3].innerHTML = "") : 2 === d2 && (h2.insertBefore(f2, h2.cells[i3]), h2.cells[i3].removeAttribute("rowSpan"), h2.cells[i3].innerHTML = ""));
                      continue;
                    case Rt.resultAction.SubtractSpanCount:
                      u2 && (d2 > 2 ? (d2--, l2.setAttribute("rowSpan", d2), c2.rowIndex !== r2 && l2.cellIndex === i3 && (l2.innerHTML = "")) : 2 === d2 && (l2.removeAttribute("rowSpan"), c2.rowIndex !== r2 && l2.cellIndex === i3 && (l2.innerHTML = "")));
                      continue;
                    case Rt.resultAction.RemoveCell:
                      continue;
                  }
                }
              o3.remove();
            } }, { key: "deleteCol", value: function(t4) {
              for (var n4 = ht.ancestor(t4.commonAncestor(), ht.isCell), o3 = e2()(n4).closest("tr"), i3 = o3.children("td, th").index(e2()(n4)), r2 = new Rt(n4, Rt.where.Column, Rt.requestAction.Delete, e2()(o3).closest("table")[0]).getActionList(), a2 = 0; a2 < r2.length; a2++)
                if (r2[a2])
                  switch (r2[a2].action) {
                    case Rt.resultAction.Ignore:
                      continue;
                    case Rt.resultAction.SubtractSpanCount:
                      var s2 = r2[a2].baseCell;
                      if (s2.colSpan && s2.colSpan > 1) {
                        var l2 = s2.colSpan ? parseInt(s2.colSpan, 10) : 0;
                        l2 > 2 ? (l2--, s2.setAttribute("colSpan", l2), s2.cellIndex === i3 && (s2.innerHTML = "")) : 2 === l2 && (s2.removeAttribute("colSpan"), s2.cellIndex === i3 && (s2.innerHTML = ""));
                      }
                      continue;
                    case Rt.resultAction.RemoveCell:
                      ht.remove(r2[a2].baseCell, true);
                      continue;
                  }
            } }, { key: "createTable", value: function(t4, n4, o3) {
              for (var i3, r2 = [], a2 = 0; a2 < t4; a2++)
                r2.push("<td>" + ht.blank + "</td>");
              i3 = r2.join("");
              for (var s2, l2 = [], c2 = 0; c2 < n4; c2++)
                l2.push("<tr>" + i3 + "</tr>");
              s2 = l2.join("");
              var u2 = e2()("<table>" + s2 + "</table>");
              return o3 && o3.tableClassName && u2.addClass(o3.tableClassName), u2[0];
            } }, { key: "deleteTable", value: function(t4) {
              var n4 = ht.ancestor(t4.commonAncestor(), ht.isCell);
              e2()(n4).closest("table").remove();
            } }], o2 && Pt(n3.prototype, o2), i2 && Pt(n3, i2), t3;
          }();
          function At(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Ft = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.$note = n4.layoutInfo.note, this.$editor = n4.layoutInfo.editor, this.$editable = n4.layoutInfo.editable, this.options = n4.options, this.lang = this.options.langInfo, this.editable = this.$editable[0], this.lastRange = null, this.snapshot = null, this.style = new Tt(), this.table = new Lt(), this.typing = new Nt(n4), this.bullet = new It(), this.history = new xt(n4), this.context.memo("help.escape", this.lang.help.escape), this.context.memo("help.undo", this.lang.help.undo), this.context.memo("help.redo", this.lang.help.redo), this.context.memo("help.tab", this.lang.help.tab), this.context.memo("help.untab", this.lang.help.untab), this.context.memo("help.insertParagraph", this.lang.help.insertParagraph), this.context.memo("help.insertOrderedList", this.lang.help.insertOrderedList), this.context.memo("help.insertUnorderedList", this.lang.help.insertUnorderedList), this.context.memo("help.indent", this.lang.help.indent), this.context.memo("help.outdent", this.lang.help.outdent), this.context.memo("help.formatPara", this.lang.help.formatPara), this.context.memo("help.insertHorizontalRule", this.lang.help.insertHorizontalRule), this.context.memo("help.fontName", this.lang.help.fontName);
              for (var i3 = ["bold", "italic", "underline", "strikethrough", "superscript", "subscript", "justifyLeft", "justifyCenter", "justifyRight", "justifyFull", "formatBlock", "removeFormat", "backColor"], r2 = 0, a2 = i3.length; r2 < a2; r2++)
                this[i3[r2]] = function(t4) {
                  return function(e3) {
                    o3.beforeCommand(), document.execCommand(t4, false, e3), o3.afterCommand(true);
                  };
                }(i3[r2]), this.context.memo("help." + i3[r2], this.lang.help[i3[r2]]);
              this.fontName = this.wrapCommand(function(t4) {
                return o3.fontStyling("font-family", f.validFontName(t4));
              }), this.fontSize = this.wrapCommand(function(t4) {
                var e3 = o3.currentStyle()["font-size-unit"];
                return o3.fontStyling("font-size", t4 + e3);
              }), this.fontSizeUnit = this.wrapCommand(function(t4) {
                var e3 = o3.currentStyle()["font-size"];
                return o3.fontStyling("font-size", e3 + t4);
              });
              for (var s2 = 1; s2 <= 6; s2++)
                this["formatH" + s2] = function(t4) {
                  return function() {
                    o3.formatBlock("H" + t4);
                  };
                }(s2), this.context.memo("help.formatH" + s2, this.lang.help["formatH" + s2]);
              this.insertParagraph = this.wrapCommand(function() {
                o3.typing.insertParagraph(o3.editable);
              }), this.insertOrderedList = this.wrapCommand(function() {
                o3.bullet.insertOrderedList(o3.editable);
              }), this.insertUnorderedList = this.wrapCommand(function() {
                o3.bullet.insertUnorderedList(o3.editable);
              }), this.indent = this.wrapCommand(function() {
                o3.bullet.indent(o3.editable);
              }), this.outdent = this.wrapCommand(function() {
                o3.bullet.outdent(o3.editable);
              }), this.insertNode = this.wrapCommand(function(t4) {
                o3.isLimited(e2()(t4).text().length) || (o3.getLastRange().insertNode(t4), o3.setLastRange(yt.createFromNodeAfter(t4).select()));
              }), this.insertText = this.wrapCommand(function(t4) {
                if (!o3.isLimited(t4.length)) {
                  var e3 = o3.getLastRange().insertNode(ht.createText(t4));
                  o3.setLastRange(yt.create(e3, ht.nodeLength(e3)).select());
                }
              }), this.pasteHTML = this.wrapCommand(function(t4) {
                if (!o3.isLimited(t4.length)) {
                  t4 = o3.context.invoke("codeview.purify", t4);
                  var e3 = o3.getLastRange().pasteHTML(t4);
                  o3.setLastRange(yt.createFromNodeAfter(k.last(e3)).select());
                }
              }), this.formatBlock = this.wrapCommand(function(t4, e3) {
                var n5 = o3.options.callbacks.onApplyCustomStyle;
                n5 ? n5.call(o3, e3, o3.context, o3.onFormatBlock) : o3.onFormatBlock(t4, e3);
              }), this.insertHorizontalRule = this.wrapCommand(function() {
                var t4 = o3.getLastRange().insertNode(ht.create("HR"));
                t4.nextSibling && o3.setLastRange(yt.create(t4.nextSibling, 0).normalize().select());
              }), this.lineHeight = this.wrapCommand(function(t4) {
                o3.style.stylePara(o3.getLastRange(), { lineHeight: t4 });
              }), this.createLink = this.wrapCommand(function(t4) {
                var n5 = t4.url, i4 = t4.text, r3 = t4.isNewWindow, a3 = t4.checkProtocol, s3 = t4.range || o3.getLastRange(), l2 = i4.length - s3.toString().length;
                if (!(l2 > 0 && o3.isLimited(l2))) {
                  var c2 = s3.toString() !== i4;
                  "string" == typeof n5 && (n5 = n5.trim()), o3.options.onCreateLink ? n5 = o3.options.onCreateLink(n5) : a3 && (n5 = /^([A-Za-z][A-Za-z0-9+-.]*\:|#|\/)/.test(n5) ? n5 : o3.options.defaultProtocol + n5);
                  var u2 = [];
                  if (c2) {
                    var d2 = (s3 = s3.deleteContents()).insertNode(e2()("<A>" + i4 + "</A>")[0]);
                    u2.push(d2);
                  } else
                    u2 = o3.style.styleNodes(s3, { nodeName: "A", expandClosestSibling: true, onlyPartialContains: true });
                  e2().each(u2, function(t5, o4) {
                    e2()(o4).attr("href", n5), r3 ? e2()(o4).attr("target", "_blank") : e2()(o4).removeAttr("target");
                  }), o3.setLastRange(o3.createRangeFromList(u2).select());
                }
              }), this.color = this.wrapCommand(function(t4) {
                var e3 = t4.foreColor, n5 = t4.backColor;
                e3 && document.execCommand("foreColor", false, e3), n5 && document.execCommand("backColor", false, n5);
              }), this.foreColor = this.wrapCommand(function(t4) {
                document.execCommand("foreColor", false, t4);
              }), this.insertTable = this.wrapCommand(function(t4) {
                var e3 = t4.split("x");
                o3.getLastRange().deleteContents().insertNode(o3.table.createTable(e3[0], e3[1], o3.options));
              }), this.removeMedia = this.wrapCommand(function() {
                var t4 = e2()(o3.restoreTarget()).parent();
                t4.closest("figure").length ? t4.closest("figure").remove() : t4 = e2()(o3.restoreTarget()).detach(), o3.context.triggerEvent("media.delete", t4, o3.$editable);
              }), this.floatMe = this.wrapCommand(function(t4) {
                var n5 = e2()(o3.restoreTarget());
                n5.toggleClass("note-float-left", "left" === t4), n5.toggleClass("note-float-right", "right" === t4), n5.css("float", "none" === t4 ? "" : t4);
              }), this.resize = this.wrapCommand(function(t4) {
                var n5 = e2()(o3.restoreTarget());
                0 === (t4 = parseFloat(t4)) ? n5.css("width", "") : n5.css({ width: 100 * t4 + "%", height: "" });
              });
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "initialize", value: function() {
              var t4 = this;
              this.$editable.on("keydown", function(e3) {
                if (e3.keyCode === wt.code.ENTER && t4.context.triggerEvent("enter", e3), t4.context.triggerEvent("keydown", e3), t4.snapshot = t4.history.makeSnapshot(), t4.hasKeyShortCut = false, e3.isDefaultPrevented() || (t4.options.shortcuts ? t4.hasKeyShortCut = t4.handleKeyMap(e3) : t4.preventDefaultEditableShortCuts(e3)), t4.isLimited(1, e3)) {
                  var n4 = t4.getLastRange();
                  if (n4.eo - n4.so == 0)
                    return false;
                }
                t4.setLastRange(), t4.options.recordEveryKeystroke && false === t4.hasKeyShortCut && t4.history.recordUndo();
              }).on("keyup", function(e3) {
                t4.setLastRange(), t4.context.triggerEvent("keyup", e3);
              }).on("focus", function(e3) {
                t4.setLastRange(), t4.context.triggerEvent("focus", e3);
              }).on("blur", function(e3) {
                t4.context.triggerEvent("blur", e3);
              }).on("mousedown", function(e3) {
                t4.context.triggerEvent("mousedown", e3);
              }).on("mouseup", function(e3) {
                t4.setLastRange(), t4.history.recordUndo(), t4.context.triggerEvent("mouseup", e3);
              }).on("scroll", function(e3) {
                t4.context.triggerEvent("scroll", e3);
              }).on("paste", function(e3) {
                t4.setLastRange(), t4.context.triggerEvent("paste", e3);
              }).on("input", function() {
                t4.isLimited(0) && t4.snapshot && t4.history.applySnapshot(t4.snapshot);
              }), this.$editable.attr("spellcheck", this.options.spellCheck), this.$editable.attr("autocorrect", this.options.spellCheck), this.options.disableGrammar && this.$editable.attr("data-gramm", false), this.$editable.html(ht.html(this.$note) || ht.emptyPara), this.$editable.on(f.inputEventName, m.debounce(function() {
                t4.context.triggerEvent("change", t4.$editable.html(), t4.$editable);
              }, 10)), this.$editable.on("focusin", function(e3) {
                t4.context.triggerEvent("focusin", e3);
              }).on("focusout", function(e3) {
                t4.context.triggerEvent("focusout", e3);
              }), this.options.airMode ? this.options.overrideContextMenu && this.$editor.on("contextmenu", function(e3) {
                return t4.context.triggerEvent("contextmenu", e3), false;
              }) : (this.options.width && this.$editor.outerWidth(this.options.width), this.options.height && this.$editable.outerHeight(this.options.height), this.options.maxHeight && this.$editable.css("max-height", this.options.maxHeight), this.options.minHeight && this.$editable.css("min-height", this.options.minHeight)), this.history.recordUndo(), this.setLastRange();
            } }, { key: "destroy", value: function() {
              this.$editable.off();
            } }, { key: "handleKeyMap", value: function(t4) {
              var e3 = this.options.keyMap[f.isMac ? "mac" : "pc"], n4 = [];
              t4.metaKey && n4.push("CMD"), t4.ctrlKey && !t4.altKey && n4.push("CTRL"), t4.shiftKey && n4.push("SHIFT");
              var o3 = wt.nameFromCode[t4.keyCode];
              o3 && n4.push(o3);
              var i3 = e3[n4.join("+")];
              if ("TAB" !== o3 || this.options.tabDisable)
                if (i3) {
                  if (false !== this.context.invoke(i3))
                    return t4.preventDefault(), true;
                } else
                  wt.isEdit(t4.keyCode) && this.afterCommand();
              else
                this.afterCommand();
              return false;
            } }, { key: "preventDefaultEditableShortCuts", value: function(t4) {
              (t4.ctrlKey || t4.metaKey) && k.contains([66, 73, 85], t4.keyCode) && t4.preventDefault();
            } }, { key: "isLimited", value: function(t4, e3) {
              return t4 = t4 || 0, (void 0 === e3 || !(wt.isMove(e3.keyCode) || wt.isNavigation(e3.keyCode) || e3.ctrlKey || e3.metaKey || k.contains([wt.code.BACKSPACE, wt.code.DELETE], e3.keyCode))) && this.options.maxTextLength > 0 && this.$editable.text().length + t4 > this.options.maxTextLength;
            } }, { key: "createRange", value: function() {
              return this.focus(), this.setLastRange(), this.getLastRange();
            } }, { key: "createRangeFromList", value: function(t4) {
              var e3 = yt.createFromNodeBefore(k.head(t4)).getStartPoint(), n4 = yt.createFromNodeAfter(k.last(t4)).getEndPoint();
              return yt.create(e3.node, e3.offset, n4.node, n4.offset);
            } }, { key: "setLastRange", value: function(t4) {
              t4 ? this.lastRange = t4 : (this.lastRange = yt.create(this.editable), 0 === e2()(this.lastRange.sc).closest(".note-editable").length && (this.lastRange = yt.createFromBodyElement(this.editable)));
            } }, { key: "getLastRange", value: function() {
              return this.lastRange || this.setLastRange(), this.lastRange;
            } }, { key: "saveRange", value: function(t4) {
              t4 && this.getLastRange().collapse().select();
            } }, { key: "restoreRange", value: function() {
              this.lastRange && (this.lastRange.select(), this.focus());
            } }, { key: "saveTarget", value: function(t4) {
              this.$editable.data("target", t4);
            } }, { key: "clearTarget", value: function() {
              this.$editable.removeData("target");
            } }, { key: "restoreTarget", value: function() {
              return this.$editable.data("target");
            } }, { key: "currentStyle", value: function() {
              var t4 = yt.create();
              return t4 && (t4 = t4.normalize()), t4 ? this.style.current(t4) : this.style.fromNode(this.$editable);
            } }, { key: "styleFromNode", value: function(t4) {
              return this.style.fromNode(t4);
            } }, { key: "undo", value: function() {
              this.context.triggerEvent("before.command", this.$editable.html()), this.history.undo(), this.context.triggerEvent("change", this.$editable.html(), this.$editable);
            } }, { key: "commit", value: function() {
              this.context.triggerEvent("before.command", this.$editable.html()), this.history.commit(), this.context.triggerEvent("change", this.$editable.html(), this.$editable);
            } }, { key: "redo", value: function() {
              this.context.triggerEvent("before.command", this.$editable.html()), this.history.redo(), this.context.triggerEvent("change", this.$editable.html(), this.$editable);
            } }, { key: "beforeCommand", value: function() {
              this.context.triggerEvent("before.command", this.$editable.html()), document.execCommand("styleWithCSS", false, this.options.styleWithCSS), this.focus();
            } }, { key: "afterCommand", value: function(t4) {
              this.normalizeContent(), this.history.recordUndo(), t4 || this.context.triggerEvent("change", this.$editable.html(), this.$editable);
            } }, { key: "tab", value: function() {
              var t4 = this.getLastRange();
              if (t4.isCollapsed() && t4.isOnCell())
                this.table.tab(t4);
              else {
                if (0 === this.options.tabSize)
                  return false;
                this.isLimited(this.options.tabSize) || (this.beforeCommand(), this.typing.insertTab(t4, this.options.tabSize), this.afterCommand());
              }
            } }, { key: "untab", value: function() {
              var t4 = this.getLastRange();
              if (t4.isCollapsed() && t4.isOnCell())
                this.table.tab(t4, true);
              else if (0 === this.options.tabSize)
                return false;
            } }, { key: "wrapCommand", value: function(t4) {
              return function() {
                this.beforeCommand(), t4.apply(this, arguments), this.afterCommand();
              };
            } }, { key: "insertImage", value: function(t4, n4) {
              var o3, i3 = this;
              return (o3 = t4, e2().Deferred(function(t5) {
                var n5 = e2()("<img>");
                n5.one("load", function() {
                  n5.off("error abort"), t5.resolve(n5);
                }).one("error abort", function() {
                  n5.off("load").detach(), t5.reject(n5);
                }).css({ display: "none" }).appendTo(document.body).attr("src", o3);
              }).promise()).then(function(t5) {
                i3.beforeCommand(), "function" == typeof n4 ? n4(t5) : ("string" == typeof n4 && t5.attr("data-filename", n4), t5.css("width", Math.min(i3.$editable.width(), t5.width()))), t5.show(), i3.getLastRange().insertNode(t5[0]), i3.setLastRange(yt.createFromNodeAfter(t5[0]).select()), i3.afterCommand();
              }).fail(function(t5) {
                i3.context.triggerEvent("image.upload.error", t5);
              });
            } }, { key: "insertImagesAsDataURL", value: function(t4) {
              var n4 = this;
              e2().each(t4, function(t5, o3) {
                var i3 = o3.name;
                n4.options.maximumImageFileSize && n4.options.maximumImageFileSize < o3.size ? n4.context.triggerEvent("image.upload.error", n4.lang.image.maximumFileSizeError) : function(t6) {
                  return e2().Deferred(function(n5) {
                    e2().extend(new FileReader(), { onload: function(t7) {
                      var e3 = t7.target.result;
                      n5.resolve(e3);
                    }, onerror: function(t7) {
                      n5.reject(t7);
                    } }).readAsDataURL(t6);
                  }).promise();
                }(o3).then(function(t6) {
                  return n4.insertImage(t6, i3);
                }).fail(function() {
                  n4.context.triggerEvent("image.upload.error");
                });
              });
            } }, { key: "insertImagesOrCallback", value: function(t4) {
              this.options.callbacks.onImageUpload ? this.context.triggerEvent("image.upload", t4) : this.insertImagesAsDataURL(t4);
            } }, { key: "getSelectedText", value: function() {
              var t4 = this.getLastRange();
              return t4.isOnAnchor() && (t4 = yt.createFromNode(ht.ancestor(t4.sc, ht.isAnchor))), t4.toString();
            } }, { key: "onFormatBlock", value: function(t4, n4) {
              if (document.execCommand("FormatBlock", false, f.isMSIE ? "<" + t4 + ">" : t4), n4 && n4.length && (n4[0].tagName.toUpperCase() !== t4.toUpperCase() && (n4 = n4.find(t4)), n4 && n4.length)) {
                var o3 = this.createRange(), i3 = e2()([o3.sc, o3.ec]).closest(t4);
                i3.removeClass();
                var r2 = n4[0].className || "";
                r2 && i3.addClass(r2);
              }
            } }, { key: "formatPara", value: function() {
              this.formatBlock("P");
            } }, { key: "fontStyling", value: function(t4, n4) {
              var o3 = this.getLastRange();
              if ("" !== o3) {
                var i3 = this.style.styleNodes(o3);
                if (this.$editor.find(".note-status-output").html(""), e2()(i3).css(t4, n4), o3.isCollapsed()) {
                  var r2 = k.head(i3);
                  r2 && !ht.nodeLength(r2) && (r2.innerHTML = ht.ZERO_WIDTH_NBSP_CHAR, yt.createFromNode(r2.firstChild).select(), this.setLastRange(), this.$editable.data("bogus", r2));
                } else
                  this.setLastRange(this.createRangeFromList(i3).select());
              } else {
                var a2 = e2().now();
                this.$editor.find(".note-status-output").html('<div id="note-status-output-' + a2 + '" class="alert alert-info">' + this.lang.output.noSelection + "</div>"), setTimeout(function() {
                  e2()("#note-status-output-" + a2).remove();
                }, 5e3);
              }
            } }, { key: "unlink", value: function() {
              var t4 = this.getLastRange();
              if (t4.isOnAnchor()) {
                var e3 = ht.ancestor(t4.sc, ht.isAnchor);
                (t4 = yt.createFromNode(e3)).select(), this.setLastRange(), this.beforeCommand(), document.execCommand("unlink"), this.afterCommand();
              }
            } }, { key: "getLinkInfo", value: function() {
              var t4 = this.getLastRange().expand(ht.isAnchor), n4 = e2()(k.head(t4.nodes(ht.isAnchor))), o3 = { range: t4, text: t4.toString(), url: n4.length ? n4.attr("href") : "" };
              return n4.length && (o3.isNewWindow = "_blank" === n4.attr("target")), o3;
            } }, { key: "addRow", value: function(t4) {
              var e3 = this.getLastRange(this.$editable);
              e3.isCollapsed() && e3.isOnCell() && (this.beforeCommand(), this.table.addRow(e3, t4), this.afterCommand());
            } }, { key: "addCol", value: function(t4) {
              var e3 = this.getLastRange(this.$editable);
              e3.isCollapsed() && e3.isOnCell() && (this.beforeCommand(), this.table.addCol(e3, t4), this.afterCommand());
            } }, { key: "deleteRow", value: function() {
              var t4 = this.getLastRange(this.$editable);
              t4.isCollapsed() && t4.isOnCell() && (this.beforeCommand(), this.table.deleteRow(t4), this.afterCommand());
            } }, { key: "deleteCol", value: function() {
              var t4 = this.getLastRange(this.$editable);
              t4.isCollapsed() && t4.isOnCell() && (this.beforeCommand(), this.table.deleteCol(t4), this.afterCommand());
            } }, { key: "deleteTable", value: function() {
              var t4 = this.getLastRange(this.$editable);
              t4.isCollapsed() && t4.isOnCell() && (this.beforeCommand(), this.table.deleteTable(t4), this.afterCommand());
            } }, { key: "resizeTo", value: function(t4, e3, n4) {
              var o3;
              if (n4) {
                var i3 = t4.y / t4.x, r2 = e3.data("ratio");
                o3 = { width: r2 > i3 ? t4.x : t4.y / r2, height: r2 > i3 ? t4.x * r2 : t4.y };
              } else
                o3 = { width: t4.x, height: t4.y };
              e3.css(o3);
            } }, { key: "hasFocus", value: function() {
              return this.$editable.is(":focus");
            } }, { key: "focus", value: function() {
              this.hasFocus() || this.$editable.focus();
            } }, { key: "isEmpty", value: function() {
              return ht.isEmpty(this.$editable[0]) || ht.emptyPara === this.$editable.html();
            } }, { key: "empty", value: function() {
              this.context.invoke("code", ht.emptyPara);
            } }, { key: "normalizeContent", value: function() {
              this.$editable[0].normalize();
            } }], o2 && At(n3.prototype, o2), i2 && At(n3, i2), t3;
          }();
          function Dt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Ht = function() {
            function t3(e4) {
              !function(t4, e5) {
                if (!(t4 instanceof e5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = e4, this.$editable = e4.layoutInfo.editable;
            }
            var e3, n3, o2;
            return e3 = t3, (n3 = [{ key: "initialize", value: function() {
              this.$editable.on("paste", this.pasteByEvent.bind(this));
            } }, { key: "pasteByEvent", value: function(t4) {
              var e4 = this, n4 = t4.originalEvent.clipboardData;
              if (n4 && n4.items && n4.items.length) {
                var o3 = n4.items.length > 1 ? n4.items[1] : k.head(n4.items);
                "file" === o3.kind && -1 !== o3.type.indexOf("image/") ? (this.context.invoke("editor.insertImagesOrCallback", [o3.getAsFile()]), t4.preventDefault()) : "string" === o3.kind && this.context.invoke("editor.isLimited", n4.getData("Text").length) && t4.preventDefault();
              } else if (window.clipboardData) {
                var i2 = window.clipboardData.getData("text");
                this.context.invoke("editor.isLimited", i2.length) && t4.preventDefault();
              }
              setTimeout(function() {
                e4.context.invoke("editor.afterCommand");
              }, 10);
            } }]) && Dt(e3.prototype, n3), o2 && Dt(e3, o2), t3;
          }();
          function zt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Bt = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.$eventListener = e2()(document), this.$editor = n4.layoutInfo.editor, this.$editable = n4.layoutInfo.editable, this.options = n4.options, this.lang = this.options.langInfo, this.documentEventHandlers = {}, this.$dropzone = e2()(['<div class="note-dropzone">', '<div class="note-dropzone-message"></div>', "</div>"].join("")).prependTo(this.$editor);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "initialize", value: function() {
              this.options.disableDragAndDrop ? (this.documentEventHandlers.onDrop = function(t4) {
                t4.preventDefault();
              }, this.$eventListener = this.$dropzone, this.$eventListener.on("drop", this.documentEventHandlers.onDrop)) : this.attachDragAndDropEvent();
            } }, { key: "attachDragAndDropEvent", value: function() {
              var t4 = this, n4 = e2()(), o3 = this.$dropzone.find(".note-dropzone-message");
              this.documentEventHandlers.onDragenter = function(e3) {
                var i3 = t4.context.invoke("codeview.isActivated"), r2 = t4.$editor.width() > 0 && t4.$editor.height() > 0;
                i3 || n4.length || !r2 || (t4.$editor.addClass("dragover"), t4.$dropzone.width(t4.$editor.width()), t4.$dropzone.height(t4.$editor.height()), o3.text(t4.lang.image.dragImageHere)), n4 = n4.add(e3.target);
              }, this.documentEventHandlers.onDragleave = function(o4) {
                (n4 = n4.not(o4.target)).length && "BODY" !== o4.target.nodeName || (n4 = e2()(), t4.$editor.removeClass("dragover"));
              }, this.documentEventHandlers.onDrop = function() {
                n4 = e2()(), t4.$editor.removeClass("dragover");
              }, this.$eventListener.on("dragenter", this.documentEventHandlers.onDragenter).on("dragleave", this.documentEventHandlers.onDragleave).on("drop", this.documentEventHandlers.onDrop), this.$dropzone.on("dragenter", function() {
                t4.$dropzone.addClass("hover"), o3.text(t4.lang.image.dropImage);
              }).on("dragleave", function() {
                t4.$dropzone.removeClass("hover"), o3.text(t4.lang.image.dragImageHere);
              }), this.$dropzone.on("drop", function(n5) {
                var o4 = n5.originalEvent.dataTransfer;
                n5.preventDefault(), o4 && o4.files && o4.files.length ? (t4.$editable.focus(), t4.context.invoke("editor.insertImagesOrCallback", o4.files)) : e2().each(o4.types, function(n6, i3) {
                  if (!(i3.toLowerCase().indexOf("_moz_") > -1)) {
                    var r2 = o4.getData(i3);
                    i3.toLowerCase().indexOf("text") > -1 ? t4.context.invoke("editor.pasteHTML", r2) : e2()(r2).each(function(e3, n7) {
                      t4.context.invoke("editor.insertNode", n7);
                    });
                  }
                });
              }).on("dragover", false);
            } }, { key: "destroy", value: function() {
              var t4 = this;
              Object.keys(this.documentEventHandlers).forEach(function(e3) {
                t4.$eventListener.off(e3.substr(2).toLowerCase(), t4.documentEventHandlers[e3]);
              }), this.documentEventHandlers = {};
            } }], o2 && zt(n3.prototype, o2), i2 && zt(n3, i2), t3;
          }();
          function Mt(t3, e3) {
            var n3 = "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
            if (!n3) {
              if (Array.isArray(t3) || (n3 = function(t4, e4) {
                if (!t4)
                  return;
                if ("string" == typeof t4)
                  return Ot(t4, e4);
                var n4 = Object.prototype.toString.call(t4).slice(8, -1);
                "Object" === n4 && t4.constructor && (n4 = t4.constructor.name);
                if ("Map" === n4 || "Set" === n4)
                  return Array.from(t4);
                if ("Arguments" === n4 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n4))
                  return Ot(t4, e4);
              }(t3)) || e3 && t3 && "number" == typeof t3.length) {
                n3 && (t3 = n3);
                var o2 = 0, i2 = function() {
                };
                return { s: i2, n: function() {
                  return o2 >= t3.length ? { done: true } : { done: false, value: t3[o2++] };
                }, e: function(t4) {
                  throw t4;
                }, f: i2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var r2, a2 = true, s2 = false;
            return { s: function() {
              n3 = n3.call(t3);
            }, n: function() {
              var t4 = n3.next();
              return a2 = t4.done, t4;
            }, e: function(t4) {
              s2 = true, r2 = t4;
            }, f: function() {
              try {
                a2 || null == n3.return || n3.return();
              } finally {
                if (s2)
                  throw r2;
              }
            } };
          }
          function Ot(t3, e3) {
            (null == e3 || e3 > t3.length) && (e3 = t3.length);
            for (var n3 = 0, o2 = new Array(e3); n3 < e3; n3++)
              o2[n3] = t3[n3];
            return o2;
          }
          function Ut(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var jt = function() {
            function t3(e4) {
              !function(t4, e5) {
                if (!(t4 instanceof e5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = e4, this.$editor = e4.layoutInfo.editor, this.$editable = e4.layoutInfo.editable, this.$codable = e4.layoutInfo.codable, this.options = e4.options, this.CodeMirrorConstructor = window.CodeMirror, this.options.codemirror.CodeMirrorConstructor && (this.CodeMirrorConstructor = this.options.codemirror.CodeMirrorConstructor);
            }
            var e3, n3, o2;
            return e3 = t3, n3 = [{ key: "sync", value: function(t4) {
              var e4 = this.isActivated(), n4 = this.CodeMirrorConstructor;
              e4 && (t4 ? n4 ? this.$codable.data("cmEditor").getDoc().setValue(t4) : this.$codable.val(t4) : n4 && this.$codable.data("cmEditor").save());
            } }, { key: "initialize", value: function() {
              var t4 = this;
              this.$codable.on("keyup", function(e4) {
                e4.keyCode === wt.code.ESCAPE && t4.deactivate();
              });
            } }, { key: "isActivated", value: function() {
              return this.$editor.hasClass("codeview");
            } }, { key: "toggle", value: function() {
              this.isActivated() ? this.deactivate() : this.activate(), this.context.triggerEvent("codeview.toggled");
            } }, { key: "purify", value: function(t4) {
              if (this.options.codeviewFilter && (t4 = t4.replace(this.options.codeviewFilterRegex, ""), this.options.codeviewIframeFilter)) {
                var e4 = this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);
                t4 = t4.replace(/(<iframe.*?>.*?(?:<\/iframe>)?)/gi, function(t5) {
                  if (/<.+src(?==?('|"|\s)?)[\s\S]+src(?=('|"|\s)?)[^>]*?>/i.test(t5))
                    return "";
                  var n4, o3 = Mt(e4);
                  try {
                    for (o3.s(); !(n4 = o3.n()).done; ) {
                      var i2 = n4.value;
                      if (new RegExp('src="(https?:)?//' + i2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&") + '/(.+)"').test(t5))
                        return t5;
                    }
                  } catch (t6) {
                    o3.e(t6);
                  } finally {
                    o3.f();
                  }
                  return "";
                });
              }
              return t4;
            } }, { key: "activate", value: function() {
              var t4 = this, e4 = this.CodeMirrorConstructor;
              if (this.$codable.val(ht.html(this.$editable, this.options.prettifyHtml)), this.$codable.height(this.$editable.height()), this.context.invoke("toolbar.updateCodeview", true), this.context.invoke("airPopover.updateCodeview", true), this.$editor.addClass("codeview"), this.$codable.focus(), e4) {
                var n4 = e4.fromTextArea(this.$codable[0], this.options.codemirror);
                if (this.options.codemirror.tern) {
                  var o3 = new e4.TernServer(this.options.codemirror.tern);
                  n4.ternServer = o3, n4.on("cursorActivity", function(t5) {
                    o3.updateArgHints(t5);
                  });
                }
                n4.on("blur", function(e5) {
                  t4.context.triggerEvent("blur.codeview", n4.getValue(), e5);
                }), n4.on("change", function() {
                  t4.context.triggerEvent("change.codeview", n4.getValue(), n4);
                }), n4.setSize(null, this.$editable.outerHeight()), this.$codable.data("cmEditor", n4);
              } else
                this.$codable.on("blur", function(e5) {
                  t4.context.triggerEvent("blur.codeview", t4.$codable.val(), e5);
                }), this.$codable.on("input", function() {
                  t4.context.triggerEvent("change.codeview", t4.$codable.val(), t4.$codable);
                });
            } }, { key: "deactivate", value: function() {
              if (this.CodeMirrorConstructor) {
                var t4 = this.$codable.data("cmEditor");
                this.$codable.val(t4.getValue()), t4.toTextArea();
              }
              var e4 = this.purify(ht.value(this.$codable, this.options.prettifyHtml) || ht.emptyPara), n4 = this.$editable.html() !== e4;
              this.$editable.html(e4), this.$editable.height(this.options.height ? this.$codable.height() : "auto"), this.$editor.removeClass("codeview"), n4 && this.context.triggerEvent("change", this.$editable.html(), this.$editable), this.$editable.focus(), this.context.invoke("toolbar.updateCodeview", false), this.context.invoke("airPopover.updateCodeview", false);
            } }, { key: "destroy", value: function() {
              this.isActivated() && this.deactivate();
            } }], n3 && Ut(e3.prototype, n3), o2 && Ut(e3, o2), t3;
          }();
          function Wt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Kt = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.$document = e2()(document), this.$statusbar = n4.layoutInfo.statusbar, this.$editable = n4.layoutInfo.editable, this.$codable = n4.layoutInfo.codable, this.options = n4.options;
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "initialize", value: function() {
              var t4 = this;
              this.options.airMode || this.options.disableResizeEditor ? this.destroy() : this.$statusbar.on("mousedown", function(e3) {
                e3.preventDefault(), e3.stopPropagation();
                var n4 = t4.$editable.offset().top - t4.$document.scrollTop(), o3 = t4.$codable.offset().top - t4.$document.scrollTop(), i3 = function(e4) {
                  var i4 = e4.clientY - (n4 + 24), r2 = e4.clientY - (o3 + 24);
                  i4 = t4.options.minheight > 0 ? Math.max(i4, t4.options.minheight) : i4, i4 = t4.options.maxHeight > 0 ? Math.min(i4, t4.options.maxHeight) : i4, r2 = t4.options.minheight > 0 ? Math.max(r2, t4.options.minheight) : r2, r2 = t4.options.maxHeight > 0 ? Math.min(r2, t4.options.maxHeight) : r2, t4.$editable.height(i4), t4.$codable.height(r2);
                };
                t4.$document.on("mousemove", i3).one("mouseup", function() {
                  t4.$document.off("mousemove", i3);
                });
              });
            } }, { key: "destroy", value: function() {
              this.$statusbar.off(), this.$statusbar.addClass("locked");
            } }]) && Wt(n3.prototype, o2), i2 && Wt(n3, i2), t3;
          }();
          function Vt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var qt = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.$editor = n4.layoutInfo.editor, this.$toolbar = n4.layoutInfo.toolbar, this.$editable = n4.layoutInfo.editable, this.$codable = n4.layoutInfo.codable, this.$window = e2()(window), this.$scrollbar = e2()("html, body"), this.scrollbarClassName = "note-fullscreen-body", this.onResize = function() {
                o3.resizeTo({ h: o3.$window.height() - o3.$toolbar.outerHeight() });
              };
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "resizeTo", value: function(t4) {
              this.$editable.css("height", t4.h), this.$codable.css("height", t4.h), this.$codable.data("cmeditor") && this.$codable.data("cmeditor").setsize(null, t4.h);
            } }, { key: "toggle", value: function() {
              this.$editor.toggleClass("fullscreen");
              var t4 = this.isFullscreen();
              this.$scrollbar.toggleClass(this.scrollbarClassName, t4), t4 ? (this.$editable.data("orgHeight", this.$editable.css("height")), this.$editable.data("orgMaxHeight", this.$editable.css("maxHeight")), this.$editable.css("maxHeight", ""), this.$window.on("resize", this.onResize).trigger("resize")) : (this.$window.off("resize", this.onResize), this.resizeTo({ h: this.$editable.data("orgHeight") }), this.$editable.css("maxHeight", this.$editable.css("orgMaxHeight"))), this.context.invoke("toolbar.updateFullscreen", t4);
            } }, { key: "isFullscreen", value: function() {
              return this.$editor.hasClass("fullscreen");
            } }, { key: "destroy", value: function() {
              this.$scrollbar.removeClass(this.scrollbarClassName);
            } }]) && Vt(n3.prototype, o2), i2 && Vt(n3, i2), t3;
          }();
          function _t(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Gt = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.$document = e2()(document), this.$editingArea = n4.layoutInfo.editingArea, this.options = n4.options, this.lang = this.options.langInfo, this.events = { "summernote.mousedown": function(t4, e3) {
                o3.update(e3.target, e3) && e3.preventDefault();
              }, "summernote.keyup summernote.scroll summernote.change summernote.dialog.shown": function() {
                o3.update();
              }, "summernote.disable summernote.blur": function() {
                o3.hide();
              }, "summernote.codeview.toggled": function() {
                o3.update();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "initialize", value: function() {
              var t4 = this;
              this.$handle = e2()(['<div class="note-handle">', '<div class="note-control-selection">', '<div class="note-control-selection-bg"></div>', '<div class="note-control-holder note-control-nw"></div>', '<div class="note-control-holder note-control-ne"></div>', '<div class="note-control-holder note-control-sw"></div>', '<div class="', this.options.disableResizeImage ? "note-control-holder" : "note-control-sizing", ' note-control-se"></div>', this.options.disableResizeImage ? "" : '<div class="note-control-selection-info"></div>', "</div>", "</div>"].join("")).prependTo(this.$editingArea), this.$handle.on("mousedown", function(e3) {
                if (ht.isControlSizing(e3.target)) {
                  e3.preventDefault(), e3.stopPropagation();
                  var n4 = t4.$handle.find(".note-control-selection").data("target"), o3 = n4.offset(), i3 = t4.$document.scrollTop(), r2 = function(e4) {
                    t4.context.invoke("editor.resizeTo", { x: e4.clientX - o3.left, y: e4.clientY - (o3.top - i3) }, n4, !e4.shiftKey), t4.update(n4[0], e4);
                  };
                  t4.$document.on("mousemove", r2).one("mouseup", function(e4) {
                    e4.preventDefault(), t4.$document.off("mousemove", r2), t4.context.invoke("editor.afterCommand");
                  }), n4.data("ratio") || n4.data("ratio", n4.height() / n4.width());
                }
              }), this.$handle.on("wheel", function(e3) {
                e3.preventDefault(), t4.update();
              });
            } }, { key: "destroy", value: function() {
              this.$handle.remove();
            } }, { key: "update", value: function(t4, n4) {
              if (this.context.isDisabled())
                return false;
              var o3 = ht.isImg(t4), i3 = this.$handle.find(".note-control-selection");
              if (this.context.invoke("imagePopover.update", t4, n4), o3) {
                var r2 = e2()(t4), a2 = r2.position(), s2 = { left: a2.left + parseInt(r2.css("marginLeft"), 10), top: a2.top + parseInt(r2.css("marginTop"), 10) }, l2 = { w: r2.outerWidth(false), h: r2.outerHeight(false) };
                i3.css({ display: "block", left: s2.left, top: s2.top, width: l2.w, height: l2.h }).data("target", r2);
                var c2 = new Image();
                c2.src = r2.attr("src");
                var u2 = l2.w + "x" + l2.h + " (" + this.lang.image.original + ": " + c2.width + "x" + c2.height + ")";
                i3.find(".note-control-selection-info").text(u2), this.context.invoke("editor.saveTarget", t4);
              } else
                this.hide();
              return o3;
            } }, { key: "hide", value: function() {
              this.context.invoke("editor.clearTarget"), this.$handle.children().hide();
            } }], o2 && _t(n3.prototype, o2), i2 && _t(n3, i2), t3;
          }();
          function Yt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Zt = /^([A-Za-z][A-Za-z0-9+-.]*\:[\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@|xmpp:[A-Z0-9._%+-]+@)?(www\.)?(.+)$/i, Qt = function() {
            function t3(e3) {
              var n4 = this;
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = e3, this.options = e3.options, this.events = { "summernote.keyup": function(t4, e4) {
                e4.isDefaultPrevented() || n4.handleKeyup(e4);
              }, "summernote.keydown": function(t4, e4) {
                n4.handleKeydown(e4);
              } };
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "initialize", value: function() {
              this.lastWordRange = null;
            } }, { key: "destroy", value: function() {
              this.lastWordRange = null;
            } }, { key: "replace", value: function() {
              if (this.lastWordRange) {
                var t4 = this.lastWordRange.toString(), n4 = t4.match(Zt);
                if (n4 && (n4[1] || n4[2])) {
                  var o3 = n4[1] ? t4 : "http://" + t4, i3 = this.options.showDomainOnlyForAutolink ? t4.replace(/^(?:https?:\/\/)?(?:tel?:?)?(?:mailto?:?)?(?:xmpp?:?)?(?:www\.)?/i, "").split("/")[0] : t4, r2 = e2()("<a></a>").html(i3).attr("href", o3)[0];
                  this.context.options.linkTargetBlank && e2()(r2).attr("target", "_blank"), this.lastWordRange.insertNode(r2), this.lastWordRange = null, this.context.invoke("editor.focus");
                }
              }
            } }, { key: "handleKeydown", value: function(t4) {
              if (k.contains([wt.code.ENTER, wt.code.SPACE], t4.keyCode)) {
                var e3 = this.context.invoke("editor.createRange").getWordRange();
                this.lastWordRange = e3;
              }
            } }, { key: "handleKeyup", value: function(t4) {
              k.contains([wt.code.ENTER, wt.code.SPACE], t4.keyCode) && this.replace();
            } }]) && Yt(n3.prototype, o2), i2 && Yt(n3, i2), t3;
          }();
          function Xt(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Jt = function() {
            function t3(e4) {
              var n4 = this;
              !function(t4, e5) {
                if (!(t4 instanceof e5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.$note = e4.layoutInfo.note, this.events = { "summernote.change": function() {
                n4.$note.val(e4.invoke("code"));
              } };
            }
            var e3, n3, o2;
            return e3 = t3, (n3 = [{ key: "shouldInitialize", value: function() {
              return ht.isTextarea(this.$note[0]);
            } }]) && Xt(e3.prototype, n3), o2 && Xt(e3, o2), t3;
          }();
          function te(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var ee = function() {
            function t3(e4) {
              var n4 = this;
              !function(t4, e5) {
                if (!(t4 instanceof e5))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = e4, this.options = e4.options.replace || {}, this.keys = [wt.code.ENTER, wt.code.SPACE, wt.code.PERIOD, wt.code.COMMA, wt.code.SEMICOLON, wt.code.SLASH], this.previousKeydownCode = null, this.events = { "summernote.keyup": function(t4, e5) {
                e5.isDefaultPrevented() || n4.handleKeyup(e5);
              }, "summernote.keydown": function(t4, e5) {
                n4.handleKeydown(e5);
              } };
            }
            var e3, n3, o2;
            return e3 = t3, (n3 = [{ key: "shouldInitialize", value: function() {
              return !!this.options.match;
            } }, { key: "initialize", value: function() {
              this.lastWord = null;
            } }, { key: "destroy", value: function() {
              this.lastWord = null;
            } }, { key: "replace", value: function() {
              if (this.lastWord) {
                var t4 = this, e4 = this.lastWord.toString();
                this.options.match(e4, function(e5) {
                  if (e5) {
                    var n4 = "";
                    if ("string" == typeof e5 ? n4 = ht.createText(e5) : e5 instanceof jQuery ? n4 = e5[0] : e5 instanceof Node && (n4 = e5), !n4)
                      return;
                    t4.lastWord.insertNode(n4), t4.lastWord = null, t4.context.invoke("editor.focus");
                  }
                });
              }
            } }, { key: "handleKeydown", value: function(t4) {
              if (this.previousKeydownCode && k.contains(this.keys, this.previousKeydownCode))
                this.previousKeydownCode = t4.keyCode;
              else {
                if (k.contains(this.keys, t4.keyCode)) {
                  var e4 = this.context.invoke("editor.createRange").getWordRange();
                  this.lastWord = e4;
                }
                this.previousKeydownCode = t4.keyCode;
              }
            } }, { key: "handleKeyup", value: function(t4) {
              k.contains(this.keys, t4.keyCode) && this.replace();
            } }]) && te(e3.prototype, n3), o2 && te(e3, o2), t3;
          }();
          function ne(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var oe = function() {
            function t3(e3) {
              var n4 = this;
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = e3, this.$editingArea = e3.layoutInfo.editingArea, this.options = e3.options, true === this.options.inheritPlaceholder && (this.options.placeholder = this.context.$note.attr("placeholder") || this.options.placeholder), this.events = { "summernote.init summernote.change": function() {
                n4.update();
              }, "summernote.codeview.toggled": function() {
                n4.update();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "shouldInitialize", value: function() {
              return !!this.options.placeholder;
            } }, { key: "initialize", value: function() {
              var t4 = this;
              this.$placeholder = e2()('<div class="note-placeholder"></div>'), this.$placeholder.on("click", function() {
                t4.context.invoke("focus");
              }).html(this.options.placeholder).prependTo(this.$editingArea), this.update();
            } }, { key: "destroy", value: function() {
              this.$placeholder.remove();
            } }, { key: "update", value: function() {
              var t4 = !this.context.invoke("codeview.isActivated") && this.context.invoke("editor.isEmpty");
              this.$placeholder.toggle(t4);
            } }]) && ne(n3.prototype, o2), i2 && ne(n3, i2), t3;
          }();
          function ie(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var re = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.ui = e2().summernote.ui, this.context = n4, this.$toolbar = n4.layoutInfo.toolbar, this.options = n4.options, this.lang = this.options.langInfo, this.invertedKeyMap = m.invertObject(this.options.keyMap[f.isMac ? "mac" : "pc"]);
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "representShortcut", value: function(t4) {
              var e3 = this.invertedKeyMap[t4];
              return this.options.shortcuts && e3 ? (f.isMac && (e3 = e3.replace("CMD", "⌘").replace("SHIFT", "⇧")), " (" + (e3 = e3.replace("BACKSLASH", "\\").replace("SLASH", "/").replace("LEFTBRACKET", "[").replace("RIGHTBRACKET", "]")) + ")") : "";
            } }, { key: "button", value: function(t4) {
              return !this.options.tooltip && t4.tooltip && delete t4.tooltip, t4.container = this.options.container, this.ui.button(t4);
            } }, { key: "initialize", value: function() {
              this.addToolbarButtons(), this.addImagePopoverButtons(), this.addLinkPopoverButtons(), this.addTablePopoverButtons(), this.fontInstalledMap = {};
            } }, { key: "destroy", value: function() {
              delete this.fontInstalledMap;
            } }, { key: "isFontInstalled", value: function(t4) {
              return Object.prototype.hasOwnProperty.call(this.fontInstalledMap, t4) || (this.fontInstalledMap[t4] = f.isFontInstalled(t4) || k.contains(this.options.fontNamesIgnoreCheck, t4)), this.fontInstalledMap[t4];
            } }, { key: "isFontDeservedToAdd", value: function(t4) {
              return "" !== (t4 = t4.toLowerCase()) && this.isFontInstalled(t4) && -1 === f.genericFontFamilies.indexOf(t4);
            } }, { key: "colorPalette", value: function(t4, n4, o3, i3) {
              var r2 = this;
              return this.ui.buttonGroup({ className: "note-color " + t4, children: [this.button({ className: "note-current-color-button", contents: this.ui.icon(this.options.icons.font + " note-recent-color"), tooltip: n4, click: function(t5) {
                var n5 = e2()(t5.currentTarget);
                o3 && i3 ? r2.context.invoke("editor.color", { backColor: n5.attr("data-backColor"), foreColor: n5.attr("data-foreColor") }) : o3 ? r2.context.invoke("editor.color", { backColor: n5.attr("data-backColor") }) : i3 && r2.context.invoke("editor.color", { foreColor: n5.attr("data-foreColor") });
              }, callback: function(t5) {
                var e3 = t5.find(".note-recent-color");
                o3 && (e3.css("background-color", r2.options.colorButton.backColor), t5.attr("data-backColor", r2.options.colorButton.backColor)), i3 ? (e3.css("color", r2.options.colorButton.foreColor), t5.attr("data-foreColor", r2.options.colorButton.foreColor)) : e3.css("color", "transparent");
              } }), this.button({ className: "dropdown-toggle", contents: this.ui.dropdownButtonContents("", this.options), tooltip: this.lang.color.more, data: { toggle: "dropdown" } }), this.ui.dropdown({ items: (o3 ? ['<div class="note-palette">', '<div class="note-palette-title">' + this.lang.color.background + "</div>", "<div>", '<button type="button" class="note-color-reset btn btn-light btn-default" data-event="backColor" data-value="transparent">', this.lang.color.transparent, "</button>", "</div>", '<div class="note-holder" data-event="backColor"><!-- back colors --></div>', "<div>", '<button type="button" class="note-color-select btn btn-light btn-default" data-event="openPalette" data-value="backColorPicker-' + this.options.id + '">', this.lang.color.cpSelect, "</button>", '<input type="color" id="backColorPicker-' + this.options.id + '" class="note-btn note-color-select-btn" value="' + this.options.colorButton.backColor + '" data-event="backColorPalette-' + this.options.id + '">', "</div>", '<div class="note-holder-custom" id="backColorPalette-' + this.options.id + '" data-event="backColor"></div>', "</div>"].join("") : "") + (i3 ? ['<div class="note-palette">', '<div class="note-palette-title">' + this.lang.color.foreground + "</div>", "<div>", '<button type="button" class="note-color-reset btn btn-light btn-default" data-event="removeFormat" data-value="foreColor">', this.lang.color.resetToDefault, "</button>", "</div>", '<div class="note-holder" data-event="foreColor"><!-- fore colors --></div>', "<div>", '<button type="button" class="note-color-select btn btn-light btn-default" data-event="openPalette" data-value="foreColorPicker-' + this.options.id + '">', this.lang.color.cpSelect, "</button>", '<input type="color" id="foreColorPicker-' + this.options.id + '" class="note-btn note-color-select-btn" value="' + this.options.colorButton.foreColor + '" data-event="foreColorPalette-' + this.options.id + '">', "</div>", '<div class="note-holder-custom" id="foreColorPalette-' + this.options.id + '" data-event="foreColor"></div>', "</div>"].join("") : ""), callback: function(t5) {
                t5.find(".note-holder").each(function(t6, n6) {
                  var o4 = e2()(n6);
                  o4.append(r2.ui.palette({ colors: r2.options.colors, colorsName: r2.options.colorsName, eventName: o4.data("event"), container: r2.options.container, tooltip: r2.options.tooltip }).render());
                });
                var n5 = [["#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]];
                t5.find(".note-holder-custom").each(function(t6, o4) {
                  var i4 = e2()(o4);
                  i4.append(r2.ui.palette({ colors: n5, colorsName: n5, eventName: i4.data("event"), container: r2.options.container, tooltip: r2.options.tooltip }).render());
                }), t5.find("input[type=color]").each(function(n6, o4) {
                  e2()(o4).change(function() {
                    var n7 = t5.find("#" + e2()(this).data("event")).find(".note-color-btn").first(), o5 = this.value.toUpperCase();
                    n7.css("background-color", o5).attr("aria-label", o5).attr("data-value", o5).attr("data-original-title", o5), n7.click();
                  });
                });
              }, click: function(n5) {
                n5.stopPropagation();
                var o4 = e2()("." + t4).find(".note-dropdown-menu"), i4 = e2()(n5.target), a2 = i4.data("event"), s2 = i4.attr("data-value");
                if ("openPalette" === a2) {
                  var l2 = o4.find("#" + s2), c2 = e2()(o4.find("#" + l2.data("event")).find(".note-color-row")[0]), u2 = c2.find(".note-color-btn").last().detach(), d2 = l2.val();
                  u2.css("background-color", d2).attr("aria-label", d2).attr("data-value", d2).attr("data-original-title", d2), c2.prepend(u2), l2.click();
                } else {
                  if (k.contains(["backColor", "foreColor"], a2)) {
                    var h2 = "backColor" === a2 ? "background-color" : "color", f2 = i4.closest(".note-color").find(".note-recent-color"), p2 = i4.closest(".note-color").find(".note-current-color-button");
                    f2.css(h2, s2), p2.attr("data-" + a2, s2);
                  }
                  r2.context.invoke("editor." + a2, s2);
                }
              } })] }).render();
            } }, { key: "addToolbarButtons", value: function() {
              var t4 = this;
              this.context.memo("button.style", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents(t4.ui.icon(t4.options.icons.magic), t4.options), tooltip: t4.lang.style.style, data: { toggle: "dropdown" } }), t4.ui.dropdown({ className: "dropdown-style", items: t4.options.styleTags, title: t4.lang.style.style, template: function(e3) {
                  "string" == typeof e3 && (e3 = { tag: e3, title: Object.prototype.hasOwnProperty.call(t4.lang.style, e3) ? t4.lang.style[e3] : e3 });
                  var n5 = e3.tag, o4 = e3.title;
                  return "<" + n5 + (e3.style ? ' style="' + e3.style + '" ' : "") + (e3.className ? ' class="' + e3.className + '"' : "") + ">" + o4 + "</" + n5 + ">";
                }, click: t4.context.createInvokeHandler("editor.formatBlock") })]).render();
              });
              for (var n4 = function(e3, n5) {
                var o4 = t4.options.styleTags[e3];
                t4.context.memo("button.style." + o4, function() {
                  return t4.button({ className: "note-btn-style-" + o4, contents: '<div data-value="' + o4 + '">' + o4.toUpperCase() + "</div>", tooltip: t4.lang.style[o4], click: t4.context.createInvokeHandler("editor.formatBlock") }).render();
                });
              }, o3 = 0, i3 = this.options.styleTags.length; o3 < i3; o3++)
                n4(o3);
              this.context.memo("button.bold", function() {
                return t4.button({ className: "note-btn-bold", contents: t4.ui.icon(t4.options.icons.bold), tooltip: t4.lang.font.bold + t4.representShortcut("bold"), click: t4.context.createInvokeHandlerAndUpdateState("editor.bold") }).render();
              }), this.context.memo("button.italic", function() {
                return t4.button({ className: "note-btn-italic", contents: t4.ui.icon(t4.options.icons.italic), tooltip: t4.lang.font.italic + t4.representShortcut("italic"), click: t4.context.createInvokeHandlerAndUpdateState("editor.italic") }).render();
              }), this.context.memo("button.underline", function() {
                return t4.button({ className: "note-btn-underline", contents: t4.ui.icon(t4.options.icons.underline), tooltip: t4.lang.font.underline + t4.representShortcut("underline"), click: t4.context.createInvokeHandlerAndUpdateState("editor.underline") }).render();
              }), this.context.memo("button.clear", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.eraser), tooltip: t4.lang.font.clear + t4.representShortcut("removeFormat"), click: t4.context.createInvokeHandler("editor.removeFormat") }).render();
              }), this.context.memo("button.strikethrough", function() {
                return t4.button({ className: "note-btn-strikethrough", contents: t4.ui.icon(t4.options.icons.strikethrough), tooltip: t4.lang.font.strikethrough + t4.representShortcut("strikethrough"), click: t4.context.createInvokeHandlerAndUpdateState("editor.strikethrough") }).render();
              }), this.context.memo("button.superscript", function() {
                return t4.button({ className: "note-btn-superscript", contents: t4.ui.icon(t4.options.icons.superscript), tooltip: t4.lang.font.superscript, click: t4.context.createInvokeHandlerAndUpdateState("editor.superscript") }).render();
              }), this.context.memo("button.subscript", function() {
                return t4.button({ className: "note-btn-subscript", contents: t4.ui.icon(t4.options.icons.subscript), tooltip: t4.lang.font.subscript, click: t4.context.createInvokeHandlerAndUpdateState("editor.subscript") }).render();
              }), this.context.memo("button.fontname", function() {
                var n5 = t4.context.invoke("editor.currentStyle");
                return t4.options.addDefaultFonts && e2().each(n5["font-family"].split(","), function(e3, n6) {
                  n6 = n6.trim().replace(/['"]+/g, ""), t4.isFontDeservedToAdd(n6) && -1 === t4.options.fontNames.indexOf(n6) && t4.options.fontNames.push(n6);
                }), t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents('<span class="note-current-fontname"></span>', t4.options), tooltip: t4.lang.font.name, data: { toggle: "dropdown" } }), t4.ui.dropdownCheck({ className: "dropdown-fontname", checkClassName: t4.options.icons.menuCheck, items: t4.options.fontNames.filter(t4.isFontInstalled.bind(t4)), title: t4.lang.font.name, template: function(t5) {
                  return '<span style="font-family: ' + f.validFontName(t5) + '">' + t5 + "</span>";
                }, click: t4.context.createInvokeHandlerAndUpdateState("editor.fontName") })]).render();
              }), this.context.memo("button.fontsize", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents('<span class="note-current-fontsize"></span>', t4.options), tooltip: t4.lang.font.size, data: { toggle: "dropdown" } }), t4.ui.dropdownCheck({ className: "dropdown-fontsize", checkClassName: t4.options.icons.menuCheck, items: t4.options.fontSizes, title: t4.lang.font.size, click: t4.context.createInvokeHandlerAndUpdateState("editor.fontSize") })]).render();
              }), this.context.memo("button.fontsizeunit", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents('<span class="note-current-fontsizeunit"></span>', t4.options), tooltip: t4.lang.font.sizeunit, data: { toggle: "dropdown" } }), t4.ui.dropdownCheck({ className: "dropdown-fontsizeunit", checkClassName: t4.options.icons.menuCheck, items: t4.options.fontSizeUnits, title: t4.lang.font.sizeunit, click: t4.context.createInvokeHandlerAndUpdateState("editor.fontSizeUnit") })]).render();
              }), this.context.memo("button.color", function() {
                return t4.colorPalette("note-color-all", t4.lang.color.recent, true, true);
              }), this.context.memo("button.forecolor", function() {
                return t4.colorPalette("note-color-fore", t4.lang.color.foreground, false, true);
              }), this.context.memo("button.backcolor", function() {
                return t4.colorPalette("note-color-back", t4.lang.color.background, true, false);
              }), this.context.memo("button.ul", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.unorderedlist), tooltip: t4.lang.lists.unordered + t4.representShortcut("insertUnorderedList"), click: t4.context.createInvokeHandler("editor.insertUnorderedList") }).render();
              }), this.context.memo("button.ol", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.orderedlist), tooltip: t4.lang.lists.ordered + t4.representShortcut("insertOrderedList"), click: t4.context.createInvokeHandler("editor.insertOrderedList") }).render();
              });
              var r2 = this.button({ contents: this.ui.icon(this.options.icons.alignLeft), tooltip: this.lang.paragraph.left + this.representShortcut("justifyLeft"), click: this.context.createInvokeHandler("editor.justifyLeft") }), a2 = this.button({ contents: this.ui.icon(this.options.icons.alignCenter), tooltip: this.lang.paragraph.center + this.representShortcut("justifyCenter"), click: this.context.createInvokeHandler("editor.justifyCenter") }), s2 = this.button({ contents: this.ui.icon(this.options.icons.alignRight), tooltip: this.lang.paragraph.right + this.representShortcut("justifyRight"), click: this.context.createInvokeHandler("editor.justifyRight") }), l2 = this.button({ contents: this.ui.icon(this.options.icons.alignJustify), tooltip: this.lang.paragraph.justify + this.representShortcut("justifyFull"), click: this.context.createInvokeHandler("editor.justifyFull") }), c2 = this.button({ contents: this.ui.icon(this.options.icons.outdent), tooltip: this.lang.paragraph.outdent + this.representShortcut("outdent"), click: this.context.createInvokeHandler("editor.outdent") }), u2 = this.button({ contents: this.ui.icon(this.options.icons.indent), tooltip: this.lang.paragraph.indent + this.representShortcut("indent"), click: this.context.createInvokeHandler("editor.indent") });
              this.context.memo("button.justifyLeft", m.invoke(r2, "render")), this.context.memo("button.justifyCenter", m.invoke(a2, "render")), this.context.memo("button.justifyRight", m.invoke(s2, "render")), this.context.memo("button.justifyFull", m.invoke(l2, "render")), this.context.memo("button.outdent", m.invoke(c2, "render")), this.context.memo("button.indent", m.invoke(u2, "render")), this.context.memo("button.paragraph", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents(t4.ui.icon(t4.options.icons.alignLeft), t4.options), tooltip: t4.lang.paragraph.paragraph, data: { toggle: "dropdown" } }), t4.ui.dropdown([t4.ui.buttonGroup({ className: "note-align", children: [r2, a2, s2, l2] }), t4.ui.buttonGroup({ className: "note-list", children: [c2, u2] })])]).render();
              }), this.context.memo("button.height", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents(t4.ui.icon(t4.options.icons.textHeight), t4.options), tooltip: t4.lang.font.height, data: { toggle: "dropdown" } }), t4.ui.dropdownCheck({ items: t4.options.lineHeights, checkClassName: t4.options.icons.menuCheck, className: "dropdown-line-height", title: t4.lang.font.height, click: t4.context.createInvokeHandler("editor.lineHeight") })]).render();
              }), this.context.memo("button.table", function() {
                return t4.ui.buttonGroup([t4.button({ className: "dropdown-toggle", contents: t4.ui.dropdownButtonContents(t4.ui.icon(t4.options.icons.table), t4.options), tooltip: t4.lang.table.table, data: { toggle: "dropdown" } }), t4.ui.dropdown({ title: t4.lang.table.table, className: "note-table", items: ['<div class="note-dimension-picker">', '<div class="note-dimension-picker-mousecatcher" data-event="insertTable" data-value="1x1"></div>', '<div class="note-dimension-picker-highlighted"></div>', '<div class="note-dimension-picker-unhighlighted"></div>', "</div>", '<div class="note-dimension-display">1 x 1</div>'].join("") })], { callback: function(e3) {
                  e3.find(".note-dimension-picker-mousecatcher").css({ width: t4.options.insertTableMaxSize.col + "em", height: t4.options.insertTableMaxSize.row + "em" }).mouseup(t4.context.createInvokeHandler("editor.insertTable")).on("mousemove", t4.tableMoveHandler.bind(t4));
                } }).render();
              }), this.context.memo("button.link", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.link), tooltip: t4.lang.link.link + t4.representShortcut("linkDialog.show"), click: t4.context.createInvokeHandler("linkDialog.show") }).render();
              }), this.context.memo("button.picture", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.picture), tooltip: t4.lang.image.image, click: t4.context.createInvokeHandler("imageDialog.show") }).render();
              }), this.context.memo("button.video", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.video), tooltip: t4.lang.video.video, click: t4.context.createInvokeHandler("videoDialog.show") }).render();
              }), this.context.memo("button.hr", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.minus), tooltip: t4.lang.hr.insert + t4.representShortcut("insertHorizontalRule"), click: t4.context.createInvokeHandler("editor.insertHorizontalRule") }).render();
              }), this.context.memo("button.fullscreen", function() {
                return t4.button({ className: "btn-fullscreen note-codeview-keep", contents: t4.ui.icon(t4.options.icons.arrowsAlt), tooltip: t4.lang.options.fullscreen, click: t4.context.createInvokeHandler("fullscreen.toggle") }).render();
              }), this.context.memo("button.codeview", function() {
                return t4.button({ className: "btn-codeview note-codeview-keep", contents: t4.ui.icon(t4.options.icons.code), tooltip: t4.lang.options.codeview, click: t4.context.createInvokeHandler("codeview.toggle") }).render();
              }), this.context.memo("button.redo", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.redo), tooltip: t4.lang.history.redo + t4.representShortcut("redo"), click: t4.context.createInvokeHandler("editor.redo") }).render();
              }), this.context.memo("button.undo", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.undo), tooltip: t4.lang.history.undo + t4.representShortcut("undo"), click: t4.context.createInvokeHandler("editor.undo") }).render();
              }), this.context.memo("button.help", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.question), tooltip: t4.lang.options.help, click: t4.context.createInvokeHandler("helpDialog.show") }).render();
              });
            } }, { key: "addImagePopoverButtons", value: function() {
              var t4 = this;
              this.context.memo("button.resizeFull", function() {
                return t4.button({ contents: '<span class="note-fontsize-10">100%</span>', tooltip: t4.lang.image.resizeFull, click: t4.context.createInvokeHandler("editor.resize", "1") }).render();
              }), this.context.memo("button.resizeHalf", function() {
                return t4.button({ contents: '<span class="note-fontsize-10">50%</span>', tooltip: t4.lang.image.resizeHalf, click: t4.context.createInvokeHandler("editor.resize", "0.5") }).render();
              }), this.context.memo("button.resizeQuarter", function() {
                return t4.button({ contents: '<span class="note-fontsize-10">25%</span>', tooltip: t4.lang.image.resizeQuarter, click: t4.context.createInvokeHandler("editor.resize", "0.25") }).render();
              }), this.context.memo("button.resizeNone", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.rollback), tooltip: t4.lang.image.resizeNone, click: t4.context.createInvokeHandler("editor.resize", "0") }).render();
              }), this.context.memo("button.floatLeft", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.floatLeft), tooltip: t4.lang.image.floatLeft, click: t4.context.createInvokeHandler("editor.floatMe", "left") }).render();
              }), this.context.memo("button.floatRight", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.floatRight), tooltip: t4.lang.image.floatRight, click: t4.context.createInvokeHandler("editor.floatMe", "right") }).render();
              }), this.context.memo("button.floatNone", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.rollback), tooltip: t4.lang.image.floatNone, click: t4.context.createInvokeHandler("editor.floatMe", "none") }).render();
              }), this.context.memo("button.removeMedia", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.trash), tooltip: t4.lang.image.remove, click: t4.context.createInvokeHandler("editor.removeMedia") }).render();
              });
            } }, { key: "addLinkPopoverButtons", value: function() {
              var t4 = this;
              this.context.memo("button.linkDialogShow", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.link), tooltip: t4.lang.link.edit, click: t4.context.createInvokeHandler("linkDialog.show") }).render();
              }), this.context.memo("button.unlink", function() {
                return t4.button({ contents: t4.ui.icon(t4.options.icons.unlink), tooltip: t4.lang.link.unlink, click: t4.context.createInvokeHandler("editor.unlink") }).render();
              });
            } }, { key: "addTablePopoverButtons", value: function() {
              var t4 = this;
              this.context.memo("button.addRowUp", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.rowAbove), tooltip: t4.lang.table.addRowAbove, click: t4.context.createInvokeHandler("editor.addRow", "top") }).render();
              }), this.context.memo("button.addRowDown", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.rowBelow), tooltip: t4.lang.table.addRowBelow, click: t4.context.createInvokeHandler("editor.addRow", "bottom") }).render();
              }), this.context.memo("button.addColLeft", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.colBefore), tooltip: t4.lang.table.addColLeft, click: t4.context.createInvokeHandler("editor.addCol", "left") }).render();
              }), this.context.memo("button.addColRight", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.colAfter), tooltip: t4.lang.table.addColRight, click: t4.context.createInvokeHandler("editor.addCol", "right") }).render();
              }), this.context.memo("button.deleteRow", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.rowRemove), tooltip: t4.lang.table.delRow, click: t4.context.createInvokeHandler("editor.deleteRow") }).render();
              }), this.context.memo("button.deleteCol", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.colRemove), tooltip: t4.lang.table.delCol, click: t4.context.createInvokeHandler("editor.deleteCol") }).render();
              }), this.context.memo("button.deleteTable", function() {
                return t4.button({ className: "btn-md", contents: t4.ui.icon(t4.options.icons.trash), tooltip: t4.lang.table.delTable, click: t4.context.createInvokeHandler("editor.deleteTable") }).render();
              });
            } }, { key: "build", value: function(t4, e3) {
              for (var n4 = 0, o3 = e3.length; n4 < o3; n4++) {
                for (var i3 = e3[n4], r2 = Array.isArray(i3) ? i3[0] : i3, a2 = Array.isArray(i3) ? 1 === i3.length ? [i3[0]] : i3[1] : [i3], s2 = this.ui.buttonGroup({ className: "note-" + r2 }).render(), l2 = 0, c2 = a2.length; l2 < c2; l2++) {
                  var u2 = this.context.memo("button." + a2[l2]);
                  u2 && s2.append("function" == typeof u2 ? u2(this.context) : u2);
                }
                s2.appendTo(t4);
              }
            } }, { key: "updateCurrentStyle", value: function(t4) {
              var n4 = t4 || this.$toolbar, o3 = this.context.invoke("editor.currentStyle");
              if (this.updateBtnStates(n4, { ".note-btn-bold": function() {
                return "bold" === o3["font-bold"];
              }, ".note-btn-italic": function() {
                return "italic" === o3["font-italic"];
              }, ".note-btn-underline": function() {
                return "underline" === o3["font-underline"];
              }, ".note-btn-subscript": function() {
                return "subscript" === o3["font-subscript"];
              }, ".note-btn-superscript": function() {
                return "superscript" === o3["font-superscript"];
              }, ".note-btn-strikethrough": function() {
                return "strikethrough" === o3["font-strikethrough"];
              } }), o3["font-family"]) {
                var i3 = o3["font-family"].split(",").map(function(t5) {
                  return t5.replace(/[\'\"]/g, "").replace(/\s+$/, "").replace(/^\s+/, "");
                }), r2 = k.find(i3, this.isFontInstalled.bind(this));
                n4.find(".dropdown-fontname a").each(function(t5, n5) {
                  var o4 = e2()(n5), i4 = o4.data("value") + "" == r2 + "";
                  o4.toggleClass("checked", i4);
                }), n4.find(".note-current-fontname").text(r2).css("font-family", r2);
              }
              if (o3["font-size"]) {
                var a2 = o3["font-size"];
                n4.find(".dropdown-fontsize a").each(function(t5, n5) {
                  var o4 = e2()(n5), i4 = o4.data("value") + "" == a2 + "";
                  o4.toggleClass("checked", i4);
                }), n4.find(".note-current-fontsize").text(a2);
                var s2 = o3["font-size-unit"];
                n4.find(".dropdown-fontsizeunit a").each(function(t5, n5) {
                  var o4 = e2()(n5), i4 = o4.data("value") + "" == s2 + "";
                  o4.toggleClass("checked", i4);
                }), n4.find(".note-current-fontsizeunit").text(s2);
              }
              if (o3["line-height"]) {
                var l2 = o3["line-height"];
                n4.find(".dropdown-line-height a").each(function(t5, n5) {
                  var o4 = e2()(n5), i4 = e2()(n5).data("value") + "" == l2 + "";
                  o4.toggleClass("checked", i4);
                }), n4.find(".note-current-line-height").text(l2);
              }
            } }, { key: "updateBtnStates", value: function(t4, n4) {
              var o3 = this;
              e2().each(n4, function(e3, n5) {
                o3.ui.toggleBtnActive(t4.find(e3), n5());
              });
            } }, { key: "tableMoveHandler", value: function(t4) {
              var n4, o3 = e2()(t4.target.parentNode), i3 = o3.next(), r2 = o3.find(".note-dimension-picker-mousecatcher"), a2 = o3.find(".note-dimension-picker-highlighted"), s2 = o3.find(".note-dimension-picker-unhighlighted");
              if (void 0 === t4.offsetX) {
                var l2 = e2()(t4.target).offset();
                n4 = { x: t4.pageX - l2.left, y: t4.pageY - l2.top };
              } else
                n4 = { x: t4.offsetX, y: t4.offsetY };
              var c2 = Math.ceil(n4.x / 18) || 1, u2 = Math.ceil(n4.y / 18) || 1;
              a2.css({ width: c2 + "em", height: u2 + "em" }), r2.data("value", c2 + "x" + u2), c2 > 3 && c2 < this.options.insertTableMaxSize.col && s2.css({ width: c2 + 1 + "em" }), u2 > 3 && u2 < this.options.insertTableMaxSize.row && s2.css({ height: u2 + 1 + "em" }), i3.html(c2 + " x " + u2);
            } }], o2 && ie(n3.prototype, o2), i2 && ie(n3, i2), t3;
          }();
          function ae(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var se = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.$window = e2()(window), this.$document = e2()(document), this.ui = e2().summernote.ui, this.$note = n4.layoutInfo.note, this.$editor = n4.layoutInfo.editor, this.$toolbar = n4.layoutInfo.toolbar, this.$editable = n4.layoutInfo.editable, this.$statusbar = n4.layoutInfo.statusbar, this.options = n4.options, this.isFollowing = false, this.followScroll = this.followScroll.bind(this);
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "shouldInitialize", value: function() {
              return !this.options.airMode;
            } }, { key: "initialize", value: function() {
              var t4 = this;
              this.options.toolbar = this.options.toolbar || [], this.options.toolbar.length ? this.context.invoke("buttons.build", this.$toolbar, this.options.toolbar) : this.$toolbar.hide(), this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.changeContainer(false), this.$note.on("summernote.keyup summernote.mouseup summernote.change", function() {
                t4.context.invoke("buttons.updateCurrentStyle");
              }), this.context.invoke("buttons.updateCurrentStyle"), this.options.followingToolbar && this.$window.on("scroll resize", this.followScroll);
            } }, { key: "destroy", value: function() {
              this.$toolbar.children().remove(), this.options.followingToolbar && this.$window.off("scroll resize", this.followScroll);
            } }, { key: "followScroll", value: function() {
              if (this.$editor.hasClass("fullscreen"))
                return false;
              var t4 = this.$editor.outerHeight(), n4 = this.$editor.width(), o3 = this.$toolbar.height(), i3 = this.$statusbar.height(), r2 = 0;
              this.options.otherStaticBar && (r2 = e2()(this.options.otherStaticBar).outerHeight());
              var a2 = this.$document.scrollTop(), s2 = this.$editor.offset().top, l2 = s2 - r2, c2 = s2 + t4 - r2 - o3 - i3;
              !this.isFollowing && a2 > l2 && a2 < c2 - o3 ? (this.isFollowing = true, this.$editable.css({ marginTop: this.$toolbar.outerHeight() }), this.$toolbar.css({ position: "fixed", top: r2, width: n4, zIndex: 1e3 })) : this.isFollowing && (a2 < l2 || a2 > c2) && (this.isFollowing = false, this.$toolbar.css({ position: "relative", top: 0, width: "100%", zIndex: "auto" }), this.$editable.css({ marginTop: "" }));
            } }, { key: "changeContainer", value: function(t4) {
              t4 ? this.$toolbar.prependTo(this.$editor) : this.options.toolbarContainer && this.$toolbar.appendTo(this.options.toolbarContainer), this.options.followingToolbar && this.followScroll();
            } }, { key: "updateFullscreen", value: function(t4) {
              this.ui.toggleBtnActive(this.$toolbar.find(".btn-fullscreen"), t4), this.changeContainer(t4);
            } }, { key: "updateCodeview", value: function(t4) {
              this.ui.toggleBtnActive(this.$toolbar.find(".btn-codeview"), t4), t4 ? this.deactivate() : this.activate();
            } }, { key: "activate", value: function(t4) {
              var e3 = this.$toolbar.find("button");
              t4 || (e3 = e3.not(".note-codeview-keep")), this.ui.toggleBtn(e3, true);
            } }, { key: "deactivate", value: function(t4) {
              var e3 = this.$toolbar.find("button");
              t4 || (e3 = e3.not(".note-codeview-keep")), this.ui.toggleBtn(e3, false);
            } }]) && ae(n3.prototype, o2), i2 && ae(n3, i2), t3;
          }();
          function le(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var ce = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.$body = e2()(document.body), this.$editor = n4.layoutInfo.editor, this.options = n4.options, this.lang = this.options.langInfo, n4.memo("help.linkDialog.show", this.options.langInfo.help["linkDialog.show"]);
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "initialize", value: function() {
              var t4 = this.options.dialogsInBody ? this.$body : this.options.container, n4 = ['<div class="form-group note-form-group">', '<label for="note-dialog-link-txt-'.concat(this.options.id, '" class="note-form-label">').concat(this.lang.link.textToDisplay, "</label>"), '<input id="note-dialog-link-txt-'.concat(this.options.id, '" class="note-link-text form-control note-form-control note-input" type="text"/>'), "</div>", '<div class="form-group note-form-group">', '<label for="note-dialog-link-url-'.concat(this.options.id, '" class="note-form-label">').concat(this.lang.link.url, "</label>"), '<input id="note-dialog-link-url-'.concat(this.options.id, '" class="note-link-url form-control note-form-control note-input" type="text" value="http://"/>'), "</div>", this.options.disableLinkTarget ? "" : e2()("<div></div>").append(this.ui.checkbox({ className: "sn-checkbox-open-in-new-window", text: this.lang.link.openInNewWindow, checked: true }).render()).html(), e2()("<div></div>").append(this.ui.checkbox({ className: "sn-checkbox-use-protocol", text: this.lang.link.useProtocol, checked: true }).render()).html()].join(""), o3 = '<input type="button" href="#" class="'.concat("btn btn-primary note-btn note-btn-primary note-link-btn", '" value="').concat(this.lang.link.insert, '" disabled>');
              this.$dialog = this.ui.dialog({ className: "link-dialog", title: this.lang.link.insert, fade: this.options.dialogsFade, body: n4, footer: o3 }).render().appendTo(t4);
            } }, { key: "destroy", value: function() {
              this.ui.hideDialog(this.$dialog), this.$dialog.remove();
            } }, { key: "bindEnterKey", value: function(t4, e3) {
              t4.on("keypress", function(t5) {
                t5.keyCode === wt.code.ENTER && (t5.preventDefault(), e3.trigger("click"));
              });
            } }, { key: "toggleLinkBtn", value: function(t4, e3, n4) {
              this.ui.toggleBtn(t4, e3.val() && n4.val());
            } }, { key: "showLinkDialog", value: function(t4) {
              var n4 = this;
              return e2().Deferred(function(e3) {
                var o3 = n4.$dialog.find(".note-link-text"), i3 = n4.$dialog.find(".note-link-url"), r2 = n4.$dialog.find(".note-link-btn"), a2 = n4.$dialog.find(".sn-checkbox-open-in-new-window input[type=checkbox]"), s2 = n4.$dialog.find(".sn-checkbox-use-protocol input[type=checkbox]");
                n4.ui.onDialogShown(n4.$dialog, function() {
                  n4.context.triggerEvent("dialog.shown"), !t4.url && m.isValidUrl(t4.text) && (t4.url = t4.text), o3.on("input paste propertychange", function() {
                    t4.text = o3.val(), n4.toggleLinkBtn(r2, o3, i3);
                  }).val(t4.text), i3.on("input paste propertychange", function() {
                    t4.text || o3.val(i3.val()), n4.toggleLinkBtn(r2, o3, i3);
                  }).val(t4.url), f.isSupportTouch || i3.trigger("focus"), n4.toggleLinkBtn(r2, o3, i3), n4.bindEnterKey(i3, r2), n4.bindEnterKey(o3, r2);
                  var l2 = void 0 !== t4.isNewWindow ? t4.isNewWindow : n4.context.options.linkTargetBlank;
                  a2.prop("checked", l2);
                  var c2 = !t4.url && n4.context.options.useProtocol;
                  s2.prop("checked", c2), r2.one("click", function(r3) {
                    r3.preventDefault(), e3.resolve({ range: t4.range, url: i3.val(), text: o3.val(), isNewWindow: a2.is(":checked"), checkProtocol: s2.is(":checked") }), n4.ui.hideDialog(n4.$dialog);
                  });
                }), n4.ui.onDialogHidden(n4.$dialog, function() {
                  o3.off(), i3.off(), r2.off(), "pending" === e3.state() && e3.reject();
                }), n4.ui.showDialog(n4.$dialog);
              }).promise();
            } }, { key: "show", value: function() {
              var t4 = this, e3 = this.context.invoke("editor.getLinkInfo");
              this.context.invoke("editor.saveRange"), this.showLinkDialog(e3).then(function(e4) {
                t4.context.invoke("editor.restoreRange"), t4.context.invoke("editor.createLink", e4);
              }).fail(function() {
                t4.context.invoke("editor.restoreRange");
              });
            } }]) && le(n3.prototype, o2), i2 && le(n3, i2), t3;
          }();
          function ue(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var de = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.options = n4.options, this.events = { "summernote.keyup summernote.mouseup summernote.change summernote.scroll": function() {
                o3.update();
              }, "summernote.disable summernote.dialog.shown": function() {
                o3.hide();
              }, "summernote.blur": function(t4, e3) {
                e3.originalEvent && e3.originalEvent.relatedTarget && o3.$popover[0].contains(e3.originalEvent.relatedTarget) || o3.hide();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "shouldInitialize", value: function() {
              return !k.isEmpty(this.options.popover.link);
            } }, { key: "initialize", value: function() {
              this.$popover = this.ui.popover({ className: "note-link-popover", callback: function(t5) {
                t5.find(".popover-content,.note-popover-content").prepend('<span><a target="_blank"></a>&nbsp;</span>');
              } }).render().appendTo(this.options.container);
              var t4 = this.$popover.find(".popover-content,.note-popover-content");
              this.context.invoke("buttons.build", t4, this.options.popover.link), this.$popover.on("mousedown", function(t5) {
                t5.preventDefault();
              });
            } }, { key: "destroy", value: function() {
              this.$popover.remove();
            } }, { key: "update", value: function() {
              if (this.context.invoke("editor.hasFocus")) {
                var t4 = this.context.invoke("editor.getLastRange");
                if (t4.isCollapsed() && t4.isOnAnchor()) {
                  var n4 = ht.ancestor(t4.sc, ht.isAnchor), o3 = e2()(n4).attr("href");
                  this.$popover.find("a").attr("href", o3).text(o3);
                  var i3 = ht.posFromPlaceholder(n4), r2 = e2()(this.options.container).offset();
                  i3.top -= r2.top, i3.left -= r2.left, this.$popover.css({ display: "block", left: i3.left, top: i3.top });
                } else
                  this.hide();
              } else
                this.hide();
            } }, { key: "hide", value: function() {
              this.$popover.hide();
            } }]) && ue(n3.prototype, o2), i2 && ue(n3, i2), t3;
          }();
          function he(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var fe = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.$body = e2()(document.body), this.$editor = n4.layoutInfo.editor, this.options = n4.options, this.lang = this.options.langInfo;
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "initialize", value: function() {
              var t4 = "";
              if (this.options.maximumImageFileSize) {
                var e3 = Math.floor(Math.log(this.options.maximumImageFileSize) / Math.log(1024)), n4 = 1 * (this.options.maximumImageFileSize / Math.pow(1024, e3)).toFixed(2) + " " + " KMGTP"[e3] + "B";
                t4 = "<small>".concat(this.lang.image.maximumFileSize + " : " + n4, "</small>");
              }
              var o3 = this.options.dialogsInBody ? this.$body : this.options.container, i3 = ['<div class="form-group note-form-group note-group-select-from-files">', '<label for="note-dialog-image-file-' + this.options.id + '" class="note-form-label">' + this.lang.image.selectFromFiles + "</label>", '<input id="note-dialog-image-file-' + this.options.id + '" class="note-image-input form-control-file note-form-control note-input" ', ' type="file" name="files" accept="' + this.options.acceptImageFileTypes + '" multiple="multiple"/>', t4, "</div>", '<div class="form-group note-group-image-url">', '<label for="note-dialog-image-url-' + this.options.id + '" class="note-form-label">' + this.lang.image.url + "</label>", '<input id="note-dialog-image-url-' + this.options.id + '" class="note-image-url form-control note-form-control note-input" type="text"/>', "</div>"].join(""), r2 = '<input type="button" href="#" class="'.concat("btn btn-primary note-btn note-btn-primary note-image-btn", '" value="').concat(this.lang.image.insert, '" disabled>');
              this.$dialog = this.ui.dialog({ title: this.lang.image.insert, fade: this.options.dialogsFade, body: i3, footer: r2 }).render().appendTo(o3);
            } }, { key: "destroy", value: function() {
              this.ui.hideDialog(this.$dialog), this.$dialog.remove();
            } }, { key: "bindEnterKey", value: function(t4, e3) {
              t4.on("keypress", function(t5) {
                t5.keyCode === wt.code.ENTER && (t5.preventDefault(), e3.trigger("click"));
              });
            } }, { key: "show", value: function() {
              var t4 = this;
              this.context.invoke("editor.saveRange"), this.showImageDialog().then(function(e3) {
                t4.ui.hideDialog(t4.$dialog), t4.context.invoke("editor.restoreRange"), "string" == typeof e3 ? t4.options.callbacks.onImageLinkInsert ? t4.context.triggerEvent("image.link.insert", e3) : t4.context.invoke("editor.insertImage", e3) : t4.context.invoke("editor.insertImagesOrCallback", e3);
              }).fail(function() {
                t4.context.invoke("editor.restoreRange");
              });
            } }, { key: "showImageDialog", value: function() {
              var t4 = this;
              return e2().Deferred(function(e3) {
                var n4 = t4.$dialog.find(".note-image-input"), o3 = t4.$dialog.find(".note-image-url"), i3 = t4.$dialog.find(".note-image-btn");
                t4.ui.onDialogShown(t4.$dialog, function() {
                  t4.context.triggerEvent("dialog.shown"), n4.replaceWith(n4.clone().on("change", function(t5) {
                    e3.resolve(t5.target.files || t5.target.value);
                  }).val("")), o3.on("input paste propertychange", function() {
                    t4.ui.toggleBtn(i3, o3.val());
                  }).val(""), f.isSupportTouch || o3.trigger("focus"), i3.click(function(t5) {
                    t5.preventDefault(), e3.resolve(o3.val());
                  }), t4.bindEnterKey(o3, i3);
                }), t4.ui.onDialogHidden(t4.$dialog, function() {
                  n4.off(), o3.off(), i3.off(), "pending" === e3.state() && e3.reject();
                }), t4.ui.showDialog(t4.$dialog);
              });
            } }]) && he(n3.prototype, o2), i2 && he(n3, i2), t3;
          }();
          function pe(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var me = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.editable = n4.layoutInfo.editable[0], this.options = n4.options, this.events = { "summernote.disable summernote.dialog.shown": function() {
                o3.hide();
              }, "summernote.blur": function(t4, e3) {
                e3.originalEvent && e3.originalEvent.relatedTarget && o3.$popover[0].contains(e3.originalEvent.relatedTarget) || o3.hide();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "shouldInitialize", value: function() {
              return !k.isEmpty(this.options.popover.image);
            } }, { key: "initialize", value: function() {
              this.$popover = this.ui.popover({ className: "note-image-popover" }).render().appendTo(this.options.container);
              var t4 = this.$popover.find(".popover-content,.note-popover-content");
              this.context.invoke("buttons.build", t4, this.options.popover.image), this.$popover.on("mousedown", function(t5) {
                t5.preventDefault();
              });
            } }, { key: "destroy", value: function() {
              this.$popover.remove();
            } }, { key: "update", value: function(t4, n4) {
              if (ht.isImg(t4)) {
                var o3 = e2()(t4).offset(), i3 = e2()(this.options.container).offset(), r2 = {};
                this.options.popatmouse ? (r2.left = n4.pageX - 20, r2.top = n4.pageY) : r2 = o3, r2.top -= i3.top, r2.left -= i3.left, this.$popover.css({ display: "block", left: r2.left, top: r2.top });
              } else
                this.hide();
            } }, { key: "hide", value: function() {
              this.$popover.hide();
            } }], o2 && pe(n3.prototype, o2), i2 && pe(n3, i2), t3;
          }();
          function ve(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var ge = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.options = n4.options, this.events = { "summernote.mousedown": function(t4, e3) {
                o3.update(e3.target);
              }, "summernote.keyup summernote.scroll summernote.change": function() {
                o3.update();
              }, "summernote.disable summernote.dialog.shown": function() {
                o3.hide();
              }, "summernote.blur": function(t4, e3) {
                e3.originalEvent && e3.originalEvent.relatedTarget && o3.$popover[0].contains(e3.originalEvent.relatedTarget) || o3.hide();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "shouldInitialize", value: function() {
              return !k.isEmpty(this.options.popover.table);
            } }, { key: "initialize", value: function() {
              this.$popover = this.ui.popover({ className: "note-table-popover" }).render().appendTo(this.options.container);
              var t4 = this.$popover.find(".popover-content,.note-popover-content");
              this.context.invoke("buttons.build", t4, this.options.popover.table), f.isFF && document.execCommand("enableInlineTableEditing", false, false), this.$popover.on("mousedown", function(t5) {
                t5.preventDefault();
              });
            } }, { key: "destroy", value: function() {
              this.$popover.remove();
            } }, { key: "update", value: function(t4) {
              if (this.context.isDisabled())
                return false;
              var n4 = ht.isCell(t4) || ht.isCell(null == t4 ? void 0 : t4.parentElement);
              if (n4) {
                var o3 = ht.posFromPlaceholder(t4), i3 = e2()(this.options.container).offset();
                o3.top -= i3.top, o3.left -= i3.left, this.$popover.css({ display: "block", left: o3.left, top: o3.top });
              } else
                this.hide();
              return n4;
            } }, { key: "hide", value: function() {
              this.$popover.hide();
            } }], o2 && ve(n3.prototype, o2), i2 && ve(n3, i2), t3;
          }();
          function be(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var ye = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.$body = e2()(document.body), this.$editor = n4.layoutInfo.editor, this.options = n4.options, this.lang = this.options.langInfo;
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "initialize", value: function() {
              var t4 = this.options.dialogsInBody ? this.$body : this.options.container, e3 = ['<div class="form-group note-form-group row-fluid">', '<label for="note-dialog-video-url-'.concat(this.options.id, '" class="note-form-label">').concat(this.lang.video.url, ' <small class="text-muted">').concat(this.lang.video.providers, "</small></label>"), '<input id="note-dialog-video-url-'.concat(this.options.id, '" class="note-video-url form-control note-form-control note-input" type="text"/>'), "</div>"].join(""), n4 = '<input type="button" href="#" class="'.concat("btn btn-primary note-btn note-btn-primary note-video-btn", '" value="').concat(this.lang.video.insert, '" disabled>');
              this.$dialog = this.ui.dialog({ title: this.lang.video.insert, fade: this.options.dialogsFade, body: e3, footer: n4 }).render().appendTo(t4);
            } }, { key: "destroy", value: function() {
              this.ui.hideDialog(this.$dialog), this.$dialog.remove();
            } }, { key: "bindEnterKey", value: function(t4, e3) {
              t4.on("keypress", function(t5) {
                t5.keyCode === wt.code.ENTER && (t5.preventDefault(), e3.trigger("click"));
              });
            } }, { key: "createVideoNode", value: function(t4) {
              var n4, o3 = t4.match(/\/\/(?:(?:www|m)\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))([\w|-]{11})(?:(?:[\?&]t=)(\S+))?$/), i3 = t4.match(/(?:\.|\/\/)drive\.google\.com\/file\/d\/(.[a-zA-Z0-9_-]*)\/view/), r2 = t4.match(/(?:www\.|\/\/)instagram\.com\/p\/(.[a-zA-Z0-9_-]*)/), a2 = t4.match(/\/\/vine\.co\/v\/([a-zA-Z0-9]+)/), s2 = t4.match(/\/\/(player\.)?vimeo\.com\/([a-z]*\/)*(\d+)[?]?.*/), l2 = t4.match(/.+dailymotion.com\/(video|hub)\/([^_]+)[^#]*(#video=([^_&]+))?/), c2 = t4.match(/\/\/v\.youku\.com\/v_show\/id_(\w+)=*\.html/), u2 = t4.match(/\/\/(.*)\/videos\/watch\/([^?]*)(?:\?(?:start=(\w*))?(?:&stop=(\w*))?(?:&loop=([10]))?(?:&autoplay=([10]))?(?:&muted=([10]))?)?/), d2 = t4.match(/\/\/v\.qq\.com.*?vid=(.+)/), h2 = t4.match(/\/\/v\.qq\.com\/x?\/?(page|cover).*?\/([^\/]+)\.html\??.*/), f2 = t4.match(/^.+.(mp4|m4v)$/), p2 = t4.match(/^.+.(ogg|ogv)$/), m2 = t4.match(/^.+.(webm)$/), v2 = t4.match(/(?:www\.|\/\/)facebook\.com\/([^\/]+)\/videos\/([0-9]+)/);
              if (o3 && 11 === o3[1].length) {
                var g2 = o3[1], b2 = 0;
                if (void 0 !== o3[2]) {
                  var y2 = o3[2].match(/^(?:(\d+)h)?(?:(\d+)m)?(?:(\d+)s)?$/);
                  if (y2)
                    for (var k2 = [3600, 60, 1], w2 = 0, C2 = k2.length; w2 < C2; w2++)
                      b2 += void 0 !== y2[w2 + 1] ? k2[w2] * parseInt(y2[w2 + 1], 10) : 0;
                }
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", "//www.youtube.com/embed/" + g2 + (b2 > 0 ? "?start=" + b2 : "")).attr("width", "640").attr("height", "360");
              } else if (i3 && i3[0].length)
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", "https://drive.google.com/file/d/" + i3[1] + "/preview").attr("width", "640").attr("height", "480");
              else if (r2 && r2[0].length)
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", "https://instagram.com/p/" + r2[1] + "/embed/").attr("width", "612").attr("height", "710").attr("scrolling", "no").attr("allowtransparency", "true");
              else if (a2 && a2[0].length)
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", a2[0] + "/embed/simple").attr("width", "600").attr("height", "600").attr("class", "vine-embed");
              else if (s2 && s2[3].length)
                n4 = e2()("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("frameborder", 0).attr("src", "//player.vimeo.com/video/" + s2[3]).attr("width", "640").attr("height", "360");
              else if (l2 && l2[2].length)
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", "//www.dailymotion.com/embed/video/" + l2[2]).attr("width", "640").attr("height", "360");
              else if (c2 && c2[1].length)
                n4 = e2()("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("frameborder", 0).attr("height", "498").attr("width", "510").attr("src", "//player.youku.com/embed/" + c2[1]);
              else if (u2 && u2[0].length) {
                var x2 = 0;
                "undefined" !== u2[2] && (x2 = u2[2]);
                var S2 = 0;
                "undefined" !== u2[3] && (S2 = u2[3]);
                var T2 = 0;
                "undefined" !== u2[4] && (T2 = u2[4]);
                var E2 = 0;
                "undefined" !== u2[5] && (E2 = u2[5]);
                var I2 = 0;
                "undefined" !== u2[6] && (I2 = u2[6]), n4 = e2()('<iframe allowfullscreen sandbox="allow-same-origin allow-scripts allow-popups">').attr("frameborder", 0).attr("src", "//" + u2[1] + "/videos/embed/" + u2[2] + "?loop=" + T2 + "&autoplay=" + E2 + "&muted=" + I2 + (x2 > 0 ? "&start=" + x2 : "") + (S2 > 0 ? "&end=" + b2 : "")).attr("width", "560").attr("height", "315");
              } else if (d2 && d2[1].length || h2 && h2[2].length) {
                var $2 = d2 && d2[1].length ? d2[1] : h2[2];
                n4 = e2()("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("frameborder", 0).attr("height", "310").attr("width", "500").attr("src", "https://v.qq.com/txp/iframe/player.html?vid=" + $2 + "&amp;auto=0");
              } else if (f2 || p2 || m2)
                n4 = e2()("<video controls>").attr("src", t4).attr("width", "640").attr("height", "360");
              else {
                if (!v2 || !v2[0].length)
                  return false;
                n4 = e2()("<iframe>").attr("frameborder", 0).attr("src", "https://www.facebook.com/plugins/video.php?href=" + encodeURIComponent(v2[0]) + "&show_text=0&width=560").attr("width", "560").attr("height", "301").attr("scrolling", "no").attr("allowtransparency", "true");
              }
              return n4.addClass("note-video-clip"), n4[0];
            } }, { key: "show", value: function() {
              var t4 = this, e3 = this.context.invoke("editor.getSelectedText");
              this.context.invoke("editor.saveRange"), this.showVideoDialog(e3).then(function(e4) {
                t4.ui.hideDialog(t4.$dialog), t4.context.invoke("editor.restoreRange");
                var n4 = t4.createVideoNode(e4);
                n4 && t4.context.invoke("editor.insertNode", n4);
              }).fail(function() {
                t4.context.invoke("editor.restoreRange");
              });
            } }, { key: "showVideoDialog", value: function() {
              var t4 = this;
              return e2().Deferred(function(e3) {
                var n4 = t4.$dialog.find(".note-video-url"), o3 = t4.$dialog.find(".note-video-btn");
                t4.ui.onDialogShown(t4.$dialog, function() {
                  t4.context.triggerEvent("dialog.shown"), n4.on("input paste propertychange", function() {
                    t4.ui.toggleBtn(o3, n4.val());
                  }), f.isSupportTouch || n4.trigger("focus"), o3.click(function(t5) {
                    t5.preventDefault(), e3.resolve(n4.val());
                  }), t4.bindEnterKey(n4, o3);
                }), t4.ui.onDialogHidden(t4.$dialog, function() {
                  n4.off(), o3.off(), "pending" === e3.state() && e3.reject();
                }), t4.ui.showDialog(t4.$dialog);
              });
            } }]) && be(n3.prototype, o2), i2 && be(n3, i2), t3;
          }();
          function ke(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var we = function() {
            function t3(n4) {
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.$body = e2()(document.body), this.$editor = n4.layoutInfo.editor, this.options = n4.options, this.lang = this.options.langInfo;
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "initialize", value: function() {
              var t4 = this.options.dialogsInBody ? this.$body : this.options.container, e3 = ['<p class="text-center">', '<a href="http://summernote.org/" target="_blank" rel="noopener noreferrer">Summernote 0.8.20</a> · ', '<a href="https://github.com/summernote/summernote" target="_blank" rel="noopener noreferrer">Project</a> · ', '<a href="https://github.com/summernote/summernote/issues" target="_blank" rel="noopener noreferrer">Issues</a>', "</p>"].join("");
              this.$dialog = this.ui.dialog({ title: this.lang.options.help, fade: this.options.dialogsFade, body: this.createShortcutList(), footer: e3, callback: function(t5) {
                t5.find(".modal-body,.note-modal-body").css({ "max-height": 300, overflow: "scroll" });
              } }).render().appendTo(t4);
            } }, { key: "destroy", value: function() {
              this.ui.hideDialog(this.$dialog), this.$dialog.remove();
            } }, { key: "createShortcutList", value: function() {
              var t4 = this, n4 = this.options.keyMap[f.isMac ? "mac" : "pc"];
              return Object.keys(n4).map(function(o3) {
                var i3 = n4[o3], r2 = e2()('<div><div class="help-list-item"></div></div>');
                return r2.append(e2()("<label><kbd>" + o3 + "</kdb></label>").css({ width: 180, "margin-right": 10 })).append(e2()("<span></span>").html(t4.context.memo("help." + i3) || i3)), r2.html();
              }).join("");
            } }, { key: "showHelpDialog", value: function() {
              var t4 = this;
              return e2().Deferred(function(e3) {
                t4.ui.onDialogShown(t4.$dialog, function() {
                  t4.context.triggerEvent("dialog.shown"), e3.resolve();
                }), t4.ui.showDialog(t4.$dialog);
              }).promise();
            } }, { key: "show", value: function() {
              var t4 = this;
              this.context.invoke("editor.saveRange"), this.showHelpDialog().then(function() {
                t4.context.invoke("editor.restoreRange");
              });
            } }], o2 && ke(n3.prototype, o2), i2 && ke(n3, i2), t3;
          }();
          function Ce(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var xe = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.options = n4.options, this.hidable = true, this.onContextmenu = false, this.pageX = null, this.pageY = null, this.events = { "summernote.contextmenu": function(t4) {
                o3.options.editing && (t4.preventDefault(), t4.stopPropagation(), o3.onContextmenu = true, o3.update(true));
              }, "summernote.mousedown": function(t4, e3) {
                o3.pageX = e3.pageX, o3.pageY = e3.pageY;
              }, "summernote.keyup summernote.mouseup summernote.scroll": function(t4, e3) {
                o3.options.editing && !o3.onContextmenu && (o3.pageX = e3.pageX, o3.pageY = e3.pageY, o3.update()), o3.onContextmenu = false;
              }, "summernote.disable summernote.change summernote.dialog.shown summernote.blur": function() {
                o3.hide();
              }, "summernote.focusout": function() {
                o3.$popover.is(":active,:focus") || o3.hide();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "shouldInitialize", value: function() {
              return this.options.airMode && !k.isEmpty(this.options.popover.air);
            } }, { key: "initialize", value: function() {
              var t4 = this;
              this.$popover = this.ui.popover({ className: "note-air-popover" }).render().appendTo(this.options.container);
              var e3 = this.$popover.find(".popover-content");
              this.context.invoke("buttons.build", e3, this.options.popover.air), this.$popover.on("mousedown", function() {
                t4.hidable = false;
              }), this.$popover.on("mouseup", function() {
                t4.hidable = true;
              });
            } }, { key: "destroy", value: function() {
              this.$popover.remove();
            } }, { key: "update", value: function(t4) {
              var n4 = this.context.invoke("editor.currentStyle");
              if (!n4.range || n4.range.isCollapsed() && !t4)
                this.hide();
              else {
                var o3 = { left: this.pageX, top: this.pageY }, i3 = e2()(this.options.container).offset();
                o3.top -= i3.top, o3.left -= i3.left, this.$popover.css({ display: "block", left: Math.max(o3.left, 0) + -5, top: o3.top + 5 }), this.context.invoke("buttons.updateCurrentStyle", this.$popover);
              }
            } }, { key: "updateCodeview", value: function(t4) {
              this.ui.toggleBtnActive(this.$popover.find(".btn-codeview"), t4), t4 && this.hide();
            } }, { key: "hide", value: function() {
              this.hidable && this.$popover.hide();
            } }]) && Ce(n3.prototype, o2), i2 && Ce(n3, i2), t3;
          }();
          function Se(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          var Te = function() {
            function t3(n4) {
              var o3 = this;
              !function(t4, e3) {
                if (!(t4 instanceof e3))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.context = n4, this.ui = e2().summernote.ui, this.$editable = n4.layoutInfo.editable, this.options = n4.options, this.hint = this.options.hint || [], this.direction = this.options.hintDirection || "bottom", this.hints = Array.isArray(this.hint) ? this.hint : [this.hint], this.events = { "summernote.keyup": function(t4, e3) {
                e3.isDefaultPrevented() || o3.handleKeyup(e3);
              }, "summernote.keydown": function(t4, e3) {
                o3.handleKeydown(e3);
              }, "summernote.disable summernote.dialog.shown summernote.blur": function() {
                o3.hide();
              } };
            }
            var n3, o2, i2;
            return n3 = t3, o2 = [{ key: "shouldInitialize", value: function() {
              return this.hints.length > 0;
            } }, { key: "initialize", value: function() {
              var t4 = this;
              this.lastWordRange = null, this.matchingWord = null, this.$popover = this.ui.popover({ className: "note-hint-popover", hideArrow: true, direction: "" }).render().appendTo(this.options.container), this.$popover.hide(), this.$content = this.$popover.find(".popover-content,.note-popover-content"), this.$content.on("click", ".note-hint-item", function(n4) {
                t4.$content.find(".active").removeClass("active"), e2()(n4.currentTarget).addClass("active"), t4.replace();
              }), this.$popover.on("mousedown", function(t5) {
                t5.preventDefault();
              });
            } }, { key: "destroy", value: function() {
              this.$popover.remove();
            } }, { key: "selectItem", value: function(t4) {
              this.$content.find(".active").removeClass("active"), t4.addClass("active"), this.$content[0].scrollTop = t4[0].offsetTop - this.$content.innerHeight() / 2;
            } }, { key: "moveDown", value: function() {
              var t4 = this.$content.find(".note-hint-item.active"), e3 = t4.next();
              if (e3.length)
                this.selectItem(e3);
              else {
                var n4 = t4.parent().next();
                n4.length || (n4 = this.$content.find(".note-hint-group").first()), this.selectItem(n4.find(".note-hint-item").first());
              }
            } }, { key: "moveUp", value: function() {
              var t4 = this.$content.find(".note-hint-item.active"), e3 = t4.prev();
              if (e3.length)
                this.selectItem(e3);
              else {
                var n4 = t4.parent().prev();
                n4.length || (n4 = this.$content.find(".note-hint-group").last()), this.selectItem(n4.find(".note-hint-item").last());
              }
            } }, { key: "replace", value: function() {
              var t4 = this.$content.find(".note-hint-item.active");
              if (t4.length) {
                var n4 = this.nodeFromItem(t4);
                if (null !== this.matchingWord && 0 === this.matchingWord.length)
                  this.lastWordRange.so = this.lastWordRange.eo;
                else if (null !== this.matchingWord && this.matchingWord.length > 0 && !this.lastWordRange.isCollapsed()) {
                  var o3 = this.lastWordRange.eo - this.lastWordRange.so - this.matchingWord.length;
                  o3 > 0 && (this.lastWordRange.so += o3);
                }
                if (this.lastWordRange.insertNode(n4), "next" === this.options.hintSelect) {
                  var i3 = document.createTextNode("");
                  e2()(n4).after(i3), yt.createFromNodeBefore(i3).select();
                } else
                  yt.createFromNodeAfter(n4).select();
                this.lastWordRange = null, this.hide(), this.context.invoke("editor.focus"), this.context.triggerEvent("change", this.$editable.html(), this.$editable);
              }
            } }, { key: "nodeFromItem", value: function(t4) {
              var e3 = this.hints[t4.data("index")], n4 = t4.data("item"), o3 = e3.content ? e3.content(n4) : n4;
              return "string" == typeof o3 && (o3 = ht.createText(o3)), o3;
            } }, { key: "createItemTemplates", value: function(t4, n4) {
              var o3 = this.hints[t4];
              return n4.map(function(n5) {
                var i3 = e2()('<div class="note-hint-item"></div>');
                return i3.append(o3.template ? o3.template(n5) : n5 + ""), i3.data({ index: t4, item: n5 }), i3;
              });
            } }, { key: "handleKeydown", value: function(t4) {
              this.$popover.is(":visible") && (t4.keyCode === wt.code.ENTER ? (t4.preventDefault(), this.replace()) : t4.keyCode === wt.code.UP ? (t4.preventDefault(), this.moveUp()) : t4.keyCode === wt.code.DOWN && (t4.preventDefault(), this.moveDown()));
            } }, { key: "searchKeyword", value: function(t4, e3, n4) {
              var o3 = this.hints[t4];
              if (o3 && o3.match.test(e3) && o3.search) {
                var i3 = o3.match.exec(e3);
                this.matchingWord = i3[0], o3.search(i3[1], n4);
              } else
                n4();
            } }, { key: "createGroup", value: function(t4, n4) {
              var o3 = this, i3 = e2()('<div class="note-hint-group note-hint-group-' + t4 + '"></div>');
              return this.searchKeyword(t4, n4, function(e3) {
                (e3 = e3 || []).length && (i3.html(o3.createItemTemplates(t4, e3)), o3.show());
              }), i3;
            } }, { key: "handleKeyup", value: function(t4) {
              var n4 = this;
              if (!k.contains([wt.code.ENTER, wt.code.UP, wt.code.DOWN], t4.keyCode)) {
                var o3, i3, r2 = this.context.invoke("editor.getLastRange");
                if ("words" === this.options.hintMode) {
                  if (o3 = r2.getWordsRange(r2), i3 = o3.toString(), this.hints.forEach(function(t5) {
                    if (t5.match.test(i3))
                      return o3 = r2.getWordsMatchRange(t5.match), false;
                  }), !o3)
                    return void this.hide();
                  i3 = o3.toString();
                } else
                  o3 = r2.getWordRange(), i3 = o3.toString();
                if (this.hints.length && i3) {
                  this.$content.empty();
                  var a2 = m.rect2bnd(k.last(o3.getClientRects())), s2 = e2()(this.options.container).offset();
                  a2 && (a2.top -= s2.top, a2.left -= s2.left, this.$popover.hide(), this.lastWordRange = o3, this.hints.forEach(function(t5, e3) {
                    t5.match.test(i3) && n4.createGroup(e3, i3).appendTo(n4.$content);
                  }), this.$content.find(".note-hint-item:first").addClass("active"), "top" === this.direction ? this.$popover.css({ left: a2.left, top: a2.top - this.$popover.outerHeight() - 5 }) : this.$popover.css({ left: a2.left, top: a2.top + a2.height + 5 }));
                } else
                  this.hide();
              }
            } }, { key: "show", value: function() {
              this.$popover.show();
            } }, { key: "hide", value: function() {
              this.$popover.hide();
            } }], o2 && Se(n3.prototype, o2), i2 && Se(n3, i2), t3;
          }();
          function Ee(t3) {
            return Ee = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, Ee(t3);
          }
          function Ie(t3, e3) {
            for (var n3 = 0; n3 < e3.length; n3++) {
              var o2 = e3[n3];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(t3, o2.key, o2);
            }
          }
          e2().summernote = e2().extend(e2().summernote, { version: "0.8.20", plugins: {}, dom: ht, range: yt, lists: k, options: { langInfo: e2().summernote.lang["en-US"], editing: true, modules: { editor: Ft, clipboard: Ht, dropzone: Bt, codeview: jt, statusbar: Kt, fullscreen: qt, handle: Gt, hintPopover: Te, autoLink: Qt, autoSync: Jt, autoReplace: ee, placeholder: oe, buttons: re, toolbar: se, linkDialog: ce, linkPopover: de, imageDialog: fe, imagePopover: me, tablePopover: ge, videoDialog: ye, helpDialog: we, airPopover: xe }, buttons: {}, lang: "en-US", followingToolbar: false, toolbarPosition: "top", otherStaticBar: "", codeviewKeepButton: false, toolbar: [["style", ["style"]], ["font", ["bold", "underline", "clear"]], ["fontname", ["fontname"]], ["color", ["color"]], ["para", ["ul", "ol", "paragraph"]], ["table", ["table"]], ["insert", ["link", "picture", "video"]], ["view", ["fullscreen", "codeview", "help"]]], popatmouse: true, popover: { image: [["resize", ["resizeFull", "resizeHalf", "resizeQuarter", "resizeNone"]], ["float", ["floatLeft", "floatRight", "floatNone"]], ["remove", ["removeMedia"]]], link: [["link", ["linkDialogShow", "unlink"]]], table: [["add", ["addRowDown", "addRowUp", "addColLeft", "addColRight"]], ["delete", ["deleteRow", "deleteCol", "deleteTable"]]], air: [["color", ["color"]], ["font", ["bold", "underline", "clear"]], ["para", ["ul", "paragraph"]], ["table", ["table"]], ["insert", ["link", "picture"]], ["view", ["fullscreen", "codeview"]]] }, airMode: false, overrideContextMenu: false, width: null, height: null, linkTargetBlank: true, useProtocol: true, defaultProtocol: "http://", focus: false, tabDisabled: false, tabSize: 4, styleWithCSS: false, shortcuts: true, textareaAutoSync: true, tooltip: "auto", container: null, maxTextLength: 0, blockquoteBreakingLevel: 2, spellCheck: true, disableGrammar: false, placeholder: null, inheritPlaceholder: false, recordEveryKeystroke: false, historyLimit: 200, showDomainOnlyForAutolink: false, hintMode: "word", hintSelect: "after", hintDirection: "bottom", styleTags: ["p", "blockquote", "pre", "h1", "h2", "h3", "h4", "h5", "h6"], fontNames: ["Arial", "Arial Black", "Comic Sans MS", "Courier New", "Helvetica Neue", "Helvetica", "Impact", "Lucida Grande", "Tahoma", "Times New Roman", "Verdana"], fontNamesIgnoreCheck: [], addDefaultFonts: true, fontSizes: ["8", "9", "10", "11", "12", "14", "18", "24", "36"], fontSizeUnits: ["px", "pt"], colors: [["#000000", "#424242", "#636363", "#9C9C94", "#CEC6CE", "#EFEFEF", "#F7F7F7", "#FFFFFF"], ["#FF0000", "#FF9C00", "#FFFF00", "#00FF00", "#00FFFF", "#0000FF", "#9C00FF", "#FF00FF"], ["#F7C6CE", "#FFE7CE", "#FFEFC6", "#D6EFD6", "#CEDEE7", "#CEE7F7", "#D6D6E7", "#E7D6DE"], ["#E79C9C", "#FFC69C", "#FFE79C", "#B5D6A5", "#A5C6CE", "#9CC6EF", "#B5A5D6", "#D6A5BD"], ["#E76363", "#F7AD6B", "#FFD663", "#94BD7B", "#73A5AD", "#6BADDE", "#8C7BC6", "#C67BA5"], ["#CE0000", "#E79439", "#EFC631", "#6BA54A", "#4A7B8C", "#3984C6", "#634AA5", "#A54A7B"], ["#9C0000", "#B56308", "#BD9400", "#397B21", "#104A5A", "#085294", "#311873", "#731842"], ["#630000", "#7B3900", "#846300", "#295218", "#083139", "#003163", "#21104A", "#4A1031"]], colorsName: [["Black", "Tundora", "Dove Gray", "Star Dust", "Pale Slate", "Gallery", "Alabaster", "White"], ["Red", "Orange Peel", "Yellow", "Green", "Cyan", "Blue", "Electric Violet", "Magenta"], ["Azalea", "Karry", "Egg White", "Zanah", "Botticelli", "Tropical Blue", "Mischka", "Twilight"], ["Tonys Pink", "Peach Orange", "Cream Brulee", "Sprout", "Casper", "Perano", "Cold Purple", "Careys Pink"], ["Mandy", "Rajah", "Dandelion", "Olivine", "Gulf Stream", "Viking", "Blue Marguerite", "Puce"], ["Guardsman Red", "Fire Bush", "Golden Dream", "Chelsea Cucumber", "Smalt Blue", "Boston Blue", "Butterfly Bush", "Cadillac"], ["Sangria", "Mai Tai", "Buddha Gold", "Forest Green", "Eden", "Venice Blue", "Meteorite", "Claret"], ["Rosewood", "Cinnamon", "Olive", "Parsley", "Tiber", "Midnight Blue", "Valentino", "Loulou"]], colorButton: { foreColor: "#000000", backColor: "#FFFF00" }, lineHeights: ["1.0", "1.2", "1.4", "1.5", "1.6", "1.8", "2.0", "3.0"], tableClassName: "table table-bordered", insertTableMaxSize: { col: 10, row: 10 }, dialogsInBody: false, dialogsFade: false, maximumImageFileSize: null, acceptImageFileTypes: "image/*", callbacks: { onBeforeCommand: null, onBlur: null, onBlurCodeview: null, onChange: null, onChangeCodeview: null, onDialogShown: null, onEnter: null, onFocus: null, onImageLinkInsert: null, onImageUpload: null, onImageUploadError: null, onInit: null, onKeydown: null, onKeyup: null, onMousedown: null, onMouseup: null, onPaste: null, onScroll: null }, codemirror: { mode: "text/html", htmlMode: true, lineNumbers: true }, codeviewFilter: true, codeviewFilterRegex: /<\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi, codeviewIframeFilter: true, codeviewIframeWhitelistSrc: [], codeviewIframeWhitelistSrcBase: ["www.youtube.com", "www.youtube-nocookie.com", "www.facebook.com", "vine.co", "instagram.com", "player.vimeo.com", "www.dailymotion.com", "player.youku.com", "jumpingbean.tv", "v.qq.com"], keyMap: { pc: { ESC: "escape", ENTER: "insertParagraph", "CTRL+Z": "undo", "CTRL+Y": "redo", TAB: "tab", "SHIFT+TAB": "untab", "CTRL+B": "bold", "CTRL+I": "italic", "CTRL+U": "underline", "CTRL+SHIFT+S": "strikethrough", "CTRL+BACKSLASH": "removeFormat", "CTRL+SHIFT+L": "justifyLeft", "CTRL+SHIFT+E": "justifyCenter", "CTRL+SHIFT+R": "justifyRight", "CTRL+SHIFT+J": "justifyFull", "CTRL+SHIFT+NUM7": "insertUnorderedList", "CTRL+SHIFT+NUM8": "insertOrderedList", "CTRL+LEFTBRACKET": "outdent", "CTRL+RIGHTBRACKET": "indent", "CTRL+NUM0": "formatPara", "CTRL+NUM1": "formatH1", "CTRL+NUM2": "formatH2", "CTRL+NUM3": "formatH3", "CTRL+NUM4": "formatH4", "CTRL+NUM5": "formatH5", "CTRL+NUM6": "formatH6", "CTRL+ENTER": "insertHorizontalRule", "CTRL+K": "linkDialog.show" }, mac: { ESC: "escape", ENTER: "insertParagraph", "CMD+Z": "undo", "CMD+SHIFT+Z": "redo", TAB: "tab", "SHIFT+TAB": "untab", "CMD+B": "bold", "CMD+I": "italic", "CMD+U": "underline", "CMD+SHIFT+S": "strikethrough", "CMD+BACKSLASH": "removeFormat", "CMD+SHIFT+L": "justifyLeft", "CMD+SHIFT+E": "justifyCenter", "CMD+SHIFT+R": "justifyRight", "CMD+SHIFT+J": "justifyFull", "CMD+SHIFT+NUM7": "insertUnorderedList", "CMD+SHIFT+NUM8": "insertOrderedList", "CMD+LEFTBRACKET": "outdent", "CMD+RIGHTBRACKET": "indent", "CMD+NUM0": "formatPara", "CMD+NUM1": "formatH1", "CMD+NUM2": "formatH2", "CMD+NUM3": "formatH3", "CMD+NUM4": "formatH4", "CMD+NUM5": "formatH5", "CMD+NUM6": "formatH6", "CMD+ENTER": "insertHorizontalRule", "CMD+K": "linkDialog.show" } }, icons: { align: "note-icon-align", alignCenter: "note-icon-align-center", alignJustify: "note-icon-align-justify", alignLeft: "note-icon-align-left", alignRight: "note-icon-align-right", rowBelow: "note-icon-row-below", colBefore: "note-icon-col-before", colAfter: "note-icon-col-after", rowAbove: "note-icon-row-above", rowRemove: "note-icon-row-remove", colRemove: "note-icon-col-remove", indent: "note-icon-align-indent", outdent: "note-icon-align-outdent", arrowsAlt: "note-icon-arrows-alt", bold: "note-icon-bold", caret: "note-icon-caret", circle: "note-icon-circle", close: "note-icon-close", code: "note-icon-code", eraser: "note-icon-eraser", floatLeft: "note-icon-float-left", floatRight: "note-icon-float-right", font: "note-icon-font", frame: "note-icon-frame", italic: "note-icon-italic", link: "note-icon-link", unlink: "note-icon-chain-broken", magic: "note-icon-magic", menuCheck: "note-icon-menu-check", minus: "note-icon-minus", orderedlist: "note-icon-orderedlist", pencil: "note-icon-pencil", picture: "note-icon-picture", question: "note-icon-question", redo: "note-icon-redo", rollback: "note-icon-rollback", square: "note-icon-square", strikethrough: "note-icon-strikethrough", subscript: "note-icon-subscript", superscript: "note-icon-superscript", table: "note-icon-table", textHeight: "note-icon-text-height", trash: "note-icon-trash", underline: "note-icon-underline", undo: "note-icon-undo", unorderedlist: "note-icon-unorderedlist", video: "note-icon-video" } } });
          var $e = function() {
            function t3(e3, n4, o3, i3) {
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.markup = e3, this.children = n4, this.options = o3, this.callback = i3;
            }
            var n3, o2, i2;
            return n3 = t3, (o2 = [{ key: "render", value: function(t4) {
              var n4 = e2()(this.markup);
              if (this.options && this.options.contents && n4.html(this.options.contents), this.options && this.options.className && n4.addClass(this.options.className), this.options && this.options.data && e2().each(this.options.data, function(t5, e3) {
                n4.attr("data-" + t5, e3);
              }), this.options && this.options.click && n4.on("click", this.options.click), this.children) {
                var o3 = n4.find(".note-children-container");
                this.children.forEach(function(t5) {
                  t5.render(o3.length ? o3 : n4);
                });
              }
              return this.callback && this.callback(n4, this.options), this.options && this.options.callback && this.options.callback(n4), t4 && t4.append(n4), n4;
            } }]) && Ie(n3.prototype, o2), i2 && Ie(n3, i2), t3;
          }();
          const Ne = function(t3, e3) {
            return function() {
              var n3 = "object" === Ee(arguments[1]) ? arguments[1] : arguments[0], o2 = Array.isArray(arguments[0]) ? arguments[0] : [];
              return n3 && n3.children && (o2 = n3.children), new $e(t3, o2, n3, e3);
            };
          };
          function Pe(t3) {
            return Pe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t4) {
              return typeof t4;
            } : function(t4) {
              return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            }, Pe(t3);
          }
          var Re = Ne('<div class="note-editor note-frame card"></div>'), Le = Ne('<div class="note-toolbar card-header" role="toolbar"></div>'), Ae = Ne('<div class="note-editing-area"></div>'), Fe = Ne('<textarea class="note-codable" aria-multiline="true"></textarea>'), De = Ne('<div class="note-editable card-block" contentEditable="true" role="textbox" aria-multiline="true"></div>'), He = Ne(['<output class="note-status-output" role="status" aria-live="polite"></output>', '<div class="note-statusbar" role="status">', '<div class="note-resizebar" aria-label="Resize">', '<div class="note-icon-bar"></div>', '<div class="note-icon-bar"></div>', '<div class="note-icon-bar"></div>', "</div>", "</div>"].join("")), ze = Ne('<div class="note-editor note-airframe"></div>'), Be = Ne(['<div class="note-editable" contentEditable="true" role="textbox" aria-multiline="true"></div>', '<output class="note-status-output" role="status" aria-live="polite"></output>'].join("")), Me = Ne('<div class="note-btn-group btn-group"></div>'), Oe = Ne('<div class="note-dropdown-menu dropdown-menu" role="list"></div>', function(t3, e3) {
            var n3 = Array.isArray(e3.items) ? e3.items.map(function(t4) {
              var n4 = "string" == typeof t4 ? t4 : t4.value || "", o2 = e3.template ? e3.template(t4) : t4, i2 = "object" === Pe(t4) ? t4.option : void 0;
              return '<a class="dropdown-item" href="#" ' + ('data-value="' + n4 + '"' + (void 0 !== i2 ? ' data-option="' + i2 + '"' : "")) + ' role="listitem" aria-label="' + n4 + '">' + o2 + "</a>";
            }).join("") : e3.items;
            t3.html(n3).attr({ "aria-label": e3.title }), e3 && e3.codeviewKeepButton && t3.addClass("note-codeview-keep");
          }), Ue = function(t3) {
            return t3;
          }, je = Ne('<div class="note-dropdown-menu dropdown-menu note-check" role="list"></div>', function(t3, e3) {
            var n3 = Array.isArray(e3.items) ? e3.items.map(function(t4) {
              var n4 = "string" == typeof t4 ? t4 : t4.value || "", o2 = e3.template ? e3.template(t4) : t4;
              return '<a class="dropdown-item" href="#" data-value="' + n4 + '" role="listitem" aria-label="' + t4 + '">' + qe(e3.checkClassName) + " " + o2 + "</a>";
            }).join("") : e3.items;
            t3.html(n3).attr({ "aria-label": e3.title }), e3 && e3.codeviewKeepButton && t3.addClass("note-codeview-keep");
          }), We = Ne('<div class="modal note-modal" aria-hidden="false" tabindex="-1" role="dialog"></div>', function(t3, e3) {
            e3.fade && t3.addClass("fade"), t3.attr({ "aria-label": e3.title }), t3.html(['<div class="modal-dialog">', '<div class="modal-content">', e3.title ? '<div class="modal-header"><h4 class="modal-title">' + e3.title + '</h4><button type="button" class="close" data-dismiss="modal" aria-label="Close" aria-hidden="true">&times;</button></div>' : "", '<div class="modal-body">' + e3.body + "</div>", e3.footer ? '<div class="modal-footer">' + e3.footer + "</div>" : "", "</div>", "</div>"].join(""));
          }), Ke = Ne(['<div class="note-popover popover in">', '<div class="arrow"></div>', '<div class="popover-content note-children-container"></div>', "</div>"].join(""), function(t3, e3) {
            var n3 = void 0 !== e3.direction ? e3.direction : "bottom";
            t3.addClass(n3), e3.hideArrow && t3.find(".arrow").hide();
          }), Ve = Ne('<div class="form-check"></div>', function(t3, e3) {
            t3.html(['<label class="form-check-label"' + (e3.id ? ' for="note-' + e3.id + '"' : "") + ">", '<input type="checkbox" class="form-check-input"' + (e3.id ? ' id="note-' + e3.id + '"' : ""), e3.checked ? " checked" : "", ' aria-label="' + (e3.text ? e3.text : "") + '"', ' aria-checked="' + (e3.checked ? "true" : "false") + '"/>', " " + (e3.text ? e3.text : "") + "</label>"].join(""));
          }), qe = function(t3, e3) {
            return t3.match(/^</) ? t3 : "<" + (e3 = e3 || "i") + ' class="' + t3 + '"></' + e3 + ">";
          };
          e2().summernote = e2().extend(e2().summernote, { ui_template: function(t3) {
            return { editor: Re, toolbar: Le, editingArea: Ae, codable: Fe, editable: De, statusbar: He, airEditor: ze, airEditable: Be, buttonGroup: Me, dropdown: Oe, dropdownButtonContents: Ue, dropdownCheck: je, dialog: We, popover: Ke, icon: qe, checkbox: Ve, options: t3, palette: function(e3, n3) {
              return Ne('<div class="note-color-palette"></div>', function(e4, n4) {
                for (var o2 = [], i2 = 0, r2 = n4.colors.length; i2 < r2; i2++) {
                  for (var a2 = n4.eventName, s2 = n4.colors[i2], l2 = n4.colorsName[i2], c2 = [], u2 = 0, d2 = s2.length; u2 < d2; u2++) {
                    var h2 = s2[u2], f2 = l2[u2];
                    c2.push(['<button type="button" class="note-color-btn"', 'style="background-color:', h2, '" ', 'data-event="', a2, '" ', 'data-value="', h2, '" ', 'title="', f2, '" ', 'aria-label="', f2, '" ', 'data-toggle="button" tabindex="-1"></button>'].join(""));
                  }
                  o2.push('<div class="note-color-row">' + c2.join("") + "</div>");
                }
                e4.html(o2.join("")), n4.tooltip && e4.find(".note-color-btn").tooltip({ container: n4.container || t3.container, trigger: "hover", placement: "bottom" });
              })(e3, n3);
            }, button: function(n3, o2) {
              return Ne('<button type="button" class="note-btn btn btn-light btn-sm" tabindex="-1"></button>', function(n4, o3) {
                o3 && o3.tooltip && n4.attr({ title: o3.tooltip, "aria-label": o3.tooltip }).tooltip({ container: o3.container || t3.container, trigger: "hover", placement: "bottom" }).on("click", function(t4) {
                  e2()(t4.currentTarget).tooltip("hide");
                }), o3 && o3.codeviewButton && n4.addClass("note-codeview-keep");
              })(n3, o2);
            }, toggleBtn: function(t4, e3) {
              t4.toggleClass("disabled", !e3), t4.attr("disabled", !e3);
            }, toggleBtnActive: function(t4, e3) {
              t4.toggleClass("active", e3);
            }, onDialogShown: function(t4, e3) {
              t4.one("shown.bs.modal", e3);
            }, onDialogHidden: function(t4, e3) {
              t4.one("hidden.bs.modal", e3);
            }, showDialog: function(t4) {
              t4.modal("show");
            }, hideDialog: function(t4) {
              t4.modal("hide");
            }, createLayout: function(e3) {
              var n3 = (t3.airMode ? ze([Ae([Fe(), Be()])]) : "bottom" === t3.toolbarPosition ? Re([Ae([Fe(), De()]), Le(), He()]) : Re([Le(), Ae([Fe(), De()]), He()])).render();
              return n3.insertAfter(e3), { note: e3, editor: n3, toolbar: n3.find(".note-toolbar"), editingArea: n3.find(".note-editing-area"), editable: n3.find(".note-editable"), codable: n3.find(".note-codable"), statusbar: n3.find(".note-statusbar") };
            }, removeLayout: function(t4, e3) {
              t4.html(e3.editable.html()), e3.editor.remove(), t4.show();
            } };
          }, interface: "bs4" }), e2().summernote.options.styleTags = ["p", { title: "Blockquote", tag: "blockquote", className: "blockquote", value: "blockquote" }, "pre", "h1", "h2", "h3", "h4", "h5", "h6"];
        })(), i;
      })();
    });
  }
});
export default require_summernote_bs4_min();
/*! Bundled license information:

admin-lte/plugins/summernote/summernote-bs4.min.js:
  (*! Summernote v0.8.20 | (c) 2013- Alan Hong and contributors | MIT license *)
*/
//# sourceMappingURL=admin-lte_plugins_summernote_summernote-bs4__min__js.js.map
